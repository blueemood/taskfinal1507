{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\test11070\\\\src\\\\components\\\\UpdateProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"../stylesheets/projects.css\";\nimport { Container, Form, Button, Row, Col, Badge, FloatingLabel, Popover, Dropdown, ButtonGroup, DropdownButton, OverlayTrigger, FormControl, Modal, ListGroup, InputGroup } from 'react-bootstrap';\nimport image_S1 from '../images/abstract10.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateProject = _ref => {\n  _s();\n\n  let {\n    projectData\n  } = _ref;\n  const [fullscreen, setFullscreen] = useState(true);\n  const [show, setShow] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleAlertClose = () => {\n    setShowAlert(false);\n  };\n\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [alertTitle, setAlertTitle] = useState(\"\");\n\n  const handleShow = () => {\n    setFullscreen(true);\n    setShow(true);\n  };\n\n  const handleHideModal = () => {\n    setShow(false);\n  };\n\n  const [smShow, setSmShow] = useState(false);\n  const [desigModal, setDesigModal] = useState(false);\n  const [phaseModaInUpdate, setPhaseModaInUpdate] = useState(false);\n  const [phaseEditModalInUpdate, setPhaseEditModalInUpdate] = useState(false);\n  const [txtInput, setTxtInput] = useState(\"\");\n  const [updateProjectPhases, setUpdateProjectPhases] = useState([]);\n  const [allfriends, setAllfriends] = useState([]);\n  const [friends, setFriends] = useState([]);\n  const [members, setMembers] = useState([]);\n  const [membersIds, setMembersIds] = useState([]);\n  const [designationInput, setDesignationInput] = useState();\n  const [phaseInput, setPhaseInput] = useState(\"\");\n  const [phaseEditInput, setPhaseEditInput] = useState(\"\");\n  const [desigId, setDesigId] = useState(\"\");\n  const [projectFiles, setProjectFiles] = useState([]);\n  const [projectDetails, setProjectDetails] = useState({\n    projectTitle: \"\",\n    projectDiscription: \"\",\n    startDate: \"\",\n    dueDate: \"\",\n    projectType: \"\"\n  });\n  let name, value;\n\n  const handleInputs = e => {\n    name = e.target.name;\n    value = e.target.value;\n    setProjectDetails({ ...projectDetails,\n      [name]: value\n    });\n  };\n\n  const handleFiles = e => {\n    let myfiles = e.target.files;\n    console.log(myfiles);\n    setProjectFiles(myfiles);\n  };\n\n  const getFriends = async () => {\n    try {\n      const response = await fetch('https://taskhive-backend-testing.onrender.com/getFriends', {\n        method: 'GET'\n      });\n      const data = await response.json();\n      console.log(data);\n      setAllfriends(data);\n      setFriends(data);\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getFriends();\n  }, []);\n\n  const forUpdatingProject = () => {\n    if (projectData.currentProject) {\n      let getMembers = [];\n      let getMembersIds = [];\n      projectData.currentProject.members.map(element => {\n        let findMember = projectData.allfriends.find(element1 => element1._id === element.memberRef);\n        getMembersIds.push(findMember._id);\n        let memberWithDesig = Object.assign(findMember, {\n          designation: element.designation\n        });\n        getMembers.push(memberWithDesig);\n      }); // console.log(projectSelected)\n\n      setMembersIds(getMembersIds);\n      setMembers(getMembers);\n      setUpdateProjectPhases(projectData.currentProject.projectPhases);\n    }\n  };\n\n  useEffect(() => {\n    forUpdatingProject();\n  }, [projectData.currentProject]);\n\n  const handelDesigInput = e => {\n    let input = e.target.value;\n    setDesignationInput(input);\n    console.log(designationInput);\n  };\n\n  const showSearchResult = () => {\n    if (txtInput === \"\") {\n      // console.log(\"AA\")\n      setAllfriends(friends);\n    } else {\n      let newList = allfriends.filter(element => {\n        return element.name.toLowerCase().includes(txtInput.toLowerCase());\n      });\n      setAllfriends(newList);\n    }\n  };\n\n  useEffect(() => {\n    showSearchResult();\n  }, [txtInput]);\n\n  const handelChange = e => {\n    setTxtInput(e.target.value); // console.log(txtInput)\n\n    showSearchResult();\n  };\n\n  const addMember = e => {\n    let id = e.target.id;\n\n    if (projectData.currentProject) {\n      let getProfile = members.find(element => element._id === id);\n\n      if (getProfile) {\n        projectData.currentProject.members.map(element => {\n          if (element.memberRef === id) {\n            window.alert(\"Exisiting Member\");\n          }\n        });\n      } else {\n        let getProfile = projectData.allfriends.find(element => element._id === id);\n        setMembersIds(membersIds => [...membersIds, getProfile._id]);\n        setMembers(members => [...members, getProfile]);\n        const newList = projectData.allfriends.filter(friendId => {\n          return friendId._id !== id;\n        });\n        setAllfriends(newList);\n      }\n    } else {\n      let getProfile = projectData.allfriends.find(element => element._id === id);\n      setMembersIds(membersIds => [...membersIds, getProfile._id]);\n      setMembers(members => [...members, getProfile]);\n      const newList = projectData.allfriends.filter(friendId => {\n        return friendId._id !== id;\n      });\n      setAllfriends(newList);\n    }\n  };\n\n  const removeMember = e => {\n    let id = e.target.id;\n    let getProfile = members.find(element => element._id === id);\n    let getfriends = allfriends.find(element => element._id === id);\n\n    if (!getfriends) {\n      console.log(\"done\");\n      setAllfriends(allfriends => [...allfriends, getProfile]);\n    }\n\n    const newList = members.filter(friendId => {\n      return friendId._id !== id;\n    });\n    const newIds = membersIds.filter(ids => {\n      return ids !== id;\n    });\n    setMembersIds(newIds); // console.log(newList)\n\n    setMembers(newList);\n  };\n\n  const removeFile = e => {\n    let fileId = e.target.id;\n    let removeSelectedFile = projectData.currentProject.projectFiles.filter(element1 => element1._id !== fileId);\n    projectData.currentProject.projectFiles = removeSelectedFile; // let listedFiles = document.getElementById(\"filesList\")\n\n    let selectedfile = document.getElementById(\"aa\" + fileId);\n    console.log(selectedfile);\n\n    while (selectedfile.hasChildNodes()) {\n      selectedfile.removeChild(selectedfile.firstChild);\n    } // let x = listedFiles.removeChild(selectedfile);\n\n  };\n\n  const handleUpdateProject = async e => {\n    e.preventDefault();\n    console.log(membersIds);\n    let addDesig = [];\n    membersIds.map(membersIds => {\n      let singleId = document.getElementById(membersIds);\n      addDesig.push({\n        memberRef: membersIds,\n        designation: singleId.innerText\n      });\n    });\n    let startDate = document.getElementById(\"startDate\");\n    let dueDate = document.getElementById(\"dueDate\");\n    let projectDiscription = document.getElementById(\"projectDiscription\");\n    let projectTitle = document.getElementById(\"projectTitle\");\n    let projectType = document.getElementById(\"projectType\");\n    let formData = new FormData();\n    formData.append('projectTitle', projectTitle.value);\n    formData.append('projectDiscription', projectDiscription.value);\n    formData.append('startDate', startDate.value);\n    formData.append('dueDate', dueDate.value);\n    formData.append('projectType', projectType.value);\n    formData.append('projectId', JSON.stringify(projectData.currentProject._id));\n    formData.append('projectMembers', JSON.stringify(members));\n    formData.append('projectDesig', JSON.stringify(addDesig));\n    formData.append('existingFiles', JSON.stringify(projectData.currentProject.projectFiles));\n    formData.append('projectPhases', JSON.stringify(updateProjectPhases));\n\n    for (let i = 0; i < projectFiles.length; i++) {\n      formData.append('projectFiles', projectFiles[i]);\n    }\n\n    console.log(updateProjectPhases);\n\n    if (updateProjectPhases.length > 0) {\n      try {\n        const response = await fetch('https://taskhive-backend-testing.onrender.com/updatingProject', {\n          method: \"POST\",\n          body: formData\n        });\n        const data = await response.json();\n\n        if (response.status === 201 && data) {\n          setAlertTitle(\"Alert\");\n          setAlertMessage(\"Project Updated.\");\n          setShowAlert(true);\n          projectData.setFecthTasks(data);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      setAlertTitle(\"Alert\");\n      setAlertMessage(\"Please fill all the fields.\");\n      setShowAlert(true);\n    }\n  };\n\n  const changeDesig = e => {\n    setDesigId(e.target.id);\n    setDesigModal(true);\n  };\n\n  const handleDeisgBtn = () => {\n    console.log(designationInput);\n    let desigTag = document.getElementById(desigId);\n    desigTag.innerText = designationInput;\n    setDesigModal(false); // console.log(desigTag.innerText)\n  };\n\n  const handlePhasesInputInUpdate = e => {\n    const form = e.currentTarget;\n    e.preventDefault();\n\n    if (updateProjectPhases.length <= 9 && phaseInput) {\n      let checkPhase = updateProjectPhases.find(element1 => element1.PhaseTitle === phaseInput);\n\n      if (checkPhase) {\n        setAlertTitle(\"Alert\");\n        setAlertMessage(\"Phase title already exist, Choose a different title.\");\n        setShowAlert(true);\n      } else {\n        if (phaseInput) {\n          let phaseObj = {\n            PhaseTitle: phaseInput,\n            PhaseNum: \"\"\n          };\n          setUpdateProjectPhases(updateProjectPhases => [...updateProjectPhases, phaseObj]);\n        } else {\n          return;\n        }\n      }\n    } else {\n      setAlertTitle(\"Alert\");\n      setAlertMessage(\"Please add minimum 1 or maximum 10 phases per project.\");\n      setShowAlert(true);\n    }\n\n    setPhaseInput(\"\");\n    form.reset();\n  };\n\n  const removePhaseInUpdate = e => {\n    let phaseName = e.target.id;\n    let removeSelectedPhase = updateProjectPhases.filter(element1 => element1.PhaseTitle !== phaseName);\n    setUpdateProjectPhases(removeSelectedPhase);\n  };\n\n  const editPhaseInUpdate = e => {\n    let phaseName = e.target.id;\n    setPhaseEditInput(phaseName);\n    setPhaseEditModalInUpdate(true);\n  };\n\n  const handlePhaseEditInUpdate = e => {\n    const form = e.currentTarget;\n    e.preventDefault();\n    console.log(phaseInput);\n    let checkIndex;\n    updateProjectPhases.map((element, index) => {\n      if (element.PhaseTitle === phaseEditInput) {\n        checkIndex = index;\n      }\n\n      ;\n    });\n    updateProjectPhases[checkIndex].PhaseTitle = phaseInput;\n    setPhaseInput(\"\");\n    form.reset();\n    setPhaseEditModalInUpdate(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      className: \"selectedListItem\",\n      onClick: handleShow,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-edit chat-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 13\n      }, this), \"Update Project\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      fullscreen: fullscreen,\n      onHide: handleHideModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Update Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBody\",\n        children: [projectData.currentProject ? /*#__PURE__*/_jsxDEV(Form, {\n          method: \"POST\",\n          className: \"contactForm\",\n          name: \"projectForm\",\n          id: \"projectForm\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            className: \"formCont\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    className: \"formTxt\",\n                    children: \"Update Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"projectTitle\",\n                    className: \"formInput\",\n                    id: \"projectTitle\",\n                    defaultValue: projectData.currentProject.projectTitle,\n                    placeholder: \"Enter Task\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3 inputGroup\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    className: \"formTxt\",\n                    children: \"Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    name: \"projectType\",\n                    id: \"projectType\",\n                    className: \"formInput\",\n                    defaultValue: projectData.currentProject.projectType,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      className: \"listOption\",\n                      value: \"N/A\",\n                      children: \"N/A\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 430,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      className: \"listOption\",\n                      value: \"Personal\",\n                      children: \"Personal\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 431,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      className: \"listOption\",\n                      value: \"Team\",\n                      children: \"Team\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Discription\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 3,\n                    name: \"projectDiscription\",\n                    className: \"formInput\",\n                    id: \"projectDiscription\",\n                    defaultValue: projectData.currentProject.projectDiscription\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3 inputGroup\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    className: \"formTxt\",\n                    children: \"Start Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"date\",\n                    name: \"startDate\",\n                    id: \"startDate\",\n                    className: \"formInput\",\n                    defaultValue: projectData.currentProject.startDate.substring(0, 10),\n                    placeholder: \"date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3 inputGroup\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    className: \"formTxt\",\n                    children: \"Due Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"date\",\n                    name: \"dueDate\",\n                    id: \"dueDate\",\n                    className: \"formInput\",\n                    defaultValue: projectData.currentProject.dueDate.substring(0, 10),\n                    placeholder: \"date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Add files\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"file\",\n                    multiple: true,\n                    name: \"projectFiles\",\n                    id: \"projectFiles\",\n                    className: \"formInput\",\n                    onChange: handleFiles\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 21\n                }, this), projectData.currentProject.projectFiles.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Existing Files\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                    className: \"filesList\",\n                    children: projectData.currentProject.projectFiles.map((allfiles, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                      as: \"li\",\n                      className: \"d-flex justify-content-between align-items-start singlefile\",\n                      id: \"aa\" + allfiles._id,\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"ms-2 me-auto\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"fw-bold\",\n                          children: allfiles.fileName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 480,\n                          columnNumber: 25\n                        }, this), Math.floor(allfiles.fileSize / 1000000) + 'MB']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 479,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-trash phaseTrashBtn\",\n                        id: allfiles._id,\n                        onClick: removeFile\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 484,\n                        columnNumber: 25\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 473,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(ListGroup, {\n                  children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    className: \"singlefile\",\n                    children: \"No Existing Files\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Add Project Phases\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"addMembers\",\n                  onClick: () => setPhaseModaInUpdate(true),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-plus\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 140\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 68\n                }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                  variant: \"flush\",\n                  className: \"teamlist\",\n                  children: updateProjectPhases.map((element, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    as: \"li\",\n                    className: \"phaseListItem\",\n                    children: /*#__PURE__*/_jsxDEV(Container, {\n                      children: /*#__PURE__*/_jsxDEV(Row, {\n                        children: [/*#__PURE__*/_jsxDEV(Col, {\n                          sm: true,\n                          lg: 8,\n                          children: [\" Phase \", index + 1, \" \", element.PhaseTitle, \"   \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 508,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(Col, {\n                          sm: true,\n                          lg: 2,\n                          children: [\"  \", /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fa fa-edit phaseEditBtn\",\n                            id: element.PhaseTitle,\n                            onClick: editPhaseInUpdate\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 509,\n                            columnNumber: 58\n                          }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 509,\n                            columnNumber: 155\n                          }, this), \" \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 509,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(Col, {\n                          sm: true,\n                          lg: 2,\n                          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fa fa-trash phaseTrashBtn\",\n                            id: element.PhaseTitle,\n                            onClick: removePhaseInUpdate\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 510,\n                            columnNumber: 57\n                          }, this), \"     \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 510,\n                          columnNumber: 41\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 507,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 506,\n                      columnNumber: 34\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Add Team Members\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"addMembers\",\n                  onClick: () => setSmShow(true),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-plus\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 123\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 62\n                }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                  variant: \"flush\",\n                  className: \"teamlist\",\n                  children: members.map((members, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    as: \"li\",\n                    className: \"d-flex justify-content-between align-items-start phaseListItem\",\n                    children: /*#__PURE__*/_jsxDEV(Container, {\n                      children: /*#__PURE__*/_jsxDEV(Row, {\n                        className: \"justify-content-md-center\",\n                        children: [/*#__PURE__*/_jsxDEV(Col, {\n                          lg: \"3\",\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: members.image,\n                            onError: e => {\n                              e.target.onError = null;\n                              e.target.src = image_S1;\n                            },\n                            className: \"profileImages\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 529,\n                            columnNumber: 41\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 528,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(Col, {\n                          lg: \"3\",\n                          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                            children: members.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 536,\n                            columnNumber: 41\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 535,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(Col, {\n                          lg: \"4\",\n                          children: members.designation ? /*#__PURE__*/_jsxDEV(\"p\", {\n                            id: members._id,\n                            onClick: changeDesig,\n                            className: \"changeDesig\",\n                            children: members.designation\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 541,\n                            columnNumber: 41\n                          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                            id: members._id,\n                            onClick: changeDesig,\n                            className: \"changeDesig\",\n                            children: \"Add Designation\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 543,\n                            columnNumber: 41\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 539,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(Col, {\n                          lg: \"2\",\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fa fa-trash phaseTrashBtn\",\n                            id: members._id,\n                            onClick: removeMember\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 547,\n                            columnNumber: 41\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 546,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 527,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 33\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"justify-content-md-center\",\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                sm: true,\n                lg: 5,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"projectSubmitBtn\",\n                  variant: \"primary\",\n                  type: \"submit\",\n                  onClick: handleUpdateProject,\n                  children: \"Update Project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No selected Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"sm\",\n      show: smShow,\n      onHide: () => setSmShow(false),\n      \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-sm\",\n          children: \"Add Members\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBody\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  placeholder: \"Search Members\",\n                  \"aria-label\": \"Recipient's username\",\n                  \"aria-describedby\": \"basic-addon2\",\n                  value: txtInput,\n                  onChange: handelChange,\n                  className: \"formInput\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(ListGroup, {\n                variant: \"flush\",\n                children: allfriends.map((allfriends, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  as: \"li\",\n                  className: \"d-flex justify-content-between align-items-start membersList\",\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: allfriends.image,\n                        onError: e => {\n                          e.target.onError = null;\n                          e.target.src = image_S1;\n                        },\n                        className: \"profileImages\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 611,\n                        columnNumber: 41\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 610,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: allfriends.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 618,\n                        columnNumber: 41\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 617,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-plus addFriendIcon\",\n                        id: allfriends._id,\n                        onClick: addMember\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 621,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 620,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 609,\n                    columnNumber: 33\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"sm\",\n      show: desigModal,\n      onHide: () => setDesigModal(false),\n      \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-sm\",\n          children: \"Add Designation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBody\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                  placeholder: \"Enter Designation\",\n                  \"aria-label\": \"Recipient's username\",\n                  \"aria-describedby\": \"basic-addon2\",\n                  className: \"formInput\",\n                  onChange: handelDesigInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-secondary\",\n                  className: \"searchBtn\",\n                  id: \"button-addon2\",\n                  onClick: handleDeisgBtn,\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-plus\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 656,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"sm\",\n      show: phaseModaInUpdate,\n      onHide: () => setPhaseModaInUpdate(false),\n      \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-sm\",\n          children: \"Project Phases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBody\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You can only add 1 to 10 phases per project.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            noValidate: true,\n            onSubmit: handlePhasesInputInUpdate,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"validationCustom01\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Phase Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                type: \"text\",\n                placeholder: \"Phase Title\",\n                onChange: e => setPhaseInput(e.target.value),\n                isValid: phaseInput,\n                className: \"formInput\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Invalid Input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"phaseBtn\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"sm\",\n      show: phaseEditModalInUpdate,\n      onHide: () => setPhaseEditModalInUpdate(false),\n      \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-sm\",\n          children: \"Edit Phases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBody\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            noValidate: true,\n            onSubmit: handlePhaseEditInUpdate,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"validationCustom01\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Phase Title \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                type: \"text\",\n                placeholder: \"Phase Title\",\n                defaultValue: phaseEditInput,\n                onChange: e => setPhaseInput(e.target.value),\n                isValid: phaseInput,\n                className: \"formInput\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Invalid Input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"saveBtnPhase\",\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 737,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"sm\",\n      show: showAlert,\n      onHide: handleAlertClose,\n      backdrop: \"static\",\n      keyboard: false,\n      \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-sm\",\n          children: alertTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBodyStatic\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: alertMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        className: \"modalFooter\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"saveBtn\",\n          onClick: handleAlertClose,\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpdateProject, \"KkNZIMvphWGvfu+A55YoTpAsbuI=\");\n\n_c = UpdateProject;\nexport default UpdateProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProject\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/test11070/src/components/UpdateProject.js"],"names":["React","useState","useEffect","useNavigate","Container","Form","Button","Row","Col","Badge","FloatingLabel","Popover","Dropdown","ButtonGroup","DropdownButton","OverlayTrigger","FormControl","Modal","ListGroup","InputGroup","image_S1","UpdateProject","projectData","fullscreen","setFullscreen","show","setShow","showAlert","setShowAlert","handleAlertClose","alertMessage","setAlertMessage","alertTitle","setAlertTitle","handleShow","handleHideModal","smShow","setSmShow","desigModal","setDesigModal","phaseModaInUpdate","setPhaseModaInUpdate","phaseEditModalInUpdate","setPhaseEditModalInUpdate","txtInput","setTxtInput","updateProjectPhases","setUpdateProjectPhases","allfriends","setAllfriends","friends","setFriends","members","setMembers","membersIds","setMembersIds","designationInput","setDesignationInput","phaseInput","setPhaseInput","phaseEditInput","setPhaseEditInput","desigId","setDesigId","projectFiles","setProjectFiles","projectDetails","setProjectDetails","projectTitle","projectDiscription","startDate","dueDate","projectType","name","value","handleInputs","e","target","handleFiles","myfiles","files","console","log","getFriends","response","fetch","method","data","json","error","forUpdatingProject","currentProject","getMembers","getMembersIds","map","element","findMember","find","element1","_id","memberRef","push","memberWithDesig","Object","assign","designation","projectPhases","handelDesigInput","input","showSearchResult","newList","filter","toLowerCase","includes","handelChange","addMember","id","getProfile","window","alert","friendId","removeMember","getfriends","newIds","ids","removeFile","fileId","removeSelectedFile","selectedfile","document","getElementById","hasChildNodes","removeChild","firstChild","handleUpdateProject","preventDefault","addDesig","singleId","innerText","formData","FormData","append","JSON","stringify","i","length","body","status","setFecthTasks","changeDesig","handleDeisgBtn","desigTag","handlePhasesInputInUpdate","form","currentTarget","checkPhase","PhaseTitle","phaseObj","PhaseNum","reset","removePhaseInUpdate","phaseName","removeSelectedPhase","editPhaseInUpdate","handlePhaseEditInUpdate","checkIndex","index","substring","allfiles","fileName","Math","floor","fileSize","image","onError","src"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport \"../stylesheets/projects.css\"\r\nimport {Container, Form, Button, Row, Col, Badge, FloatingLabel, Popover, Dropdown, ButtonGroup, DropdownButton, OverlayTrigger, FormControl, Modal, ListGroup, InputGroup } from 'react-bootstrap';\r\nimport image_S1 from '../images/abstract10.png'\r\n\r\n\r\nconst UpdateProject = ({projectData}) => {\r\n    \r\n    const [fullscreen, setFullscreen] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const handleAlertClose = () =>{setShowAlert(false);}\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [alertTitle, setAlertTitle] = useState(\"\");\r\n    const handleShow = () => {setFullscreen(true); setShow(true);}\r\n    const handleHideModal = () =>{setShow(false);}\r\n    const [smShow, setSmShow] = useState(false);\r\n    const [desigModal, setDesigModal] = useState(false);\r\n    const [phaseModaInUpdate, setPhaseModaInUpdate] = useState(false);  \r\n    const [phaseEditModalInUpdate, setPhaseEditModalInUpdate] = useState(false);\r\n    const [txtInput, setTxtInput] = useState(\"\");\r\n    const [updateProjectPhases, setUpdateProjectPhases] = useState([]);\r\n    const [allfriends, setAllfriends] = useState([]);\r\n    const [friends, setFriends] = useState([]);\r\n    const [members, setMembers] = useState([]);\r\n    const [membersIds, setMembersIds] = useState([]);\r\n    const [designationInput, setDesignationInput] = useState();\r\n    const [phaseInput, setPhaseInput] = useState(\"\");\r\n    const [phaseEditInput, setPhaseEditInput] = useState(\"\");\r\n    const [desigId, setDesigId] = useState(\"\");\r\n    const [projectFiles, setProjectFiles] = useState([]);\r\n    const [projectDetails, setProjectDetails] = useState({\r\n        projectTitle : \"\",\r\n        projectDiscription : \"\",\r\n        startDate : \"\",\r\n        dueDate : \"\",\r\n        projectType : \"\",\r\n    });\r\n\r\n    let name, value;\r\n\r\n    const handleInputs = (e) =>{ \r\n        name = e.target.name;\r\n        value = e.target.value;\r\n        \r\n        setProjectDetails({...projectDetails, [name]:value});\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    const handleFiles = (e) =>{\r\n        let myfiles = e.target.files \r\n        console.log(myfiles)\r\n        setProjectFiles(myfiles);\r\n        \r\n    }\r\n\r\n\r\n    const getFriends = async () =>{\r\n        try {\r\n            const response = await fetch('https://taskhive-backend-testing.onrender.com/getFriends', {\r\n                method: 'GET',\r\n            })\r\n\r\n            const data = await response.json();\r\n            console.log(data)\r\n            setAllfriends(data);\r\n            setFriends(data);\r\n            console.log(data)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFriends();\r\n    },[])\r\n\r\n\r\n    const forUpdatingProject = () =>{       \r\n\r\n        if(projectData.currentProject){\r\n            let getMembers = []\r\n            let getMembersIds = []\r\n            projectData.currentProject.members.map((element)=>{\r\n                let findMember = projectData.allfriends.find(element1 => element1._id === element.memberRef)\r\n                getMembersIds.push(findMember._id)\r\n                let memberWithDesig = Object.assign(findMember, {designation: element.designation})\r\n                getMembers.push(memberWithDesig)\r\n            })\r\n            // console.log(projectSelected)\r\n            setMembersIds(getMembersIds)\r\n            setMembers(getMembers)\r\n            setUpdateProjectPhases(projectData.currentProject.projectPhases)\r\n\r\n           \r\n        }\r\n       \r\n    }\r\n\r\n    useEffect(()=>{\r\n        forUpdatingProject();\r\n    },[projectData.currentProject])\r\n\r\n\r\n\r\n    const handelDesigInput = (e) =>{\r\n        let input = e.target.value\r\n\r\n        setDesignationInput(input)\r\n\r\n        console.log(designationInput)\r\n    }\r\n\r\n\r\n\r\n    const showSearchResult = () =>{\r\n\r\n        if(txtInput === \"\"){\r\n            // console.log(\"AA\")\r\n            setAllfriends(friends) \r\n        }\r\n        else{\r\n            let newList = allfriends.filter((element) =>{\r\n                return element.name.toLowerCase().includes(txtInput.toLowerCase())\r\n            })\r\n\r\n            setAllfriends(newList) \r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        showSearchResult();\r\n    },[txtInput])\r\n\r\n    const handelChange = (e) =>{\r\n        setTxtInput(e.target.value)\r\n        // console.log(txtInput)\r\n        showSearchResult();\r\n    }\r\n\r\n\r\n    \r\n\r\n    const addMember = (e) =>{\r\n        let id = e.target.id;\r\n\r\n        if(projectData.currentProject){\r\n            let getProfile = members.find(element => element._id === id);\r\n            if(getProfile){\r\n                projectData.currentProject.members.map((element)=>{\r\n                    if(element.memberRef === id){\r\n                        window.alert(\"Exisiting Member\")\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                let getProfile = projectData.allfriends.find(element => element._id === id);\r\n        \r\n            setMembersIds(membersIds => [...membersIds, getProfile._id])\r\n    \r\n            setMembers(members => [...members, getProfile])\r\n    \r\n    \r\n            const newList = projectData.allfriends.filter(friendId => {\r\n                return friendId._id !== id;\r\n            })\r\n            \r\n            setAllfriends(newList) \r\n            }\r\n           \r\n           \r\n        }\r\n        else{\r\n            let getProfile = projectData.allfriends.find(element => element._id === id);\r\n        \r\n            setMembersIds(membersIds => [...membersIds, getProfile._id])\r\n    \r\n            setMembers(members => [...members, getProfile])\r\n    \r\n    \r\n            const newList = projectData.allfriends.filter(friendId => {\r\n                return friendId._id !== id;\r\n            })\r\n            \r\n            setAllfriends(newList)  \r\n        }\r\n\r\n             \r\n        \r\n    }\r\n\r\n    const removeMember = (e) =>{\r\n        let id = e.target.id;\r\n\r\n        let getProfile = members.find(element => element._id === id);\r\n        let getfriends = allfriends.find(element => element._id === id);\r\n\r\n        if(!getfriends){\r\n            console.log(\"done\")\r\n            setAllfriends(allfriends => [...allfriends, getProfile])\r\n        }\r\n        \r\n\r\n        const newList = members.filter(friendId => {\r\n            return friendId._id !== id;\r\n        })\r\n\r\n        const newIds = membersIds.filter(ids => {\r\n            return ids !== id\r\n        })\r\n        setMembersIds(newIds)\r\n        // console.log(newList)\r\n        setMembers(newList)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const removeFile = (e) =>{\r\n        let fileId = e.target.id;\r\n\r\n        let removeSelectedFile = projectData.currentProject.projectFiles.filter(element1 => element1._id !== fileId)\r\n\r\n        projectData.currentProject.projectFiles = removeSelectedFile\r\n\r\n        // let listedFiles = document.getElementById(\"filesList\")\r\n        let selectedfile = document.getElementById(\"aa\"+fileId)\r\n        console.log(selectedfile)\r\n        \r\n        while (selectedfile.hasChildNodes()) {\r\n            selectedfile.removeChild(selectedfile.firstChild);\r\n        }\r\n        // let x = listedFiles.removeChild(selectedfile);\r\n        \r\n    }\r\n\r\n   \r\n\r\n    const handleUpdateProject = async (e) =>{\r\n        e.preventDefault();\r\n        console.log(membersIds)\r\n        let addDesig = []\r\n\r\n        membersIds.map((membersIds)=>{\r\n            let singleId = document.getElementById(membersIds)\r\n            addDesig.push({memberRef: membersIds, designation: singleId.innerText})\r\n        })\r\n\r\n        let startDate = document.getElementById(\"startDate\");\r\n        let dueDate = document.getElementById(\"dueDate\");\r\n        let projectDiscription = document.getElementById(\"projectDiscription\");\r\n        let projectTitle = document.getElementById(\"projectTitle\");\r\n        let projectType = document.getElementById(\"projectType\");\r\n        \r\n        \r\n        let formData = new FormData();\r\n        formData.append('projectTitle', projectTitle.value)\r\n        formData.append('projectDiscription', projectDiscription.value)\r\n        formData.append('startDate', startDate.value)\r\n        formData.append('dueDate', dueDate.value)\r\n        formData.append('projectType', projectType.value)\r\n        formData.append('projectId', JSON.stringify(projectData.currentProject._id))\r\n        formData.append('projectMembers', JSON.stringify(members))\r\n        formData.append('projectDesig', JSON.stringify(addDesig))\r\n        formData.append('existingFiles', JSON.stringify(projectData.currentProject.projectFiles))\r\n        formData.append('projectPhases', JSON.stringify(updateProjectPhases))\r\n        for(let i=0; i < projectFiles.length; i++){\r\n            formData.append('projectFiles', projectFiles[i])\r\n        }\r\n        \r\n        console.log(updateProjectPhases)\r\n\r\n        if(updateProjectPhases.length > 0){\r\n            try {\r\n                const response = await fetch('https://taskhive-backend-testing.onrender.com/updatingProject', {\r\n                    method: \"POST\",\r\n                    body: formData\r\n                      \r\n                });\r\n        \r\n                const data = await response.json();\r\n    \r\n                if(response.status === 201 && data){\r\n                    setAlertTitle(\"Alert\");\r\n                    setAlertMessage(\"Project Updated.\");\r\n                    setShowAlert(true);\r\n                    projectData.setFecthTasks(data);\r\n                }\r\n                \r\n            } catch (error) {\r\n               console.log(error); \r\n            }\r\n        }\r\n        else{\r\n            setAlertTitle(\"Alert\")\r\n            setAlertMessage(\"Please fill all the fields.\");\r\n            setShowAlert(true);\r\n        }\r\n        \r\n       \r\n\r\n    }\r\n\r\n    const changeDesig = (e) =>{\r\n        setDesigId(e.target.id )\r\n        setDesigModal(true)\r\n    }\r\n\r\n    const handleDeisgBtn = () =>{\r\n        console.log(designationInput)\r\n        let desigTag = document.getElementById(desigId)\r\n        desigTag.innerText = designationInput\r\n        setDesigModal(false)\r\n        // console.log(desigTag.innerText)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n   const handlePhasesInputInUpdate = (e) =>{\r\n        const form = e.currentTarget;\r\n        e.preventDefault();\r\n\r\n        if(updateProjectPhases.length <= 9 && phaseInput){\r\n            let checkPhase = updateProjectPhases.find(element1 => element1.PhaseTitle === phaseInput);\r\n            if(checkPhase){\r\n                setAlertTitle(\"Alert\")\r\n                setAlertMessage(\"Phase title already exist, Choose a different title.\");\r\n                setShowAlert(true);\r\n            }\r\n            else{\r\n                if(phaseInput){\r\n                    let phaseObj = {\r\n                        PhaseTitle: phaseInput,\r\n                        PhaseNum: \"\"\r\n                    }\r\n                    setUpdateProjectPhases(updateProjectPhases => [...updateProjectPhases, phaseObj])\r\n                }\r\n                else{\r\n                    return;\r\n                }  \r\n            }\r\n        }\r\n        else{\r\n            setAlertTitle(\"Alert\")\r\n            setAlertMessage(\"Please add minimum 1 or maximum 10 phases per project.\");\r\n            setShowAlert(true);\r\n        }\r\n        \r\n        setPhaseInput(\"\")\r\n        form.reset();\r\n    }\r\n\r\n\r\n   const removePhaseInUpdate = (e) =>{\r\n        let phaseName = e.target.id;\r\n        let removeSelectedPhase = updateProjectPhases.filter(element1 => element1.PhaseTitle !== phaseName);\r\n        setUpdateProjectPhases(removeSelectedPhase)\r\n   }\r\n\r\n      \r\n   const editPhaseInUpdate = (e) =>{\r\n        let phaseName = e.target.id;\r\n        setPhaseEditInput(phaseName)\r\n        setPhaseEditModalInUpdate(true)\r\n   }\r\n\r\n\r\n   const handlePhaseEditInUpdate = (e) =>{\r\n        const form = e.currentTarget;\r\n        e.preventDefault();\r\n        console.log(phaseInput)\r\n\r\n        let checkIndex;\r\n        \r\n        updateProjectPhases.map((element, index)=>{\r\n            if(element.PhaseTitle === phaseEditInput){\r\n                checkIndex = index;\r\n            };\r\n        });\r\n\r\n        updateProjectPhases[checkIndex].PhaseTitle = phaseInput;\r\n\r\n        setPhaseInput(\"\")\r\n        form.reset();\r\n        setPhaseEditModalInUpdate(false)\r\n   }\r\n\r\n  return (\r\n    <>\r\n        \r\n        \r\n        <ListGroup.Item className='selectedListItem' onClick={handleShow}>\r\n            <i className='fa fa-edit chat-icon'></i>         \r\n            <br></br>\r\n            Update Project\r\n        </ListGroup.Item>\r\n     \r\n        <Modal show={show} fullscreen={fullscreen} onHide={handleHideModal}>\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title>Update Project</Modal.Title>\r\n            </Modal.Header>\r\n        <Modal.Body className='modalBody'>\r\n            {projectData.currentProject ?\r\n            \r\n            <Form method='POST' className='contactForm' name='projectForm' id='projectForm'>\r\n            <Container className='formCont'>\r\n                <Row>\r\n                    <Col>\r\n                    <Form.Group className=\"mb-3\" >\r\n                        <Form.Label className='formTxt'>Update Title</Form.Label>\r\n                        <Form.Control type=\"text\" name='projectTitle' className='formInput' id='projectTitle' defaultValue={projectData.currentProject.projectTitle} placeholder=\"Enter Task\" />\r\n                    </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                    <Form.Group className=\"mb-3 inputGroup\" >\r\n                        <Form.Label className='formTxt'>Type</Form.Label>\r\n                        <Form.Select name='projectType' id='projectType' className='formInput' defaultValue={projectData.currentProject.projectType}>                \r\n                            <option className='listOption' value='N/A'>N/A</option>               \r\n                            <option className='listOption' value='Personal'>Personal</option>               \r\n                            <option className='listOption' value='Team'>Team</option>              \r\n                        </Form.Select>\r\n                    </Form.Group>\r\n  \r\n                </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Discription</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} name='projectDiscription' className='formInput' id='projectDiscription' defaultValue={projectData.currentProject.projectDiscription}/>\r\n                    </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                <Col>\r\n                <Form.Group className=\"mb-3 inputGroup\" >\r\n                    <Form.Label className='formTxt'>Start Date</Form.Label>\r\n                    <Form.Control type=\"date\" name='startDate' id='startDate' className='formInput' defaultValue={projectData.currentProject.startDate.substring(0,10)} placeholder=\"date\" />\r\n                </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                <Form.Group className=\"mb-3 inputGroup\" >\r\n                    <Form.Label className='formTxt'>Due Date</Form.Label>\r\n                    <Form.Control type=\"date\" name='dueDate' id='dueDate' className='formInput' defaultValue={projectData.currentProject.dueDate.substring(0,10)} placeholder=\"date\" />\r\n                </Form.Group>\r\n                </Col>\r\n                \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Add files</Form.Label>\r\n                        <Form.Control type=\"file\" multiple name='projectFiles' id='projectFiles' className='formInput' onChange={handleFiles}/>\r\n                    </Form.Group>\r\n\r\n                    {projectData.currentProject.projectFiles.length > 0 ?\r\n                    <>\r\n                    <Form.Label>Existing Files</Form.Label>\r\n                    <ListGroup className=\"filesList\" >\r\n                        {projectData.currentProject.projectFiles.map((allfiles, index) =>\r\n                        <ListGroup.Item\r\n                            as=\"li\"\r\n                            className=\"d-flex justify-content-between align-items-start singlefile\"\r\n                            key={index}\r\n                            id={\"aa\"+allfiles._id}\r\n                        >\r\n                        <div className=\"ms-2 me-auto\">\r\n                        <div className=\"fw-bold\">{allfiles.fileName}</div>\r\n                        {Math.floor(allfiles.fileSize/1000000) + 'MB'}\r\n                        </div>\r\n                        \r\n                        <i className=\"fa fa-trash phaseTrashBtn\" id={allfiles._id} onClick={removeFile}></i>\r\n                        \r\n                        </ListGroup.Item>\r\n                        )}\r\n                    </ListGroup>\r\n                    </>\r\n                    :\r\n\r\n                    <ListGroup>\r\n                            <ListGroup.Item className='singlefile'>No Existing Files</ListGroup.Item>\r\n                    </ListGroup>\r\n                    }\r\n                    </Col>\r\n                </Row>\r\n                <br></br>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Label>Add Project Phases</Form.Label><Button className=\"addMembers\" onClick={()=>setPhaseModaInUpdate(true)}><i className=\"fa fa-plus\"></i></Button>\r\n                        <ListGroup variant=\"flush\" className='teamlist'>\r\n\r\n                        {updateProjectPhases.map((element, index)=>\r\n                            <ListGroup.Item as=\"li\" key={index} className='phaseListItem'>\r\n                                 <Container>\r\n                                    <Row>\r\n                                        <Col sm lg={8}> Phase {index + 1} {element.PhaseTitle}   </Col>\r\n                                        <Col sm lg={2}>  <i className=\"fa fa-edit phaseEditBtn\" id={element.PhaseTitle} onClick={editPhaseInUpdate}></i>  <br></br> </Col>\r\n                                        <Col sm lg={2}> <i className=\"fa fa-trash phaseTrashBtn\" id={element.PhaseTitle} onClick={removePhaseInUpdate}></i>     </Col>\r\n                                    </Row>\r\n                                </Container>     \r\n                            </ListGroup.Item>\r\n                        )}\r\n\r\n                        </ListGroup>                \r\n                    </Col>\r\n                </Row>\r\n                <br></br>\r\n                <Row>\r\n                    <Col>\r\n                    <Form.Label>Add Team Members</Form.Label><Button className='addMembers' onClick={()=>setSmShow(true)}><i className=\"fa fa-plus\"></i></Button>\r\n                    <ListGroup variant=\"flush\" className='teamlist'>\r\n                        {members.map( (members, index) =>\r\n                            <ListGroup.Item as=\"li\" key={index}  className=\"d-flex justify-content-between align-items-start phaseListItem\">\r\n                                <Container>\r\n                                <Row className=\"justify-content-md-center\">\r\n                                    <Col lg=\"3\">\r\n                                        <img \r\n                                            src={members.image}\r\n                                            onError={(e)=>{e.target.onError = null; e.target.src = image_S1}}\r\n                                            className=\"profileImages\"\r\n                                        />\r\n                                    </Col>\r\n                                    <Col lg=\"3\">\r\n                                        <h6>{members.name}</h6>\r\n                                        \r\n                                    </Col>\r\n                                    <Col lg=\"4\">\r\n                                    {members.designation ?\r\n                                        <p id={members._id} onClick={changeDesig} className=\"changeDesig\">{members.designation}</p> \r\n                                    :\r\n                                        <p id={members._id} onClick={changeDesig} className=\"changeDesig\">Add Designation</p> \r\n                                    }                                   \r\n                                    </Col>\r\n                                    <Col lg=\"2\">\r\n                                        <i className=\"fa fa-trash phaseTrashBtn\" id={members._id} onClick={removeMember}></i>\r\n                                    </Col>\r\n                                </Row>\r\n                                </Container>\r\n                            </ListGroup.Item>\r\n                        )}\r\n\r\n                        </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <br></br>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <Col sm lg={5}>\r\n                        <Button className='projectSubmitBtn' variant=\"primary\" type=\"submit\" onClick={handleUpdateProject}>\r\n                            Update Project\r\n                        </Button>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                </Container>\r\n            </Form>\r\n            \r\n            :\r\n                <p>No selected Project</p>\r\n            }\r\n                \r\n                <br></br>\r\n                <br></br>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      \r\n\r\n\r\n      {/* Add Members */}\r\n\r\n      <Modal size=\"sm\" show={smShow} onHide={() => setSmShow(false)} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\">Add Members</Modal.Title>           \r\n            </Modal.Header>\r\n            <Modal.Body className='modalBody'>\r\n                <Container>\r\n                <Row >\r\n                    <Col>\r\n                        <InputGroup className=\"mb-3\">\r\n                        <Form.Control\r\n                            placeholder=\"Search Members\"\r\n                            aria-label=\"Recipient's username\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            value={txtInput}\r\n                            onChange={handelChange}\r\n                            className='formInput'\r\n                        />\r\n                    </InputGroup>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <ListGroup variant=\"flush\">\r\n                        {allfriends.map( (allfriends, index) =>\r\n                            <ListGroup.Item as=\"li\" key={index}  className=\"d-flex justify-content-between align-items-start membersList\" >\r\n                                <Row>\r\n                                    <Col>\r\n                                        <img \r\n                                            src={allfriends.image}\r\n                                            onError={(e)=>{e.target.onError = null; e.target.src = image_S1}}\r\n                                            className=\"profileImages\"\r\n                                        />\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <p>{allfriends.name}</p>\r\n                                    </Col>\r\n                                    <Col>\r\n                                    <i className=\"fa fa-plus addFriendIcon\" id={allfriends._id} onClick={addMember}></i>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n                </Container>\r\n            </Modal.Body>\r\n            </Modal>\r\n\r\n\r\n\r\n                            {/* Changing Designation */}\r\n\r\n            <Modal size=\"sm\" show={desigModal} onHide={() => setDesigModal(false)} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n              <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\">\r\n                    Add Designation\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className='modalBody'>\r\n                <Container>\r\n                <Row >\r\n                    <Col>\r\n\r\n                    <InputGroup className=\"mb-3\">\r\n                        <FormControl\r\n                            placeholder=\"Enter Designation\"\r\n                            aria-label=\"Recipient's username\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            className='formInput'\r\n                            onChange={handelDesigInput}\r\n                        />\r\n                        <Button variant=\"outline-secondary\" className='searchBtn' id=\"button-addon2\" onClick={handleDeisgBtn}>\r\n                            <i className=\"fa fa-plus\"></i>\r\n                        </Button>\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                </Container>\r\n            </Modal.Body>\r\n            </Modal>\r\n\r\n\r\n\r\n                      \r\n\r\n            \r\n                {/* Phase Modal In Update*/}\r\n\r\n\r\n            <Modal size=\"sm\" show={phaseModaInUpdate} onHide={() => setPhaseModaInUpdate(false)} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n            <Modal.Header closeButton className='modalHeader'>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\r\n                Project Phases\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBody'>\r\n                <Container>\r\n                    <p>You can only add 1 to 10 phases per project.</p>\r\n                    <Form noValidate  onSubmit={handlePhasesInputInUpdate}>\r\n                        <Form.Group  controlId=\"validationCustom01\">\r\n                            <Form.Label>Phase Title</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"text\"\r\n                                placeholder=\"Phase Title\"\r\n                                onChange={(e)=>setPhaseInput(e.target.value)} \r\n                                isValid={phaseInput}\r\n                                className=\"formInput\"\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Invalid Input\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <br></br>\r\n                        <Button type=\"submit\" className='phaseBtn'>\r\n                            <i className=\"fa fa-plus\"></i>\r\n                        </Button>\r\n                    </Form>\r\n                </Container>\r\n            </Modal.Body>\r\n            </Modal>\r\n\r\n\r\n\r\n\r\n             {/* Phase Edit Modal In Update*/}\r\n\r\n             <Modal size=\"sm\" show={phaseEditModalInUpdate} onHide={() => setPhaseEditModalInUpdate(false)} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n               <Modal.Header closeButton className='modalHeader'>\r\n                    <Modal.Title id=\"example-modal-sizes-title-sm\">\r\n                        Edit Phases\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body className='modalBody'>\r\n                <Container>\r\n                    <Form noValidate  onSubmit={handlePhaseEditInUpdate}>\r\n                        <Form.Group  controlId=\"validationCustom01\">\r\n                            <Form.Label>Phase Title </Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type=\"text\"\r\n                                placeholder=\"Phase Title\"\r\n                                defaultValue={phaseEditInput}\r\n                                onChange={(e)=>setPhaseInput(e.target.value)} \r\n                                isValid={phaseInput}\r\n                                className=\"formInput\"\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Invalid Input\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <br></br>\r\n                        <Button type=\"submit\" className='saveBtnPhase'>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Form>\r\n                </Container>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n\r\n\r\n\r\n            {/* Alert Modal */}\r\n\r\n            <Modal size=\"sm\" show={showAlert} onHide={handleAlertClose} backdrop=\"static\" keyboard={false} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\">{alertTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBodyStatic'>\r\n                <p>{alertMessage}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer className='modalFooter'>\r\n                <Button className='saveBtn' onClick={handleAlertClose}>Ok</Button> \r\n            </Modal.Footer>\r\n            </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UpdateProject"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/Asus/Desktop/test11070/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"C:/Users/Asus/Desktop/test11070/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/Asus/Desktop/test11070/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Asus\\\\Desktop\\\\test11070\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useContext,useEffect}from'react';import'../stylesheets/displayProjects.css';import Dropdown from'react-bootstrap/Dropdown';import{Row,Col,Container,Card,CardGroup,ProgressBar,Navbar,Nav,NavDropdown,Form,Image,Button,ListGroup,Offcanvas,InputGroup,Modal}from'react-bootstrap';import image_S1 from'../images/abstract10.png';import{UserContext}from'../App';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var AssignPhases=function AssignPhases(_ref){var projectData=_ref.projectData;var _useContext=useContext(UserContext),state=_useContext.state,dispatch=_useContext.dispatch;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showAlert=_useState2[0],setShowAlert=_useState2[1];var handleAlertClose=function handleAlertClose(){setShowAlert(false);};var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),alertMessage=_useState4[0],setAlertMessage=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),alertTitle=_useState6[0],setAlertTitle=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),fullscreen=_useState8[0],setFullscreen=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),show=_useState10[0],setShow=_useState10[1];var handleShow=function handleShow(){setFullscreen(true);setShow(true);};var handleHideModal=function handleHideModal(){setShow(false);};var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),smShow=_useState12[0],setSmShow=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),smShowUpdate=_useState14[0],setSmShowUpdate=_useState14[1];var _useState15=useState(),_useState16=_slicedToArray(_useState15,2),projectMembers=_useState16[0],setProjectMembers=_useState16[1];var _useState17=useState(),_useState18=_slicedToArray(_useState17,2),currentProjectCreator=_useState18[0],setCurrentProjectCreator=_useState18[1];var _useState19=useState(),_useState20=_slicedToArray(_useState19,2),selectedPhase=_useState20[0],setSelectedPhase=_useState20[1];var _useState21=useState(),_useState22=_slicedToArray(_useState21,2),selectedphaseForUpdate=_useState22[0],setSelectedphaseForUpdate=_useState22[1];var _useState23=useState([]),_useState24=_slicedToArray(_useState23,2),assignEachPhase=_useState24[0],setAssignEachPhase=_useState24[1];var checkMembers=function checkMembers(){if(projectData){console.log(projectData.currentProject);var currentMembers=[];projectData.currentProject.members.map(function(element1){var getProfile=projectData.allfriends.find(function(element2){return element2._id===element1.memberRef;});currentMembers.push(getProfile);});setProjectMembers(currentMembers);console.log(currentMembers);}};useEffect(function(){checkMembers();},[]);var handleAssignBtn=function handleAssignBtn(e){var id=e.target.id;if(projectData){var getPhase=projectData.currentProject.projectPhases.find(function(element){return element._id===id;});setSelectedPhase(getPhase);setSmShow(true);console.log(getPhase);}};var addMember=function addMember(e){var id=e.target.id;// let checkArr = assignEachPhase.find(element => element.phaseId === selectedPhase._id && element.phaseMembers === id);\nvar checkArr=assignEachPhase.find(function(element){return element.phaseId===selectedPhase._id&&element.memberRef===id;});if(checkArr){setAlertTitle(\"Alert\");setAlertMessage(\"Member is already added in this phase.\");setShowAlert(true);}else{var getProfile=projectData.allfriends.find(function(element){return element._id===id;});if(getProfile){var eachPhaseObj={phaseId:selectedPhase._id,phaseNum:selectedPhase.PhaseNum,phaseTitle:selectedPhase.PhaseTitle,memberRef:id,memberName:getProfile.name,uniqueId:selectedPhase._id+id};setAssignEachPhase(function(assignEachPhase){return[].concat(_toConsumableArray(assignEachPhase),[eachPhaseObj]);});}else{var _eachPhaseObj={phaseId:selectedPhase._id,phaseNum:selectedPhase.PhaseNum,phaseTitle:selectedPhase.PhaseTitle,memberRef:id,memberName:state.name,uniqueId:selectedPhase._id+id};setAssignEachPhase(function(assignEachPhase){return[].concat(_toConsumableArray(assignEachPhase),[_eachPhaseObj]);});}}};var removeMember=function removeMember(e){var id=e.target.id;var removeSelectedMember=assignEachPhase.filter(function(element){return element.uniqueId!==id;});setAssignEachPhase(removeSelectedMember);};var handleAssignPhases=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var projectId,response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:projectId=e.target.id;_context.prev=1;_context.next=4;return fetch('https://taskhive-backend-testing.onrender.com/assignProjectPhases',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({assignEachPhase:assignEachPhase,projectId:projectId})});case 4:response=_context.sent;_context.next=7;return response.json();case 7:data=_context.sent;if(response.status===201||data){setAlertTitle(\"Alert\");setAlertMessage(\"Phases Assigned.\");setShowAlert(true);projectData.setFecthTasks(data);}_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 14:setShow(false);case 15:case\"end\":return _context.stop();}}},_callee,null,[[1,11]]);}));return function handleAssignPhases(_x){return _ref2.apply(this,arguments);};}();var showPhases=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var selectedProjectId,selectedProjectCreator,response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!projectData){_context2.next=17;break;}_context2.prev=1;selectedProjectId=projectData.currentProject._id;selectedProjectCreator=projectData.currentProject.projectCreator;_context2.next=6;return fetch('https://taskhive-backend-testing.onrender.com/showProjectPhases',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({selectedProjectId:selectedProjectId,selectedProjectCreator:selectedProjectCreator})});case 6:response=_context2.sent;_context2.next=9;return response.json();case 9:data=_context2.sent;if(data){if(data.findProjectPhases){setAssignEachPhase(data.findProjectPhases.allPhases);}else{setAssignEachPhase([]);}setCurrentProjectCreator(data.findProjectCreator);}console.log(data);_context2.next=17;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](1);console.log(_context2.t0);case 17:case\"end\":return _context2.stop();}}},_callee2,null,[[1,14]]);}));return function showPhases(){return _ref3.apply(this,arguments);};}();useEffect(function(){showPhases();},[]);var handleUpdateBtn=function handleUpdateBtn(e){var id=e.target.id;if(projectData){var findPhase=projectData.currentProject.projectPhases.find(function(element){return element._id===id;});console.log(findPhase);setSelectedphaseForUpdate(findPhase);setSmShowUpdate(true);}};var handleUpdatePhaseBtn=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var response,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!selectedphaseForUpdate){_context3.next=14;break;}_context3.prev=1;_context3.next=4;return fetch('https://taskhive-backend-testing.onrender.com/updatePhaseToCompleted',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({selectedphaseForUpdate:selectedphaseForUpdate})});case 4:response=_context3.sent;_context3.next=7;return response.json();case 7:data=_context3.sent;if(response.status===201&&data){setSmShowUpdate(false);}_context3.next=14;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](1);console.log(_context3.t0);case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[1,11]]);}));return function handleUpdatePhaseBtn(){return _ref4.apply(this,arguments);};}();var handleUndoUpdatePhaseBtn=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var response,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!selectedphaseForUpdate){_context4.next=14;break;}_context4.prev=1;_context4.next=4;return fetch('https://taskhive-backend-testing.onrender.com/updatePhaseToPending',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({selectedphaseForUpdate:selectedphaseForUpdate})});case 4:response=_context4.sent;_context4.next=7;return response.json();case 7:data=_context4.sent;if(response.status===201&&data){setSmShowUpdate(false);}_context4.next=14;break;case 11:_context4.prev=11;_context4.t0=_context4[\"catch\"](1);console.log(_context4.t0);case 14:case\"end\":return _context4.stop();}}},_callee4,null,[[1,11]]);}));return function handleUndoUpdatePhaseBtn(){return _ref5.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"selectedListItem\",onClick:handleShow,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-sitemap\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Assign Phases\"]}),/*#__PURE__*/_jsxs(Modal,{show:show,fullscreen:fullscreen,onHide:handleHideModal,keyboard:false,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,className:\"modalHeader\",children:/*#__PURE__*/_jsx(Modal.Title,{children:\"Assign Project Phases\"})}),/*#__PURE__*/_jsx(Modal.Body,{className:\"modalBodyStatic\",children:projectData.currentProject&&projectMembers?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"You can assign & update a phase of selected project to your team members or yourself.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Click on mentioned project phases to assign a phase to a member.\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsxs(\"b\",{children:[\"Project Title:  \",projectData.currentProject.projectTitle,\" \"]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"Project Phases :-\"})}),/*#__PURE__*/_jsx(Row,{children:projectData.currentProject.projectPhases.map(function(element,index){return/*#__PURE__*/_jsxs(Col,{sm:true,lg:\"3\",children:[/*#__PURE__*/_jsxs(Dropdown,{children:[/*#__PURE__*/_jsxs(Dropdown.Toggle,{variant:\"success\",id:\"dropdown-basic\",className:\"dropBtn\",children:[\"Phase \",element.PhaseNum,\" : \",element.PhaseTitle]}),/*#__PURE__*/_jsxs(Dropdown.Menu,{className:\"dropDownCont\",children:[/*#__PURE__*/_jsx(Dropdown.Item,{id:element._id,onClick:handleAssignBtn,children:\"Add Members\"}),/*#__PURE__*/_jsx(Dropdown.Item,{id:element._id,onClick:handleUpdateBtn,children:\"Update Status\"})]})]}),/*#__PURE__*/_jsx(\"br\",{})]},index);})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"Assign To :-\"})}),/*#__PURE__*/_jsx(Row,{children:assignEachPhase.map(function(element,index){return/*#__PURE__*/_jsx(Col,{sm:true,lg:\"3\",children:/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"listPhase\",children:[\"Phase \",element.phaseNum,\" : \",element.memberName,/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-times removeBtnPhase\",id:element.phaseId+element.memberRef,onClick:removeMember})]})},index);})})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"warningTxt\",children:[\"Selected project will be permanently deleted when click on \",/*#__PURE__*/_jsx(\"b\",{children:\"Delete Project\"}),\" button.\"]}),/*#__PURE__*/_jsx(ListGroup,{children:/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"listPhase\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"Title: \"}),\" \"]})})]})}),/*#__PURE__*/_jsx(Modal.Footer,{className:\"modalFooter\",children:projectData.currentProject?/*#__PURE__*/_jsx(Button,{className:\"phaseSaveBtn\",id:projectData.currentProject._id,onClick:handleAssignPhases,children:\"Save\"}):/*#__PURE__*/_jsx(Button,{className:\"phaseSaveBtn\",children:\"Save\"})})]}),/*#__PURE__*/_jsxs(Modal,{size:\"sm\",show:smShow,onHide:function onHide(){return setSmShow(false);},\"aria-labelledby\":\"example-modal-sizes-title-sm\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,className:\"modalHeader\",children:/*#__PURE__*/_jsx(Modal.Title,{id:\"example-modal-sizes-title-sm\",children:\"Project Members\"})}),/*#__PURE__*/_jsx(Modal.Body,{className:\"modalBody\",children:/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:currentProjectCreator?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ListGroup.Item,{as:\"li\",className:\"d-flex justify-content-between align-items-start memberLists\",children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"img\",{src:currentProjectCreator.projectCreatorImage,onError:function onError(e){e.target.onError=null;e.target.src=image_S1;},className:\"profileImages\"})}),/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsx(\"p\",{children:currentProjectCreator.projectCreatorName}),/*#__PURE__*/_jsx(\"p\",{children:\"Project Creator\"})]}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-plus addFriendIcon\",id:currentProjectCreator.projectCreatorId,onClick:addMember})})]})}),projectMembers.map(function(element,index){return/*#__PURE__*/_jsx(ListGroup.Item,{as:\"li\",className:\"d-flex justify-content-between align-items-start memberLists\",children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"img\",{src:element.image,onError:function onError(e){e.target.onError=null;e.target.src=image_S1;},className:\"profileImages\"})}),/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsx(\"p\",{children:element.name}),/*#__PURE__*/_jsx(\"p\",{children:element.designation})]}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-plus addFriendIcon\",id:element._id,onClick:addMember})})]})},index);})]}):/*#__PURE__*/_jsx(ListGroup.Item,{})})})]}),/*#__PURE__*/_jsxs(Modal,{size:\"sm\",show:smShowUpdate,onHide:function onHide(){return setSmShowUpdate(false);},\"aria-labelledby\":\"example-modal-sizes-title-sm\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,className:\"modalHeader\",children:selectedphaseForUpdate?/*#__PURE__*/_jsx(Modal.Title,{id:\"example-modal-sizes-title-sm\",children:selectedphaseForUpdate.PhaseTitle}):/*#__PURE__*/_jsx(Modal.Title,{id:\"example-modal-sizes-title-sm\",children:\"Selected Phase\"})}),/*#__PURE__*/_jsx(Modal.Body,{className:\"modalBodyStatic\",children:selectedphaseForUpdate?/*#__PURE__*/_jsx(_Fragment,{children:selectedphaseForUpdate.PhaseStatus===\"Pending\"?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Phase Status: \",selectedphaseForUpdate.PhaseStatus]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{children:\"Click on \\\"Update\\\" button to update the phase status to \\\"Completed\\\".\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Phase Status: \",selectedphaseForUpdate.PhaseStatus]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{children:\"Click on \\\"Update\\\" button to update the phase status to \\\"Pending\\\".\"})]})}):/*#__PURE__*/_jsx(\"p\",{})}),/*#__PURE__*/_jsx(Modal.Footer,{className:\"modalFooter\",children:selectedphaseForUpdate?/*#__PURE__*/_jsx(_Fragment,{children:selectedphaseForUpdate.PhaseStatus===\"Pending\"?/*#__PURE__*/_jsx(Button,{className:\"saveBtn\",onClick:handleUpdatePhaseBtn,children:\"Update\"}):/*#__PURE__*/_jsx(Button,{className:\"saveBtn\",onClick:handleUndoUpdatePhaseBtn,children:\"Update\"})}):/*#__PURE__*/_jsx(Button,{className:\"saveBtn\",children:\"Update\"})})]}),/*#__PURE__*/_jsxs(Modal,{size:\"sm\",show:showAlert,onHide:handleAlertClose,backdrop:\"static\",keyboard:false,\"aria-labelledby\":\"example-modal-sizes-title-sm\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,className:\"modalHeader\",children:/*#__PURE__*/_jsx(Modal.Title,{id:\"example-modal-sizes-title-sm\",children:alertTitle})}),/*#__PURE__*/_jsx(Modal.Body,{className:\"modalBodyStatic\",children:/*#__PURE__*/_jsx(\"p\",{children:alertMessage})}),/*#__PURE__*/_jsx(Modal.Footer,{className:\"modalFooter\",children:/*#__PURE__*/_jsx(Button,{className:\"saveBtn\",onClick:handleAlertClose,children:\"Ok\"})})]})]});};export default AssignPhases;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/test11070/src/components/AssignPhases.js"],"names":["React","useState","useContext","useEffect","Dropdown","Row","Col","Container","Card","CardGroup","ProgressBar","Navbar","Nav","NavDropdown","Form","Image","Button","ListGroup","Offcanvas","InputGroup","Modal","image_S1","UserContext","AssignPhases","projectData","state","dispatch","showAlert","setShowAlert","handleAlertClose","alertMessage","setAlertMessage","alertTitle","setAlertTitle","fullscreen","setFullscreen","show","setShow","handleShow","handleHideModal","smShow","setSmShow","smShowUpdate","setSmShowUpdate","projectMembers","setProjectMembers","currentProjectCreator","setCurrentProjectCreator","selectedPhase","setSelectedPhase","selectedphaseForUpdate","setSelectedphaseForUpdate","assignEachPhase","setAssignEachPhase","checkMembers","console","log","currentProject","currentMembers","members","map","element1","getProfile","allfriends","find","element2","_id","memberRef","push","handleAssignBtn","e","id","target","getPhase","projectPhases","element","addMember","checkArr","phaseId","eachPhaseObj","phaseNum","PhaseNum","phaseTitle","PhaseTitle","memberName","name","uniqueId","removeMember","removeSelectedMember","filter","handleAssignPhases","projectId","fetch","method","headers","body","JSON","stringify","response","json","data","status","setFecthTasks","showPhases","selectedProjectId","selectedProjectCreator","projectCreator","findProjectPhases","allPhases","findProjectCreator","handleUpdateBtn","findPhase","handleUpdatePhaseBtn","handleUndoUpdatePhaseBtn","projectTitle","index","projectCreatorImage","onError","src","projectCreatorName","projectCreatorId","image","designation","PhaseStatus"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\r\nimport '../stylesheets/displayProjects.css'\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { Row, Col, Container, Card, CardGroup, ProgressBar, Navbar, Nav, NavDropdown, Form, Image, Button, ListGroup, Offcanvas, InputGroup, Modal } from 'react-bootstrap';\r\nimport image_S1 from '../images/abstract10.png'\r\nimport { UserContext } from '../App'\r\n\r\nconst AssignPhases = ({projectData}) => {\r\n    const {state, dispatch} = useContext(UserContext); \r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const handleAlertClose = () =>{setShowAlert(false);}\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [alertTitle, setAlertTitle] = useState(\"\");\r\n    const [fullscreen, setFullscreen] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => {setFullscreen(true); setShow(true);}\r\n    const handleHideModal = () =>{setShow(false);}\r\n    const [smShow, setSmShow] = useState(false);\r\n    const [smShowUpdate, setSmShowUpdate] = useState(false);\r\n    const [projectMembers, setProjectMembers] = useState();\r\n    const [currentProjectCreator, setCurrentProjectCreator] = useState();\r\n    const [selectedPhase, setSelectedPhase] = useState();\r\n    const [selectedphaseForUpdate, setSelectedphaseForUpdate] = useState();\r\n    const [assignEachPhase, setAssignEachPhase] = useState([]);\r\n\r\n\r\n    const checkMembers = () =>{\r\n        if(projectData){\r\n            console.log(projectData.currentProject)\r\n            let currentMembers = [];\r\n            projectData.currentProject.members.map((element1)=>{\r\n                let getProfile = projectData.allfriends.find(element2 => element2._id === element1.memberRef);\r\n                currentMembers.push(getProfile);\r\n            })\r\n            setProjectMembers(currentMembers)\r\n            console.log(currentMembers)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        checkMembers();\r\n    },[])\r\n\r\n\r\n    const handleAssignBtn = (e) =>{\r\n        let id = e.target.id;\r\n        \r\n        if(projectData){\r\n            let getPhase = projectData.currentProject.projectPhases.find(element => element._id === id);\r\n            setSelectedPhase(getPhase);\r\n            setSmShow(true);\r\n            console.log(getPhase)\r\n        }\r\n    }\r\n\r\n\r\n    const addMember = (e) =>{\r\n        let id = e.target.id;\r\n        \r\n\r\n        // let checkArr = assignEachPhase.find(element => element.phaseId === selectedPhase._id && element.phaseMembers === id);\r\n        let checkArr = assignEachPhase.find(element => element.phaseId === selectedPhase._id && element.memberRef === id);\r\n        \r\n        if(checkArr){\r\n            setAlertTitle(\"Alert\");\r\n            setAlertMessage(\"Member is already added in this phase.\");\r\n            setShowAlert(true);\r\n        }\r\n        else{          \r\n            \r\n            let getProfile = projectData.allfriends.find(element => element._id === id);\r\n            \r\n            if(getProfile){\r\n                let eachPhaseObj = {\r\n                    phaseId: selectedPhase._id,\r\n                    phaseNum: selectedPhase.PhaseNum,\r\n                    phaseTitle: selectedPhase.PhaseTitle,\r\n                    memberRef: id,\r\n                    memberName: getProfile.name,\r\n                    uniqueId: selectedPhase._id + id,\r\n                }\r\n                setAssignEachPhase(assignEachPhase => [...assignEachPhase, eachPhaseObj])\r\n            }\r\n            else{\r\n                let eachPhaseObj = {\r\n                    phaseId: selectedPhase._id,\r\n                    phaseNum: selectedPhase.PhaseNum,\r\n                    phaseTitle: selectedPhase.PhaseTitle,\r\n                    memberRef: id,\r\n                    memberName: state.name,\r\n                    uniqueId: selectedPhase._id + id, \r\n                }\r\n                setAssignEachPhase(assignEachPhase => [...assignEachPhase, eachPhaseObj])\r\n            }\r\n\r\n        }\r\n           \r\n    }\r\n\r\n\r\n    const removeMember = (e) =>{\r\n        let id = e.target.id;\r\n        let removeSelectedMember = assignEachPhase.filter(element => element.uniqueId !== id); \r\n        setAssignEachPhase(removeSelectedMember)\r\n    }\r\n\r\n    const handleAssignPhases = async (e) =>{\r\n        let projectId = e.target.id;\r\n        try {\r\n            const response = await fetch('https://taskhive-backend-testing.onrender.com/assignProjectPhases', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type' : 'application/json' \r\n                },\r\n                body: JSON.stringify({assignEachPhase, projectId}),\r\n            })\r\n\r\n            const data = await response.json();\r\n\r\n            if(response.status === 201 || data){\r\n                setAlertTitle(\"Alert\");\r\n                setAlertMessage(\"Phases Assigned.\");\r\n                setShowAlert(true);\r\n                projectData.setFecthTasks(data);\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        setShow(false)\r\n    }\r\n\r\n\r\n    const showPhases = async () =>{\r\n        if(projectData){\r\n            try {\r\n                let selectedProjectId = projectData.currentProject._id;\r\n                let selectedProjectCreator = projectData.currentProject.projectCreator;\r\n\r\n                const response = await fetch('https://taskhive-backend-testing.onrender.com/showProjectPhases', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type' : 'application/json' \r\n                    },\r\n                    body: JSON.stringify({selectedProjectId, selectedProjectCreator}),\r\n                })\r\n    \r\n                const data = await response.json();\r\n\r\n                if(data){\r\n                    if(data.findProjectPhases){\r\n                        setAssignEachPhase(data.findProjectPhases.allPhases);\r\n                    }\r\n                    else{\r\n                        setAssignEachPhase([]);\r\n                    }\r\n                    setCurrentProjectCreator(data.findProjectCreator);\r\n                }\r\n                console.log(data)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        showPhases();\r\n    },[])\r\n\r\n\r\n    const handleUpdateBtn = (e) =>{\r\n        let id = e.target.id\r\n        if(projectData){\r\n\r\n            let findPhase = projectData.currentProject.projectPhases.find(element => element._id === id);\r\n            console.log(findPhase);\r\n            setSelectedphaseForUpdate(findPhase)\r\n            setSmShowUpdate(true);\r\n        }\r\n        \r\n    }\r\n\r\n    const handleUpdatePhaseBtn = async () =>{\r\n        if(selectedphaseForUpdate){\r\n            try {\r\n                const response = await fetch('https://taskhive-backend-testing.onrender.com/updatePhaseToCompleted', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type' : 'application/json' \r\n                    },\r\n                    body: JSON.stringify({selectedphaseForUpdate}),\r\n                })\r\n    \r\n                const data = await response.json();\r\n\r\n                if(response.status === 201 && data){\r\n                    setSmShowUpdate(false);\r\n                }\r\n                \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleUndoUpdatePhaseBtn = async () =>{\r\n\r\n        if(selectedphaseForUpdate){\r\n            try {\r\n                const response = await fetch('https://taskhive-backend-testing.onrender.com/updatePhaseToPending', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type' : 'application/json' \r\n                    },\r\n                    body: JSON.stringify({selectedphaseForUpdate}),\r\n                })\r\n    \r\n                const data = await response.json();\r\n\r\n                if(response.status === 201 && data){\r\n                    setSmShowUpdate(false);\r\n                }\r\n                \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n  return (\r\n    <>\r\n\r\n        <ListGroup.Item className='selectedListItem' onClick={handleShow}>\r\n          <i className='fa fa-sitemap'></i>         \r\n          <br></br>\r\n          Assign Phases\r\n        </ListGroup.Item>\r\n\r\n        <Modal show={show} fullscreen={fullscreen} onHide={handleHideModal} keyboard={false} >\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title>Assign Project Phases</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBodyStatic'>\r\n                {projectData.currentProject && projectMembers ?\r\n                <>\r\n                <p>You can assign & update a phase of selected project to your team members or yourself.</p> \r\n                <p>Click on mentioned project phases to assign a phase to a member.</p>\r\n                <p><b>Project Title:  {projectData.currentProject.projectTitle} </b></p>\r\n                <br></br>\r\n                <Container>\r\n                    <p><b>Project Phases :-</b></p>\r\n                    <Row>\r\n                        {projectData.currentProject.projectPhases.map((element, index)=>\r\n                            <Col sm lg=\"3\" key={index}>\r\n                                <Dropdown >\r\n                                    <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className='dropBtn'>\r\n                                        Phase {element.PhaseNum} : {element.PhaseTitle}\r\n                                    </Dropdown.Toggle>\r\n\r\n                                    <Dropdown.Menu className='dropDownCont'>\r\n                                        <Dropdown.Item id={element._id} onClick={handleAssignBtn}>Add Members</Dropdown.Item>\r\n                                        <Dropdown.Item id={element._id} onClick={handleUpdateBtn}>Update Status</Dropdown.Item> \r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                                <br></br>\r\n                            </Col>\r\n                        )}\r\n                    </Row>\r\n                </Container>\r\n                <br></br>\r\n                <Container>\r\n                    <p><b>Assign To :-</b></p>\r\n                    <Row>\r\n                        {assignEachPhase.map((element, index)=>\r\n                            <Col sm lg=\"3\" key={index}>\r\n                                <ListGroup.Item className='listPhase'>\r\n                                    Phase {element.phaseNum} : {element.memberName}\r\n                                    <i className=\"fa fa-times removeBtnPhase\" id={element.phaseId + element.memberRef} onClick={removeMember}></i>\r\n                                </ListGroup.Item> \r\n                            </Col>        \r\n                        )}\r\n                    </Row>                                            \r\n                </Container>\r\n                </>\r\n                :\r\n                <>\r\n                <p className='warningTxt'>Selected project will be permanently deleted when click on <b>Delete Project</b> button.</p>\r\n                <ListGroup>\r\n                    <ListGroup.Item  className='listPhase'><b>Title: </b> </ListGroup.Item>\r\n                </ListGroup>\r\n                </>\r\n                }\r\n            </Modal.Body>\r\n            <Modal.Footer className='modalFooter'>\r\n                {projectData.currentProject ?\r\n                    <Button className='phaseSaveBtn' id={projectData.currentProject._id} onClick={handleAssignPhases}>Save</Button>\r\n                :\r\n                    <Button className='phaseSaveBtn'>Save</Button>\r\n                }\r\n                \r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        {/* add Members */}\r\n\r\n        <Modal size=\"sm\" show={smShow} onHide={() => setSmShow(false)} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\">\r\n                    Project Members\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBody'>\r\n               \r\n                        <ListGroup variant=\"flush\" >\r\n                            {currentProjectCreator ?\r\n                            <>\r\n                            <ListGroup.Item as=\"li\"  className=\"d-flex justify-content-between align-items-start memberLists\" >\r\n                           \r\n                            <Row>\r\n                                <Col>\r\n                                    <img src={currentProjectCreator.projectCreatorImage}\r\n                                        onError={(e)=>{e.target.onError = null; e.target.src = image_S1}}\r\n                                        className=\"profileImages\"\r\n                                    />\r\n                                </Col>\r\n                                <Col>\r\n                                    <p>{currentProjectCreator.projectCreatorName}</p>\r\n                                    <p>Project Creator</p>\r\n                                </Col>\r\n                                <Col>\r\n                                    <i className=\"fa fa-plus addFriendIcon\" id={currentProjectCreator.projectCreatorId} onClick={addMember}></i>\r\n                                </Col>\r\n                            </Row>\r\n                           \r\n                            </ListGroup.Item>\r\n                            {projectMembers.map( (element, index) =>\r\n                                <ListGroup.Item as=\"li\" key={index}  className=\"d-flex justify-content-between align-items-start memberLists\" >\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <img src={element.image}\r\n                                            onError={(e)=>{e.target.onError = null; e.target.src = image_S1}}\r\n                                            className=\"profileImages\"\r\n                                            />\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <p>{element.name}</p>\r\n                                            <p>{element.designation}</p>\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <i className=\"fa fa-plus addFriendIcon\" id={element._id} onClick={addMember}></i>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                               \r\n                            )}\r\n                             </>\r\n                            :\r\n                            <ListGroup.Item></ListGroup.Item>\r\n                            \r\n                            }\r\n                            \r\n                        </ListGroup>\r\n                  \r\n            </Modal.Body>\r\n            </Modal>\r\n    \r\n\r\n\r\n\r\n\r\n            {/* Update Selected Phase */}\r\n\r\n            <Modal size=\"sm\" show={smShowUpdate} onHide={() => setSmShowUpdate(false)} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n                <Modal.Header closeButton className='modalHeader'>\r\n                    {selectedphaseForUpdate ?\r\n                        <Modal.Title id=\"example-modal-sizes-title-sm\">{selectedphaseForUpdate.PhaseTitle}</Modal.Title>\r\n                    :\r\n                        <Modal.Title id=\"example-modal-sizes-title-sm\">Selected Phase</Modal.Title>\r\n                    }\r\n                </Modal.Header>\r\n                <Modal.Body className='modalBodyStatic'>\r\n                    {selectedphaseForUpdate ?\r\n                        <>\r\n                        {selectedphaseForUpdate.PhaseStatus === \"Pending\" ?\r\n                            <>\r\n                                <p>Phase Status: {selectedphaseForUpdate.PhaseStatus}</p>\r\n                                <br></br>\r\n                                <p>Click on \"Update\" button to update the phase status to \"Completed\".</p>\r\n                            </>\r\n                        :\r\n                            <>\r\n                                <p>Phase Status: {selectedphaseForUpdate.PhaseStatus}</p>\r\n                                <br></br>\r\n                                <p>Click on \"Update\" button to update the phase status to \"Pending\".</p>\r\n                            </>\r\n                        }\r\n                        </>\r\n                    \r\n                    :\r\n                        <p></p>\r\n                    }\r\n                    \r\n                </Modal.Body>\r\n                <Modal.Footer className='modalFooter'>\r\n                    {selectedphaseForUpdate ?\r\n                        <>\r\n                        {selectedphaseForUpdate.PhaseStatus === \"Pending\" ?\r\n                            <Button className='saveBtn' onClick={handleUpdatePhaseBtn}>Update</Button>\r\n                        :\r\n                            <Button className='saveBtn' onClick={handleUndoUpdatePhaseBtn}>Update</Button>  \r\n                        }\r\n                        </>\r\n                    \r\n                    :\r\n                        <Button className='saveBtn'>Update</Button>\r\n                    }   \r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n\r\n\r\n\r\n             {/* Alert Modal */}\r\n\r\n             <Modal size=\"sm\" show={showAlert} onHide={handleAlertClose} backdrop=\"static\" keyboard={false} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\">{alertTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBodyStatic'>\r\n                <p>{alertMessage}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer className='modalFooter'>\r\n                <Button className='saveBtn' onClick={handleAlertClose}>Ok</Button> \r\n            </Modal.Footer>\r\n            </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AssignPhases"]},"metadata":{},"sourceType":"module"}
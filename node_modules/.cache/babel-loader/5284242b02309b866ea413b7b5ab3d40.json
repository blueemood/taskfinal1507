{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\test11070\\\\src\\\\components\\\\DisplayProjects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useLayoutEffect, useEffect } from 'react';\nimport '../stylesheets/displayProjects.css';\nimport { Row, Col, Container, Card, CardGroup, ProgressBar, Navbar, Nav, NavDropdown, Form, Image, Button, ListGroup, Offcanvas, InputGroup, Modal } from 'react-bootstrap';\nimport ViewProject from './ViewProject';\nimport UpdateProject from './UpdateProject';\nimport DeleteProject from './DeleteProject';\nimport Projects from './Projects';\nimport AssignPhases from './AssignPhases';\nimport ProjectNotification from './ProjectNotification';\nimport ProjectChat from './ProjectChat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DisplayProjects = props => {\n  _s();\n\n  const [fullscreen, setFullscreen] = useState(true);\n  const [show, setShow] = useState(false);\n\n  const handleShow = () => {\n    setFullscreen(true);\n    setShow(true);\n  };\n\n  const [smShow, setSmShow] = useState(false);\n  const [smShowAssign, setSmShowAssign] = useState(false);\n  const [allfriends, setAllfriends] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [assignedProjects, setAssignedProjects] = useState([]); // const [projectId, setProjectId] = useState();\n\n  const [currentProject, setCurrentProject] = useState();\n  const [currentAssignedProject, setCurrentAssignedProject] = useState();\n  const [fecthTasks, setFecthTasks] = useState();\n  const [fecthAfterDelete, setFecthAfterDelete] = useState();\n\n  const handleHideModal = () => {\n    setShow(false);\n  };\n\n  const handleHideSelectionModal = () => {\n    setCurrentProject(\"\");\n    setSmShow(false);\n  };\n\n  const handleHideAssignModal = () => {\n    setCurrentAssignedProject(\"\");\n    setSmShowAssign(false);\n  };\n\n  const getFriends = async () => {\n    try {\n      const response = await fetch('https://taskhive-backend-testing.onrender.comgetFriends', {\n        method: 'GET'\n      });\n      const data = await response.json();\n      console.log(data);\n      setAllfriends(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const showAssignedProjects = async () => {\n    try {\n      const response = await fetch('/getAssignedProjects', {\n        method: 'GET'\n      });\n      const data = await response.json();\n      console.log(data);\n      setAssignedProjects(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const showProjects = async () => {\n    try {\n      const response = await fetch('/getProjects', {\n        method: 'GET'\n      });\n      const data = await response.json();\n      console.log(data);\n      setProjects(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    setSmShow(false);\n    setCurrentProject(\"\");\n    getFriends();\n    showProjects();\n    showAssignedProjects();\n  }, [fecthTasks]);\n\n  const clickedProject = e => {\n    let selectedId = e.target.id;\n    let findProject = projects.find(element => element._id === selectedId);\n    setCurrentProject(findProject); // setProjectId(selectedId)\n\n    setSmShow(true); // props.setSelectedProject(selectedId)\n  };\n\n  const clickedAssignedProject = e => {\n    let selectedId = e.target.id;\n    let findProject = assignedProjects.find(element => element._id === selectedId);\n    setCurrentAssignedProject(findProject); // setProjectId(selectedId)\n\n    setSmShowAssign(true); // props.setSelectedProject(selectedId)\n  };\n\n  const handleRefreshCompnent = () => {\n    setCurrentProject(\"\");\n    getFriends();\n    showProjects();\n    showAssignedProjects();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      className: \"navList\",\n      onClick: handleShow,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-project-diagram\",\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), ' ', \"My Projects\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      fullscreen: fullscreen,\n      onHide: handleHideModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              sm: true,\n              lg: \"5\",\n              children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"Current Projects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: true,\n              lg: \"6\",\n              children: [/*#__PURE__*/_jsxDEV(Container, {\n                children: /*#__PURE__*/_jsxDEV(Projects, {\n                  props: {\n                    setFecthTasks\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: true,\n              lg: \"1\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"refreshBtn2\",\n                onClick: handleRefreshCompnent,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons refreshIcon\",\n                  children: \"refresh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 93\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBody\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: [projects.map((project, index) => /*#__PURE__*/_jsxDEV(Col, {\n              xs: true,\n              lg: \"5\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                className: \"projectListItem\",\n                id: project._id,\n                onClick: clickedProject,\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: project.projectTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  className: \"projectOwner\",\n                  children: \"My Project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 66\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n                  animated: true,\n                  variant: \"info\",\n                  now: project.progressBar,\n                  label: `${project.progressBar}%`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Due Date: \", project.dueDate.substring(0, 10)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)), assignedProjects.map((project, index) => /*#__PURE__*/_jsxDEV(Col, {\n              xs: true,\n              lg: \"5\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                className: \"projectListItem\",\n                id: project._id,\n                onClick: clickedAssignedProject,\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: project.projectTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  className: \"projectOwner\",\n                  children: \"Assigned Project\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 66\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n                  animated: true,\n                  variant: \"info\",\n                  now: project.progressBar,\n                  label: `${project.progressBar}%`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Due Date: \", project.dueDate.substring(0, 10)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"sm\",\n      show: smShow,\n      onHide: handleHideSelectionModal,\n      \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-sm\",\n          className: \"titleSelection\",\n          children: \"Choose For Selected Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBody\",\n        children: [/*#__PURE__*/_jsxDEV(ViewProject, {\n          projectData: currentProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(UpdateProject, {\n          projectData: {\n            currentProject,\n            allfriends,\n            setFecthTasks\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(AssignPhases, {\n          projectData: {\n            currentProject,\n            allfriends,\n            setFecthTasks\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ProjectNotification, {\n          projectData: currentProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ProjectChat, {\n          projectData: currentProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DeleteProject, {\n          projectData: {\n            currentProject,\n            setFecthTasks\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"sm\",\n      show: smShowAssign,\n      onHide: handleHideAssignModal,\n      \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-sm\",\n          className: \"titleSelection\",\n          children: \"Choose For Selected Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBody\",\n        children: [/*#__PURE__*/_jsxDEV(ViewProject, {\n          projectData: currentAssignedProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DisplayProjects, \"Cnc8MvhzhlNTJabK6010iH6Q4pk=\");\n\n_c = DisplayProjects;\nexport default DisplayProjects;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayProjects\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/test11070/src/components/DisplayProjects.js"],"names":["React","useState","useLayoutEffect","useEffect","Row","Col","Container","Card","CardGroup","ProgressBar","Navbar","Nav","NavDropdown","Form","Image","Button","ListGroup","Offcanvas","InputGroup","Modal","ViewProject","UpdateProject","DeleteProject","Projects","AssignPhases","ProjectNotification","ProjectChat","DisplayProjects","props","fullscreen","setFullscreen","show","setShow","handleShow","smShow","setSmShow","smShowAssign","setSmShowAssign","allfriends","setAllfriends","projects","setProjects","assignedProjects","setAssignedProjects","currentProject","setCurrentProject","currentAssignedProject","setCurrentAssignedProject","fecthTasks","setFecthTasks","fecthAfterDelete","setFecthAfterDelete","handleHideModal","handleHideSelectionModal","handleHideAssignModal","getFriends","response","fetch","method","data","json","console","log","error","showAssignedProjects","showProjects","clickedProject","e","selectedId","target","id","findProject","find","element","_id","clickedAssignedProject","handleRefreshCompnent","map","project","index","projectTitle","progressBar","dueDate","substring"],"mappings":"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","sourcesContent":["import React, {useState, useLayoutEffect, useEffect} from 'react'\r\nimport '../stylesheets/displayProjects.css'\r\nimport { Row, Col, Container, Card, CardGroup, ProgressBar, Navbar, Nav, NavDropdown, Form, Image, Button, ListGroup, Offcanvas, InputGroup, Modal } from 'react-bootstrap';\r\nimport ViewProject from './ViewProject';\r\nimport UpdateProject from './UpdateProject';\r\nimport DeleteProject from './DeleteProject';\r\nimport Projects from './Projects';\r\nimport AssignPhases from './AssignPhases';\r\nimport ProjectNotification from './ProjectNotification';\r\nimport ProjectChat from './ProjectChat';\r\n\r\n\r\nconst DisplayProjects = (props) => {\r\n\r\n    const [fullscreen, setFullscreen] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => {setFullscreen(true); setShow(true);}\r\n    const [smShow, setSmShow] = useState(false);\r\n    const [smShowAssign, setSmShowAssign] = useState(false);\r\n    const [allfriends, setAllfriends] = useState([]);\r\n    const [projects, setProjects] = useState([]);\r\n    const [assignedProjects, setAssignedProjects] = useState([]);\r\n    // const [projectId, setProjectId] = useState();\r\n    const [currentProject, setCurrentProject] = useState();\r\n    const [currentAssignedProject, setCurrentAssignedProject] = useState();\r\n    const [fecthTasks, setFecthTasks] = useState();\r\n    const [fecthAfterDelete, setFecthAfterDelete] = useState();\r\n\r\n    const handleHideModal = () =>{\r\n        setShow(false);\r\n    }\r\n\r\n    const handleHideSelectionModal = () =>{\r\n        setCurrentProject(\"\")\r\n        setSmShow(false)\r\n    }\r\n\r\n    const handleHideAssignModal = () =>{\r\n        setCurrentAssignedProject(\"\")\r\n        setSmShowAssign(false)\r\n    }\r\n\r\n    const getFriends = async () =>{\r\n        try {\r\n            const response = await fetch('https://taskhive-backend-testing.onrender.comgetFriends', {\r\n                method: 'GET',\r\n            })\r\n\r\n            const data = await response.json();\r\n            console.log(data)\r\n            setAllfriends(data);\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const showAssignedProjects = async () =>{\r\n        try {\r\n          const response = await fetch('/getAssignedProjects', {\r\n            method: 'GET',\r\n        });\r\n    \r\n        const data = await response.json();\r\n        console.log(data)\r\n        setAssignedProjects(data)\r\n    \r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      \r\n    }\r\n\r\n\r\n\r\n    const showProjects = async () =>{\r\n        try {\r\n          const response = await fetch('/getProjects', {\r\n            method: 'GET',\r\n        });\r\n    \r\n        const data = await response.json();\r\n        console.log(data)\r\n        setProjects(data)\r\n    \r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      \r\n    }\r\n\r\n    useEffect(() =>{\r\n        setSmShow(false);\r\n        setCurrentProject(\"\");\r\n        getFriends();\r\n        showProjects();\r\n        showAssignedProjects();\r\n    },[fecthTasks])\r\n\r\n\r\n\r\n\r\n    const clickedProject = (e) =>{\r\n        let selectedId = e.target.id \r\n\r\n        let findProject = projects.find(element => element._id === selectedId);\r\n        setCurrentProject(findProject)\r\n        // setProjectId(selectedId)\r\n        setSmShow(true)\r\n        // props.setSelectedProject(selectedId)\r\n    }\r\n\r\n    const clickedAssignedProject = (e) =>{\r\n        let selectedId = e.target.id \r\n\r\n        let findProject = assignedProjects.find(element => element._id === selectedId);\r\n        setCurrentAssignedProject(findProject)\r\n        // setProjectId(selectedId)\r\n        setSmShowAssign(true) \r\n        // props.setSelectedProject(selectedId)\r\n    }\r\n\r\n\r\n    const handleRefreshCompnent = () =>{\r\n        setCurrentProject(\"\");\r\n        getFriends();\r\n        showProjects();\r\n        showAssignedProjects();\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n \r\n        <ListGroup.Item className='navList' onClick={handleShow}>\r\n          <i className='fas fa-project-diagram'>&nbsp;</i>         \r\n          {' '}\r\n          My Projects\r\n        </ListGroup.Item>\r\n\r\n        <Modal show={show} fullscreen={fullscreen} onHide={handleHideModal}>\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Container>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <Col sm lg=\"5\">\r\n                            <Modal.Title>Current Projects</Modal.Title>\r\n                            <br></br>\r\n                        </Col>\r\n                        <Col sm lg=\"6\">\r\n                            <Container><Projects props={{setFecthTasks}}/></Container>\r\n                            <br></br>\r\n                        </Col>\r\n                        <Col sm lg=\"1\">\r\n                            <Button className='refreshBtn2' onClick={handleRefreshCompnent}><i className=\"material-icons refreshIcon\">refresh</i></Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBody'>       \r\n                <Container>\r\n                    {/* <Button className='refreshBtn2' onClick={handleRefreshCompnent}><i className=\"material-icons refreshIcon\">refresh</i></Button> */}\r\n                    <br></br>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        {projects.map((project, index)=>\r\n                            <Col xs lg=\"5\" key={index}>\r\n                                <ListGroup.Item className='projectListItem' id={project._id} onClick={clickedProject}>\r\n                                    <b>{project.projectTitle}</b><b className='projectOwner'>My Project</b>\r\n                                    <br></br>\r\n                                    <br></br>\r\n                                    <ProgressBar animated variant=\"info\" now={project.progressBar} label={`${project.progressBar}%`} />\r\n                                    <br></br>\r\n                                    <p>Due Date: {project.dueDate.substring(0,10)}</p>\r\n                                </ListGroup.Item>\r\n                                <br></br>\r\n                            </Col>\r\n                        )}\r\n                        {assignedProjects.map((project, index)=>\r\n                            <Col xs lg=\"5\" key={index}>\r\n                                <ListGroup.Item className='projectListItem' id={project._id} onClick={clickedAssignedProject}>\r\n                                    <b>{project.projectTitle}</b><b className='projectOwner'>Assigned Project</b>\r\n                                    <br></br>\r\n                                    <br></br>\r\n                                    <ProgressBar animated variant=\"info\" now={project.progressBar} label={`${project.progressBar}%`}/>\r\n                                    <br></br>\r\n                                    <p>Due Date: {project.dueDate.substring(0,10)}</p>\r\n                                </ListGroup.Item>\r\n                                <br></br>\r\n                            </Col>\r\n                        )}\r\n                    </Row>\r\n                </Container>\r\n            </Modal.Body>\r\n        </Modal>\r\n\r\n\r\n\r\n\r\n        {/* Project Option Selection Modal */}\r\n\r\n\r\n        <Modal size=\"sm\" show={smShow} onHide={handleHideSelectionModal} aria-labelledby=\"example-modal-sizes-title-sm\" >\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\" className='titleSelection'>\r\n                    Choose For Selected Project\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBody'>\r\n               \r\n                <ViewProject projectData={currentProject}/> \r\n\r\n                <br></br>\r\n\r\n                <UpdateProject projectData={{currentProject, allfriends, setFecthTasks}}/>\r\n                        \r\n                <br></br>\r\n\r\n                <AssignPhases projectData={{currentProject, allfriends, setFecthTasks}}/>\r\n                        \r\n                <br></br>\r\n\r\n                <ProjectNotification projectData={currentProject}/>\r\n                        \r\n                <br></br>\r\n\r\n                <ProjectChat projectData={currentProject}/>\r\n\r\n                <br></br>\r\n                \r\n                <DeleteProject projectData={{currentProject, setFecthTasks}} />\r\n                \r\n                <br></br>\r\n\r\n            </Modal.Body>\r\n        </Modal>\r\n\r\n\r\n\r\n\r\n\r\n        {/* Assigned Project Option Selection Modal */}\r\n\r\n\r\n        <Modal size=\"sm\" show={smShowAssign} onHide={handleHideAssignModal} aria-labelledby=\"example-modal-sizes-title-sm\" >\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\" className='titleSelection'>\r\n                    Choose For Selected Project\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBody'>\r\n            \r\n                <ViewProject projectData={currentAssignedProject}/> \r\n\r\n                <br></br>\r\n\r\n            </Modal.Body>\r\n        </Modal>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DisplayProjects"]},"metadata":{},"sourceType":"module"}
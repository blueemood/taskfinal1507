{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/Asus/Desktop/test11070/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Asus/Desktop/test11070/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Asus\\\\Desktop\\\\test11070\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useLayoutEffect,useEffect}from'react';import'../stylesheets/displayProjects.css';import{Row,Col,Container,Card,CardGroup,ProgressBar,Navbar,Nav,NavDropdown,Form,Image,Button,ListGroup,Offcanvas,InputGroup,Modal}from'react-bootstrap';import Toast from'react-bootstrap/Toast';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ProjectNotification=function ProjectNotification(_ref){var projectData=_ref.projectData;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),fullscreen=_useState2[0],setFullscreen=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),show=_useState4[0],setShow=_useState4[1];var handleShow=function handleShow(){setFullscreen(true);setShow(true);};var handleHideModal=function handleHideModal(){setShow(false);};var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),smShow=_useState6[0],setSmShow=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),projectNotifications=_useState8[0],setProjectNotifications=_useState8[1];var getNotifications=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var selectedProjectId,response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!projectData){_context.next=15;break;}selectedProjectId=projectData._id;_context.prev=2;_context.next=5;return fetch('https://taskhive-backend-testing.onrender.com/getProjectNotifications',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({selectedProjectId:selectedProjectId})});case 5:response=_context.sent;_context.next=8;return response.json();case 8:data=_context.sent;setProjectNotifications(data);_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](2);console.log(_context.t0);case 15:case\"end\":return _context.stop();}}},_callee,null,[[2,12]]);}));return function getNotifications(){return _ref2.apply(this,arguments);};}();useEffect(function(){getNotifications();},[]);var deleteAllNotifications=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var selectedProjectId,response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!projectData){_context2.next=15;break;}selectedProjectId=projectData._id;_context2.prev=2;_context2.next=5;return fetch('https://taskhive-backend-testing.onrender.com/deleteProjectNotifications',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({selectedProjectId:selectedProjectId})});case 5:response=_context2.sent;_context2.next=8;return response.json();case 8:data=_context2.sent;if(response.status===201&&data){setSmShow(false);setShow(false);}_context2.next=15;break;case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](2);console.log(_context2.t0);case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[2,12]]);}));return function deleteAllNotifications(){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"selectedListItem\",onClick:handleShow,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-bell chat-icon\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Project Notifications\"]}),/*#__PURE__*/_jsxs(Modal,{show:show,fullscreen:fullscreen,onHide:handleHideModal,backdrop:\"static\",keyboard:false,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,className:\"modalHeader\",children:projectData?/*#__PURE__*/_jsx(Modal.Title,{children:projectData.projectTitle}):/*#__PURE__*/_jsx(Modal.Title,{children:\"Selected Project\"})}),/*#__PURE__*/_jsx(Modal.Body,{className:\"modalBodyStatic\",children:projectNotifications?/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{className:\"justify-content-md-center\",children:projectNotifications.map(function(element,index){return/*#__PURE__*/_jsx(Col,{sm:true,lg:\"4\",children:/*#__PURE__*/_jsxs(Toast,{className:\"toastMain\",children:[/*#__PURE__*/_jsxs(Toast.Header,{className:\"toastHeader\",closeButton:false,children:[/*#__PURE__*/_jsx(\"img\",{src:element.memberImage,className:\"rounded me-2 notificationImage\",alt:\"\"}),/*#__PURE__*/_jsx(\"strong\",{className:\"me-auto\",children:element.memberName}),/*#__PURE__*/_jsx(\"small\",{children:element.notificationDate.substring(0,10)})]}),/*#__PURE__*/_jsxs(Toast.Body,{children:[\"\\\"Phase Number \",element.phaseNum,\" : \",element.phaseTitle,\"\\\" has been completed.\"]})]})},index);})})}):/*#__PURE__*/_jsx(Container,{})}),/*#__PURE__*/_jsx(Modal.Footer,{className:\"modalFooter\",children:/*#__PURE__*/_jsx(Button,{className:\"saveBtn\",onClick:function onClick(){return setSmShow(true);},children:\"Delete All Notification\"})})]}),/*#__PURE__*/_jsxs(Modal,{size:\"sm\",show:smShow,onHide:function onHide(){return setSmShow(false);},\"aria-labelledby\":\"example-modal-sizes-title-sm\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,className:\"modalHeader\",children:projectData?/*#__PURE__*/_jsx(Modal.Title,{id:\"example-modal-sizes-title-sm\",children:projectData.projectTitle}):/*#__PURE__*/_jsx(Modal.Title,{id:\"example-modal-sizes-title-sm\",children:\"Selected Project\"})}),/*#__PURE__*/_jsx(Modal.Body,{className:\"modalBodyStatic\",children:projectNotifications.length>0?/*#__PURE__*/_jsxs(\"p\",{children:[\"Click on \",/*#__PURE__*/_jsx(\"b\",{children:\"Proceed\"}),\" button will permanently delete all notifications for this project.\"]}):/*#__PURE__*/_jsx(\"p\",{children:\"No new notifications.\"})}),/*#__PURE__*/_jsx(Modal.Footer,{className:\"modalFooter\",children:projectNotifications.length>0?/*#__PURE__*/_jsx(Button,{className:\"saveBtn\",onClick:deleteAllNotifications,children:\"Proceed\"}):/*#__PURE__*/_jsx(Button,{className:\"saveBtn\",onClick:function onClick(){return setSmShow(false);},children:\"Ok\"})})]})]});};export default ProjectNotification;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/test11070/src/components/ProjectNotification.js"],"names":["React","useState","useLayoutEffect","useEffect","Row","Col","Container","Card","CardGroup","ProgressBar","Navbar","Nav","NavDropdown","Form","Image","Button","ListGroup","Offcanvas","InputGroup","Modal","Toast","ProjectNotification","projectData","fullscreen","setFullscreen","show","setShow","handleShow","handleHideModal","smShow","setSmShow","projectNotifications","setProjectNotifications","getNotifications","selectedProjectId","_id","fetch","method","headers","body","JSON","stringify","response","json","data","console","log","deleteAllNotifications","status","projectTitle","map","element","index","memberImage","memberName","notificationDate","substring","phaseNum","phaseTitle","length"],"mappings":"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","sourcesContent":["import React, {useState, useLayoutEffect, useEffect} from 'react'\r\nimport '../stylesheets/displayProjects.css'\r\nimport { Row, Col, Container, Card, CardGroup, ProgressBar, Navbar, Nav, NavDropdown, Form, Image, Button, ListGroup, Offcanvas, InputGroup, Modal } from 'react-bootstrap';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\nconst ProjectNotification = ({projectData}) => {\r\n\r\n    const [fullscreen, setFullscreen] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => {setFullscreen(true); setShow(true);}\r\n    const handleHideModal = () =>{setShow(false);}\r\n    const [smShow, setSmShow] = useState(false);\r\n    const [projectNotifications, setProjectNotifications] = useState([]);\r\n\r\n\r\n\r\n    const getNotifications = async () =>{\r\n        if(projectData){\r\n            let selectedProjectId = projectData._id;\r\n            try {\r\n                const response = await fetch('https://taskhive-backend-testing.onrender.com/getProjectNotifications', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type' : 'application/json' \r\n                    },\r\n                    body: JSON.stringify({selectedProjectId}),\r\n                })\r\n    \r\n                const data = await response.json();\r\n                setProjectNotifications(data);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n  \r\n\r\n    useEffect(()=>{\r\n        getNotifications();\r\n    },[])\r\n\r\n\r\n    const deleteAllNotifications = async () =>{\r\n        if(projectData){\r\n            let selectedProjectId = projectData._id;\r\n            try {\r\n                const response = await fetch('https://taskhive-backend-testing.onrender.com/deleteProjectNotifications', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type' : 'application/json' \r\n                    },\r\n                    body: JSON.stringify({selectedProjectId}),\r\n                })\r\n    \r\n                const data = await response.json();\r\n\r\n                if(response.status === 201 && data){\r\n                    setSmShow(false);\r\n                    setShow(false);\r\n                }\r\n               \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ListGroup.Item className='selectedListItem' onClick={handleShow}>\r\n                <i className='fa fa-bell chat-icon'></i>         \r\n                <br></br>\r\n                Project Notifications\r\n            </ListGroup.Item>\r\n            \r\n            <Modal show={show} fullscreen={fullscreen} onHide={handleHideModal} backdrop=\"static\" keyboard={false} >\r\n                <Modal.Header closeButton className='modalHeader'>\r\n                    {projectData ?\r\n                        <Modal.Title>{projectData.projectTitle}</Modal.Title>\r\n                    :\r\n                        <Modal.Title>Selected Project</Modal.Title>\r\n                    } \r\n                </Modal.Header>\r\n                <Modal.Body className='modalBodyStatic'>\r\n                {projectNotifications ?\r\n                    <Container>\r\n                        <Row className=\"justify-content-md-center\">\r\n                            {projectNotifications.map((element, index)=>\r\n                                <Col sm lg=\"4\" key={index}>\r\n                                    <Toast className='toastMain'>\r\n                                        <Toast.Header className='toastHeader' closeButton={false}>\r\n                                            <img src={element.memberImage} className=\"rounded me-2 notificationImage\" alt=\"\" />\r\n                                            <strong className=\"me-auto\">{element.memberName}</strong>\r\n                                            <small>{element.notificationDate.substring(0,10)}</small>\r\n                                        </Toast.Header>\r\n                                        <Toast.Body>\r\n                                            \"Phase Number {element.phaseNum} : {element.phaseTitle}\" has been completed.\r\n                                        </Toast.Body>\r\n                                    </Toast>\r\n                                </Col>\r\n                            )}\r\n                        </Row>\r\n                    </Container>\r\n                :\r\n                    <Container></Container>\r\n                }\r\n                </Modal.Body>\r\n                <Modal.Footer className='modalFooter'>\r\n                    <Button className='saveBtn' onClick={() => setSmShow(true)}>Delete All Notification</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n\r\n\r\n            {/* Delete All Notifications Modal  */}\r\n\r\n\r\n        <Modal size=\"sm\" show={smShow} onHide={() => setSmShow(false)} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                {projectData ?\r\n                    <Modal.Title id=\"example-modal-sizes-title-sm\">{projectData.projectTitle}</Modal.Title>\r\n                  :\r\n                    <Modal.Title id=\"example-modal-sizes-title-sm\">Selected Project</Modal.Title>\r\n                }  \r\n            </Modal.Header>\r\n            <Modal.Body className='modalBodyStatic'>\r\n                {projectNotifications.length > 0 ?\r\n                    <p>Click on <b>Proceed</b> button will permanently delete all notifications for this project.</p>\r\n                :\r\n                    <p>No new notifications.</p>\r\n                }\r\n            </Modal.Body>\r\n            <Modal.Footer className='modalFooter'>\r\n                {projectNotifications.length > 0 ?\r\n                    <Button className='saveBtn' onClick={deleteAllNotifications}>Proceed</Button>\r\n                :\r\n                    <Button className='saveBtn' onClick={() => setSmShow(false)}>Ok</Button>\r\n                }\r\n                \r\n            </Modal.Footer>\r\n        </Modal>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProjectNotification"]},"metadata":{},"sourceType":"module"}
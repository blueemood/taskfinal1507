{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\test11070\\\\src\\\\components\\\\UpdateNotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport '../stylesheets/notes.css';\nimport { Row, Col, Container, Card, CardGroup, ProgressBar, Navbar, Nav, NavDropdown, Form, Image, Button, ListGroup, Offcanvas, InputGroup, Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateNotes = _ref => {\n  _s();\n\n  let {\n    noteData\n  } = _ref;\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleAlertClose = () => {\n    setShowAlert(false);\n  };\n\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [alertTitle, setAlertTitle] = useState(\"\");\n  const [modalShow, setModalShow] = useState(false);\n  const [noteTitle, setNoteTitle] = useState(\"\");\n  const [noteText, setNoteText] = useState(\"\");\n  const [noteId, setNoteId] = useState(\"\");\n\n  const setNoteForm = () => {\n    if (noteData) {\n      setNoteTitle(noteData.currentNote.noteTitle);\n      setNoteText(noteData.currentNote.noteText);\n      setNoteId(noteData.currentNote._id);\n    }\n  };\n\n  useEffect(() => {\n    setNoteForm();\n  }, []);\n\n  const handleNoteSubmit = async e => {\n    e.preventDefault();\n\n    if (noteTitle && noteText) {\n      try {\n        const response = await fetch('/updateCurrentNote', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            noteTitle,\n            noteText,\n            noteId\n          })\n        });\n        const data = await response.json();\n\n        if (response.status === 201 && data) {\n          setAlertTitle(\"Alert\");\n          setAlertMessage(\"Note Created\");\n          setShowAlert(true);\n          setNoteTitle(\"\");\n          setNoteText(\"\");\n          setModalShow(false);\n          noteData.setFecthTasks(data);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      setAlertTitle(\"Alert\");\n      setAlertMessage(\"Please fill the form correctly.\");\n      setShowAlert(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      className: \"selectedListBtn\",\n      onClick: () => setModalShow(true),\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), \"Edit Note\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      show: modalShow,\n      onHide: () => setModalShow(false),\n      backdrop: \"static\",\n      keyboard: false,\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"Modal heading \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBodyStatic\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            method: \"POST\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                className: \"formInput\",\n                placeholder: \"Title\",\n                value: noteTitle,\n                onChange: e => setNoteTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Note\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                className: \"formInput\",\n                rows: 3,\n                value: noteText,\n                onChange: e => setNoteText(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        className: \"modalFooter\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"saveBtn\",\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: handleNoteSubmit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"sm\",\n      show: showAlert,\n      onHide: handleAlertClose,\n      backdrop: \"static\",\n      keyboard: false,\n      \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-sm\",\n          children: alertTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBodyStatic\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: alertMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        className: \"modalFooter\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"saveBtn\",\n          onClick: handleAlertClose,\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpdateNotes, \"Z7TCs7VsNd/B7qERuuN2LUcKbxQ=\");\n\n_c = UpdateNotes;\nexport default UpdateNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateNotes\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/test11070/src/components/UpdateNotes.js"],"names":["React","useState","useContext","useEffect","Row","Col","Container","Card","CardGroup","ProgressBar","Navbar","Nav","NavDropdown","Form","Image","Button","ListGroup","Offcanvas","InputGroup","Modal","UpdateNotes","noteData","showAlert","setShowAlert","handleAlertClose","alertMessage","setAlertMessage","alertTitle","setAlertTitle","modalShow","setModalShow","noteTitle","setNoteTitle","noteText","setNoteText","noteId","setNoteId","setNoteForm","currentNote","_id","handleNoteSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","status","setFecthTasks","error","console","log","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,OAAO,0BAAP;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,EAA8BC,IAA9B,EAAoCC,SAApC,EAA+CC,WAA/C,EAA4DC,MAA5D,EAAoEC,GAApE,EAAyEC,WAAzE,EAAsFC,IAAtF,EAA4FC,KAA5F,EAAmGC,MAAnG,EAA2GC,SAA3G,EAAsHC,SAAtH,EAAiIC,UAAjI,EAA6IC,KAA7I,QAA0J,iBAA1J;;;;AAGA,MAAMC,WAAW,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEhC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAMuB,gBAAgB,GAAG,MAAK;AAACD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAAqB,GAApD;;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC0B,UAAD,EAAaC,aAAb,IAA8B3B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC4B,SAAD,EAAYC,YAAZ,IAA4B7B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC8B,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgC,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkC,MAAD,EAASC,SAAT,IAAsBnC,QAAQ,CAAC,EAAD,CAApC;;AAGA,QAAMoC,WAAW,GAAG,MAAK;AACrB,QAAGhB,QAAH,EAAY;AACRW,MAAAA,YAAY,CAACX,QAAQ,CAACiB,WAAT,CAAqBP,SAAtB,CAAZ;AACAG,MAAAA,WAAW,CAACb,QAAQ,CAACiB,WAAT,CAAqBL,QAAtB,CAAX;AACAG,MAAAA,SAAS,CAACf,QAAQ,CAACiB,WAAT,CAAqBC,GAAtB,CAAT;AACH;AACJ,GAND;;AAQApC,EAAAA,SAAS,CAAC,MAAI;AACVkC,IAAAA,WAAW;AACd,GAFQ,EAEP,EAFO,CAAT;;AAMA,QAAMG,gBAAgB,GAAG,MAAOC,CAAP,IAAY;AACjCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGX,SAAS,IAAIE,QAAhB,EAAyB;AACrB,UAAI;AACA,cAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAD,EAAuB;AAC/CC,UAAAA,MAAM,EAAE,MADuC;AAE/CC,UAAAA,OAAO,EAAE;AACL,4BAAiB;AADZ,WAFsC;AAK/CC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAClB,YAAAA,SAAD;AAAYE,YAAAA,QAAZ;AAAsBE,YAAAA;AAAtB,WAAf;AALyC,SAAvB,CAA5B;AAQA,cAAMe,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;;AAEA,YAAGR,QAAQ,CAACS,MAAT,KAAoB,GAApB,IAA2BF,IAA9B,EAAmC;AAC/BtB,UAAAA,aAAa,CAAC,OAAD,CAAb;AACAF,UAAAA,eAAe,CAAC,cAAD,CAAf;AACAH,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACAS,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,UAAAA,WAAW,CAAC,EAAD,CAAX;AACAJ,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAT,UAAAA,QAAQ,CAACgC,aAAT,CAAuBH,IAAvB;AACH;AACJ,OApBD,CAoBE,OAAOI,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KAxBD,MAwBK;AACD1B,MAAAA,aAAa,CAAC,OAAD,CAAb;AACAF,MAAAA,eAAe,CAAC,iCAAD,CAAf;AACAH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AAGJ,GAjCD;;AAmCF,sBACE;AAAA,4BACI,QAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,SAAS,EAAC,iBAA1B;AAA4C,MAAA,OAAO,EAAE,MAAMO,YAAY,CAAC,IAAD,CAAvE;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,IAAZ;AAAiB,MAAA,IAAI,EAAED,SAAvB;AAAkC,MAAA,MAAM,EAAE,MAAMC,YAAY,CAAC,KAAD,CAA5D;AAAqE,MAAA,QAAQ,EAAC,QAA9E;AAAuF,MAAA,QAAQ,EAAE,KAAjG;AAAwG,yBAAgB,+BAAxH;AAAwJ,MAAA,QAAQ,MAAhK;AAAA,8BACI,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAA0B,QAAA,SAAS,EAAC,aAApC;AAAA,+BACI,QAAC,KAAD,CAAO,KAAP;AAAa,UAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAY,QAAA,SAAS,EAAC,iBAAtB;AAAA,+BACI,QAAC,SAAD;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,MAAM,EAAC,MAAb;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,MAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,IAAI,EAAC,MAAnB;AAA0B,gBAAA,SAAS,EAAC,WAApC;AAAgD,gBAAA,WAAW,EAAC,OAA5D;AAAoE,gBAAA,KAAK,EAAEC,SAA3E;AAAsF,gBAAA,QAAQ,EAAGU,CAAD,IAAKT,YAAY,CAACS,CAAC,CAACgB,MAAF,CAASC,KAAV;AAAjH;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,MAAtB;AAAA,sCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,gBAAA,EAAE,EAAC,UAAjB;AAA4B,gBAAA,SAAS,EAAC,WAAtC;AAAkD,gBAAA,IAAI,EAAE,CAAxD;AAA2D,gBAAA,KAAK,EAAEzB,QAAlE;AAA4E,gBAAA,QAAQ,EAAGQ,CAAD,IAAKP,WAAW,CAACO,CAAC,CAACgB,MAAF,CAASC,KAAV;AAAtG;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAkBI,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,SAAS,EAAC,aAAxB;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,SAAlB;AAA4B,UAAA,OAAO,EAAC,SAApC;AAA8C,UAAA,IAAI,EAAC,QAAnD;AAA4D,UAAA,OAAO,EAAElB,gBAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAmCK,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,IAAZ;AAAiB,MAAA,IAAI,EAAElB,SAAvB;AAAkC,MAAA,MAAM,EAAEE,gBAA1C;AAA4D,MAAA,QAAQ,EAAC,QAArE;AAA8E,MAAA,QAAQ,EAAE,KAAxF;AAA+F,yBAAgB,8BAA/G;AAAA,8BACG,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAA0B,QAAA,SAAS,EAAC,aAApC;AAAA,+BACI,QAAC,KAAD,CAAO,KAAP;AAAa,UAAA,EAAE,EAAC,8BAAhB;AAAA,oBAAgDG;AAAhD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADH,eAIG,QAAC,KAAD,CAAO,IAAP;AAAY,QAAA,SAAS,EAAC,iBAAtB;AAAA,+BACI;AAAA,oBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJH,eAOG,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,SAAS,EAAC,aAAxB;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,SAAlB;AAA4B,UAAA,OAAO,EAAED,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPH;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCL;AAAA,kBADF;AAkDD,CA/GD;;GAAMJ,W;;KAAAA,W;AAiHN,eAAeA,WAAf","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\r\nimport '../stylesheets/notes.css'\r\nimport { Row, Col, Container, Card, CardGroup, ProgressBar, Navbar, Nav, NavDropdown, Form, Image, Button, ListGroup, Offcanvas, InputGroup, Modal } from 'react-bootstrap';\r\n\r\n\r\nconst UpdateNotes = ({noteData}) => {\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const handleAlertClose = () =>{setShowAlert(false);}\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [alertTitle, setAlertTitle] = useState(\"\");\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [noteTitle, setNoteTitle] = useState(\"\");\r\n    const [noteText, setNoteText] = useState(\"\");\r\n    const [noteId, setNoteId] = useState(\"\");\r\n\r\n\r\n    const setNoteForm = () =>{\r\n        if(noteData){\r\n            setNoteTitle(noteData.currentNote.noteTitle);\r\n            setNoteText(noteData.currentNote.noteText);\r\n            setNoteId(noteData.currentNote._id);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setNoteForm();\r\n    },[])\r\n\r\n\r\n\r\n    const handleNoteSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        if(noteTitle && noteText){\r\n            try {\r\n                const response = await fetch('/updateCurrentNote', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type' : 'application/json' \r\n                    },\r\n                    body: JSON.stringify({noteTitle, noteText, noteId}),\r\n                })\r\n    \r\n                const data = await response.json();\r\n    \r\n                if(response.status === 201 && data){\r\n                    setAlertTitle(\"Alert\");\r\n                    setAlertMessage(\"Note Created\");\r\n                    setShowAlert(true);\r\n                    setNoteTitle(\"\");\r\n                    setNoteText(\"\");\r\n                    setModalShow(false);\r\n                    noteData.setFecthTasks(data);\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }else{\r\n            setAlertTitle(\"Alert\");\r\n            setAlertMessage(\"Please fill the form correctly.\");\r\n            setShowAlert(true);\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n  return (\r\n    <>\r\n        <ListGroup.Item className='selectedListBtn' onClick={() => setModalShow(true)}>\r\n          <i className='fa fa-edit'></i>         \r\n          <br></br>\r\n          Edit Note\r\n        </ListGroup.Item>\r\n\r\n        <Modal size=\"lg\" show={modalShow} onHide={() => setModalShow(false)} backdrop=\"static\" keyboard={false} aria-labelledby=\"contained-modal-title-vcenter\" centered >\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">Modal heading </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBodyStatic'>\r\n                <Container>\r\n                    <Form method='POST'>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control type=\"text\" className='formInput' placeholder=\"Title\" value={noteTitle} onChange={(e)=>setNoteTitle(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Note</Form.Label>\r\n                            <Form.Control as=\"textarea\" className='formInput' rows={3} value={noteText} onChange={(e)=>setNoteText(e.target.value)} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer className='modalFooter'>\r\n                <Button className='saveBtn' variant=\"primary\" type=\"submit\" onClick={handleNoteSubmit}>Save</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n\r\n\r\n         {/* Alert Modal */}\r\n\r\n         <Modal size=\"sm\" show={showAlert} onHide={handleAlertClose} backdrop=\"static\" keyboard={false} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\">{alertTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBodyStatic'>\r\n                <p>{alertMessage}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer className='modalFooter'>\r\n                <Button className='saveBtn' onClick={handleAlertClose}>Ok</Button> \r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UpdateNotes"]},"metadata":{},"sourceType":"module"}
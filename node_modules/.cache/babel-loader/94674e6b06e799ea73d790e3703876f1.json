{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\test11070\\\\src\\\\components\\\\ProjectChat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport '../stylesheets/displayProjects.css';\nimport { Row, Col, Container, Card, CardGroup, ProgressBar, Navbar, Nav, NavDropdown, Form, Image, Button, ListGroup, Offcanvas, InputGroup, Modal } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProjectChat = _ref => {\n  _s();\n\n  let {\n    projectData\n  } = _ref;\n  const [show, setShow] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleAlertClose = () => {\n    setShowAlert(false);\n  };\n\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [alertTitle, setAlertTitle] = useState(\"\");\n\n  const handleCreateChat = async e => {\n    let selectedProjectId = e.target.id;\n\n    try {\n      const response = await fetch('https://taskhive-backend-testing.onrender.com/createProjectChat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          selectedProjectId\n        })\n      });\n      const data = await response.json();\n\n      if (response.status === 201 && data) {\n        setAlertTitle(\"Alert\");\n        setAlertMessage(data.message);\n        setShowAlert(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    setShow(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      className: \"selectedListItem\",\n      onClick: () => setShow(true),\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), \"Create Group Chat\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: () => setShow(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: projectData ? /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: projectData.projectTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Selected Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBodyStatic\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Click on \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Create Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), \" button will create a group chat for this project which will include all project members.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"For adding or removing members please update project members in \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Update project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 84\n          }, this), \" section.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        className: \"modalFooter\",\n        children: projectData ? /*#__PURE__*/_jsxDEV(Button, {\n          className: \"saveBtn\",\n          id: projectData._id,\n          onClick: handleCreateChat,\n          children: \"Create Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          className: \"saveBtn\",\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"sm\",\n      show: showAlert,\n      onHide: handleAlertClose,\n      backdrop: \"static\",\n      keyboard: false,\n      \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-sm\",\n          children: alertTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBodyStatic\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: alertMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        className: \"modalFooter\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"saveBtn\",\n          onClick: handleAlertClose,\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProjectChat, \"MmglkJJEvRyacYw7TFLKjw+bvCI=\");\n\n_c = ProjectChat;\nexport default ProjectChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectChat\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/test11070/src/components/ProjectChat.js"],"names":["React","useState","useContext","useEffect","Row","Col","Container","Card","CardGroup","ProgressBar","Navbar","Nav","NavDropdown","Form","Image","Button","ListGroup","Offcanvas","InputGroup","Modal","ProjectChat","projectData","show","setShow","showAlert","setShowAlert","handleAlertClose","alertMessage","setAlertMessage","alertTitle","setAlertTitle","handleCreateChat","e","selectedProjectId","target","id","response","fetch","method","headers","body","JSON","stringify","data","json","status","message","error","console","log","projectTitle","_id"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\r\nimport '../stylesheets/displayProjects.css'\r\nimport { Row, Col, Container, Card, CardGroup, ProgressBar, Navbar, Nav, NavDropdown, Form, Image, Button, ListGroup, Offcanvas, InputGroup, Modal } from 'react-bootstrap';\r\n\r\n\r\nconst ProjectChat = ({projectData}) => {\r\n    const [show, setShow] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const handleAlertClose = () =>{setShowAlert(false);}\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [alertTitle, setAlertTitle] = useState(\"\");\r\n\r\n    const handleCreateChat = async (e) =>{\r\n        let selectedProjectId = e.target.id;\r\n\r\n        try {\r\n            const response = await fetch('https://taskhive-backend-testing.onrender.com/createProjectChat', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type' : 'application/json' \r\n                },\r\n                body: JSON.stringify({selectedProjectId}),\r\n            })\r\n\r\n            const data = await response.json();\r\n\r\n            if(response.status === 201 && data){\r\n                setAlertTitle(\"Alert\")\r\n                setAlertMessage(data.message);\r\n                setShowAlert(true);\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        setShow(false);\r\n    }\r\n  \r\n  return (\r\n    <>\r\n        <ListGroup.Item className='selectedListItem' onClick={() => setShow(true)}>\r\n            <i className='far fa-comments'></i>         \r\n            <br></br>\r\n            Create Group Chat\r\n        </ListGroup.Item>\r\n\r\n        <Modal show={show} onHide={() => setShow(false)} >\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                {projectData ?\r\n                    <Modal.Title>{projectData.projectTitle}</Modal.Title>\r\n                :\r\n                    <Modal.Title>Selected Project</Modal.Title>\r\n                }   \r\n            </Modal.Header>\r\n            <Modal.Body className='modalBodyStatic'>\r\n                <p>Click on <b>Create Chat</b> button will create a group chat for this project which will \r\n                include all project members.</p>\r\n                <p>For adding or removing members please update project members in <b>Update project</b> section.</p>\r\n            </Modal.Body>\r\n            <Modal.Footer className='modalFooter'>\r\n                {projectData ?\r\n                    <Button className='saveBtn' id={projectData._id} onClick={handleCreateChat}>Create Chat</Button>\r\n                    :\r\n                    <Button className='saveBtn'>Ok</Button>\r\n                }\r\n            </Modal.Footer>\r\n        </Modal> \r\n\r\n\r\n\r\n                {/* Alert Modal */}\r\n\r\n        <Modal size=\"sm\" show={showAlert} onHide={handleAlertClose} backdrop=\"static\" keyboard={false} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\">{alertTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBodyStatic'>\r\n                <p>{alertMessage}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer className='modalFooter'>\r\n                <Button className='saveBtn' onClick={handleAlertClose}>Ok</Button> \r\n            </Modal.Footer>\r\n        </Modal>   \r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProjectChat"]},"metadata":{},"sourceType":"module"}
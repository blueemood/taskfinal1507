{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\test11070\\\\src\\\\components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, NavLink } from 'react-router-dom';\nimport \"../stylesheets/todoForm.css\";\nimport { Container, Form, Button, Row, Col, Badge, Modal, ListGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoForm = _ref => {\n  _s();\n\n  let {\n    clickedTask\n  } = _ref;\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleAlertClose = () => {\n    setShowAlert(false);\n  };\n\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [alertTitle, setAlertTitle] = useState(\"\");\n  const [smShow, setSmShow] = useState(false);\n  const [taskCat, setTaskCat] = useState([]);\n  const [taskForUpdate, setTaskForUpdate] = useState();\n  const [defaultCat, setDefaultCat] = useState([{\n    category: 'Default'\n  }, {\n    category: 'Personal'\n  }, {\n    category: 'Important'\n  }]); // let markTask = clickedTask.taskUpdate;\n\n  const showCategories = async () => {\n    try {\n      const response = await fetch('https://taskhive-backend-testing.onrender.com/showCategories', {\n        method: 'GET'\n      });\n      const data = await response.json();\n      setTaskCat(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    showCategories();\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const {\n      task,\n      date,\n      category\n    } = e.target.elements;\n    let details = {\n      task: task.value,\n      date: date.value,\n      category: category.value\n    };\n    const response = await fetch('https://taskhive-backend-testing.onrender.com/addNewTask', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(details)\n    });\n    let data = await response.json();\n\n    if (response.status === 400 || !data) {\n      setAlertTitle(\"Alert\");\n      setAlertMessage(\"Something went wrong.\");\n      setShowAlert(true);\n    } else {\n      setAlertTitle(\"Alert\");\n      setAlertMessage(\"Task added successfully.\");\n      setShowAlert(true);\n      showCategories();\n      clickedTask.setFecthTasks(data);\n    }\n\n    setTaskForUpdate(null);\n    form.reset();\n  };\n\n  const handleUpdate = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const {\n      updateTask,\n      updateDate,\n      updateCategory\n    } = e.target.elements;\n    let details = {\n      task: updateTask.value,\n      date: updateDate.value,\n      category: updateCategory.value,\n      id: taskForUpdate._id\n    };\n    const response = await fetch('https://taskhive-backend-testing.onrender.com/updatingTask', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(details)\n    });\n    let data = await response.json();\n\n    if (response.status === 400 || !data) {\n      setAlertTitle(\"Alert\");\n      setAlertMessage(\"Something went wrong.\");\n      setShowAlert(true);\n    } else {\n      setAlertTitle(\"Alert\");\n      setAlertMessage(\"Task updated successfully.\");\n      setShowAlert(true);\n      clickedTask.setFecthTasks(data);\n      setTaskForUpdate(null);\n    }\n\n    form.reset();\n  };\n\n  useEffect(() => {\n    setTaskForUpdate(clickedTask.taskUpdate);\n  }, [clickedTask.taskUpdate]);\n\n  const addCategory = async e => {\n    e.preventDefault();\n    const {\n      categoryInput\n    } = e.target.elements;\n    let newcategory = {\n      name: categoryInput.value\n    };\n    const response = await fetch('https://taskhive-backend-testing.onrender.com/alltaskCategories', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newcategory)\n    });\n    let data = await response.json();\n\n    if (response.status === 400 || !data) {\n      setAlertTitle(\"Alert\");\n      setAlertMessage(\"Something went wrong.\");\n      setShowAlert(true);\n    } else {\n      setAlertTitle(\"Alert\");\n      setAlertMessage(\"Category added successfully.\");\n      setShowAlert(true); // window.location.reload(false);\n    }\n\n    categoryInput.value = \"\";\n  };\n\n  const deleteCat = async e => {\n    let catId = e.target.id;\n    console.log(catId);\n\n    try {\n      const response = await fetch('https://taskhive-backend-testing.onrender.com/deletingCategory', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          catId\n        })\n      });\n      let data = await response.json();\n      setTaskCat(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleDeleteTask = async e => {\n    let taskId = e.target.id;\n\n    try {\n      const response = await fetch('/deletingselectedTask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          taskId\n        })\n      });\n      let data = await response.json();\n\n      if (response.status === 201 && data) {\n        setAlertTitle(\"Alert\");\n        setAlertMessage(data.message);\n        setShowAlert(true);\n        clickedTask.setFecthTasks(data);\n        setTaskForUpdate(null);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"todoFormContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        size: \"sm\",\n        show: smShow,\n        onHide: () => setSmShow(false),\n        \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          className: \"modalHeader\",\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"example-modal-sizes-title-sm\",\n            children: \"Add New Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          className: \"modalBody\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  method: \"POST\",\n                  onSubmit: addCategory,\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"mb-3 taskForm\",\n                    children: /*#__PURE__*/_jsxDEV(Container, {\n                      children: /*#__PURE__*/_jsxDEV(Row, {\n                        className: \"justify-content-md-center\",\n                        children: [/*#__PURE__*/_jsxDEV(Col, {\n                          sm: true,\n                          lg: 10,\n                          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                            type: \"text\",\n                            id: \"categoryInput\",\n                            className: \"formInput\",\n                            placeholder: \"Enter Category\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 235,\n                            columnNumber: 45\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 234,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(Col, {\n                          sm: true,\n                          lg: 2,\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            className: \"categoryBtn\",\n                            variant: \"primary\",\n                            type: \"submit\",\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fa fa-plus\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 239,\n                              columnNumber: 49\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 238,\n                            columnNumber: 45\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 237,\n                          columnNumber: 41\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(ListGroup, {\n                  variant: \"flush\",\n                  children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    className: \"todosList\",\n                    children: \"Default\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    className: \"todosList\",\n                    children: \"Personal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    className: \"todosList\",\n                    children: \"Important\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 29\n                  }, this), taskCat.map((taskCat, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    className: \"todosList\",\n                    children: [taskCat.category, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-trash trashBtn\",\n                      id: taskCat._id,\n                      onClick: deleteCat\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 102\n                    }, this), \" \"]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 33\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this), taskForUpdate ? /*#__PURE__*/_jsxDEV(Form, {\n        method: \"POST\",\n        onSubmit: handleUpdate,\n        className: \"contactForm\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"formTxt\",\n                  children: \"Update Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  className: \"formInput\",\n                  id: \"updateTask\",\n                  defaultValue: taskForUpdate.task,\n                  placeholder: \"Enter Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3 inputGroup\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"formTxt\",\n                  children: \"Due Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  id: \"updateDate\",\n                  className: \"formInput\",\n                  defaultValue: taskForUpdate.date,\n                  placeholder: \"date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3 inputGroup\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"formTxt\",\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  id: \"updateCategory\",\n                  className: \"formInput\",\n                  \"aria-label\": \"Default select example\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    className: \"listOption\",\n                    children: taskForUpdate.category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 41\n                  }, this), taskCat.map((taskCat, index) => {\n                    return taskCat.category !== taskForUpdate.category ? /*#__PURE__*/_jsxDEV(\"option\", {\n                      className: \"listOption\",\n                      children: taskCat.category\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 49\n                    }, this) : null;\n                  }), defaultCat.map((defaultCat, index) => {\n                    return defaultCat.category !== taskForUpdate.category ? /*#__PURE__*/_jsxDEV(\"option\", {\n                      className: \"listOption\",\n                      children: defaultCat.category\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 49\n                    }, this) : null;\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"formTxt\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"updateBtn\",\n                  variant: \"primary\",\n                  type: \"submit\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-check\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"formTxt\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"updateBtn\",\n                  variant: \"primary\",\n                  id: taskForUpdate._id,\n                  onClick: handleDeleteTask,\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-trash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        method: \"POST\",\n        onSubmit: handleSubmit,\n        className: \"contactForm\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"formTxt\",\n                  children: \"Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  id: \"task\",\n                  className: \"formInput\",\n                  placeholder: \"Enter Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              sm: true,\n              lg: \"6\",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3 inputGroup\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"formTxt\",\n                  children: \"Due Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  id: \"date\",\n                  className: \"formInput\",\n                  placeholder: \"date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: true,\n              lg: \"6\",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3 inputGroup\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: \"formTxt\",\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"addCatBadge\",\n                  onClick: () => setSmShow(true),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-plus\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 97\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  id: \"category\",\n                  className: \"formInput\",\n                  \"aria-label\": \"Default select example\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    className: \"listOption\",\n                    children: \"Default\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    className: \"listOption\",\n                    children: \"Personal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    className: \"listOption\",\n                    children: \"Important\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 37\n                  }, this), taskCat.map((taskCat, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    className: \"listOption\",\n                    children: taskCat.category\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 41\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: true,\n              lg: \"6\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"submitBtn\",\n                variant: \"primary\",\n                type: \"submit\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-plus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 92\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"sm\",\n      className: \"my-modal\",\n      show: showAlert,\n      onHide: handleAlertClose,\n      backdrop: \"static\",\n      keyboard: false,\n      \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-sm\",\n          children: alertTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBodyStatic\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: alertMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        className: \"modalFooter\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"saveBtn \",\n          onClick: handleAlertClose,\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoForm, \"Uf1fqWhBOCmeXAkYO+LkgGyM+as=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/test11070/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","useNavigate","NavLink","Container","Form","Button","Row","Col","Badge","Modal","ListGroup","TodoForm","clickedTask","showAlert","setShowAlert","handleAlertClose","alertMessage","setAlertMessage","alertTitle","setAlertTitle","smShow","setSmShow","taskCat","setTaskCat","taskForUpdate","setTaskForUpdate","defaultCat","setDefaultCat","category","showCategories","response","fetch","method","data","json","error","console","log","handleSubmit","e","preventDefault","form","currentTarget","task","date","target","elements","details","value","headers","body","JSON","stringify","status","setFecthTasks","reset","handleUpdate","updateTask","updateDate","updateCategory","id","_id","taskUpdate","addCategory","categoryInput","newcategory","name","deleteCat","catId","handleDeleteTask","taskId","message","map","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport { useNavigate, NavLink } from 'react-router-dom'\r\nimport \"../stylesheets/todoForm.css\"\r\nimport {Container, Form, Button, Row, Col, Badge, Modal, ListGroup } from 'react-bootstrap';\r\n\r\nconst TodoForm = ({clickedTask}) => {\r\n    \r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const handleAlertClose = () =>{setShowAlert(false);}\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [alertTitle, setAlertTitle] = useState(\"\");\r\n    const [smShow, setSmShow] = useState(false);\r\n    const [taskCat, setTaskCat] = useState([]);\r\n    const [taskForUpdate, setTaskForUpdate] = useState();\r\n    const [defaultCat, setDefaultCat] = useState([\r\n        {category: 'Default'},\r\n        {category: 'Personal'},\r\n        {category: 'Important'}\r\n    ]);\r\n    // let markTask = clickedTask.taskUpdate;\r\n  \r\n\r\n    const showCategories = async () =>{\r\n        try {\r\n            const response = await fetch('https://taskhive-backend-testing.onrender.com/showCategories', {\r\n                method: 'GET',\r\n            });\r\n    \r\n            const data = await response.json();\r\n            setTaskCat(data);\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        showCategories();\r\n    },[])\r\n\r\n\r\n    \r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        const form = e.currentTarget;\r\n        const {task, date, category } = e.target.elements;\r\n\r\n        let details = {\r\n            task: task.value,\r\n            date: date.value,\r\n            category: category.value\r\n        }\r\n\r\n        const response = await fetch('https://taskhive-backend-testing.onrender.com/addNewTask', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(details),\r\n        })\r\n\r\n        let data = await response.json();\r\n\r\n        if(response.status === 400 || !data){\r\n            setAlertTitle(\"Alert\")\r\n            setAlertMessage(\"Something went wrong.\");\r\n            setShowAlert(true);\r\n        }\r\n        else{\r\n            setAlertTitle(\"Alert\")\r\n            setAlertMessage(\"Task added successfully.\");\r\n            setShowAlert(true);\r\n            showCategories();\r\n            clickedTask.setFecthTasks(data);\r\n        }\r\n        setTaskForUpdate(null); \r\n        form.reset();\r\n        \r\n    }\r\n\r\n    const handleUpdate = async (e) => {\r\n        e.preventDefault();\r\n        const form = e.currentTarget;\r\n        const {updateTask, updateDate, updateCategory } = e.target.elements;\r\n\r\n        let details = {\r\n            task: updateTask.value,\r\n            date: updateDate.value,\r\n            category: updateCategory.value,\r\n            id: taskForUpdate._id\r\n        }\r\n\r\n        const response = await fetch('https://taskhive-backend-testing.onrender.com/updatingTask', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(details),\r\n        })\r\n\r\n        let data = await response.json();\r\n\r\n        if(response.status === 400 || !data){\r\n            setAlertTitle(\"Alert\")\r\n            setAlertMessage(\"Something went wrong.\");\r\n            setShowAlert(true);\r\n            \r\n        }\r\n        else{\r\n            setAlertTitle(\"Alert\")\r\n            setAlertMessage(\"Task updated successfully.\");\r\n            setShowAlert(true);\r\n            clickedTask.setFecthTasks(data);\r\n            setTaskForUpdate(null);\r\n        }\r\n        form.reset();\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        setTaskForUpdate(clickedTask.taskUpdate);\r\n    },[clickedTask.taskUpdate])\r\n\r\n\r\n\r\n    const addCategory = async (e) =>{\r\n        e.preventDefault();\r\n\r\n        const {categoryInput} = e.target.elements;\r\n\r\n        let newcategory = {\r\n            name: categoryInput.value\r\n        }\r\n        \r\n    \r\n        const response = await fetch('https://taskhive-backend-testing.onrender.com/alltaskCategories', { \r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type' : 'application/json' \r\n            },\r\n            body: JSON.stringify(newcategory),\r\n        })\r\n        \r\n        let data = await response.json();\r\n\r\n        if(response.status === 400 || !data){\r\n            setAlertTitle(\"Alert\")\r\n            setAlertMessage(\"Something went wrong.\");\r\n            setShowAlert(true);\r\n        }\r\n        else{\r\n            setAlertTitle(\"Alert\")\r\n            setAlertMessage(\"Category added successfully.\");\r\n            setShowAlert(true);\r\n            // window.location.reload(false);\r\n        }\r\n        categoryInput.value = \"\";\r\n    }\r\n\r\n\r\n    const deleteCat = async (e) =>{\r\n        let catId = e.target.id\r\n        console.log(catId)\r\n        \r\n        try {\r\n            const response = await fetch('https://taskhive-backend-testing.onrender.com/deletingCategory', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                },\r\n                body: JSON.stringify({catId}),\r\n            })\r\n    \r\n            let data = await response.json();\r\n\r\n            setTaskCat(data);\r\n    \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n    const handleDeleteTask = async (e) =>{\r\n        let taskId = e.target.id;\r\n        try {\r\n            const response = await fetch('/deletingselectedTask', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                },\r\n                body: JSON.stringify({taskId}),\r\n            })\r\n    \r\n            let data = await response.json();\r\n            if(response.status === 201 && data){\r\n                setAlertTitle(\"Alert\")\r\n                setAlertMessage(data.message);\r\n                setShowAlert(true);\r\n                clickedTask.setFecthTasks(data);\r\n                setTaskForUpdate(null);\r\n            }\r\n    \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n        <Container className='todoFormContainer'> \r\n            <Modal size=\"sm\" show={smShow} onHide={() => setSmShow(false)} aria-labelledby=\"example-modal-sizes-title-sm\" >\r\n            <Modal.Header closeButton className='modalHeader'>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\r\n                Add New Category\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBody'>\r\n                <Container>\r\n                <Row >\r\n                    <Col>\r\n                        <Form method='POST' onSubmit={addCategory}> \r\n                            <Form.Group className=\"mb-3 taskForm\" >\r\n                                <Container>\r\n                                    <Row className=\"justify-content-md-center\">\r\n                                        <Col sm lg={10} >\r\n                                            <Form.Control type=\"text\" id='categoryInput' className='formInput' placeholder=\"Enter Category\" />\r\n                                        </Col>\r\n                                        <Col sm lg={2}>\r\n                                            <Button className='categoryBtn' variant=\"primary\" type=\"submit\" >\r\n                                                <i className=\"fa fa-plus\"></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </Form.Group>\r\n                            \r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <ListGroup variant=\"flush\" >\r\n                            <ListGroup.Item className='todosList'>Default</ListGroup.Item>\r\n                            <ListGroup.Item className='todosList'>Personal</ListGroup.Item>\r\n                            <ListGroup.Item className='todosList'>Important</ListGroup.Item>\r\n                            {taskCat.map( (taskCat, index) =>\r\n                                <ListGroup.Item className='todosList' key={index}>{taskCat.category} <i className=\"fa fa-trash trashBtn\" id={taskCat._id} onClick={deleteCat}></i> </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n                </Container>\r\n            </Modal.Body>\r\n            </Modal>\r\n\r\n        {taskForUpdate ?\r\n            <Form method='POST' onSubmit={handleUpdate} className='contactForm' >\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label className='formTxt'>Update Task</Form.Label>\r\n                                <Form.Control type=\"text\" className='formInput' id='updateTask' defaultValue={taskForUpdate.task} placeholder=\"Enter Task\" />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3 inputGroup\" >\r\n                                <Form.Label className='formTxt'>Due Date</Form.Label>\r\n                                <Form.Control type=\"date\" id='updateDate' className='formInput' defaultValue={taskForUpdate.date} placeholder=\"date\" />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3 inputGroup\" >\r\n                                <Form.Label className='formTxt'>Category</Form.Label>\r\n                                    <Form.Select id='updateCategory' className='formInput' aria-label=\"Default select example\">  \r\n                                        <option className='listOption' >{taskForUpdate.category}</option> \r\n                                            {taskCat.map( (taskCat, index) => {\r\n                                                return taskCat.category !== taskForUpdate.category ?\r\n                                                <option className='listOption' key={index} >{taskCat.category}</option> \r\n                                            :\r\n                                                null  \r\n                                            })}\r\n\r\n                                            {defaultCat.map((defaultCat, index) => {\r\n                                                return defaultCat.category !== taskForUpdate.category ?\r\n                                                <option className='listOption'  key={index} >{defaultCat.category}</option> \r\n                                            :\r\n                                                null \r\n                                            })}                   \r\n                                    </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row >\r\n                        <Col >\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label className='formTxt'>Submit</Form.Label>\r\n                                <Button className='updateBtn' variant=\"primary\" type=\"submit\" >\r\n                                    <i className=\"fa fa-check\"></i> \r\n                                </Button>\r\n                            </Form.Group>\r\n                            {/* <Form.Group className=\"mb-3\" >\r\n                                <Form.Label className='formTxt'>Status</Form.Label>\r\n                                <Form.Select id='updateStatus' className='formInput' aria-label=\"Default select example\"> \r\n                                    <option className='listOption'>Pending</option>                \r\n                                    <option className='listOption'>Completed</option>                \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label className='formTxt'>Delete</Form.Label>\r\n                                <Button className='updateBtn' variant=\"primary\" id={taskForUpdate._id} onClick={handleDeleteTask} >\r\n                                    <i className=\"fa fa-trash\"></i> \r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Form>\r\n\r\n            :\r\n\r\n\r\n            <Form method='POST' onSubmit={handleSubmit} className='contactForm' >\r\n                <Container>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label className='formTxt'>Task</Form.Label>\r\n                                <Form.Control type=\"text\" id='task' className='formInput' placeholder=\"Enter Task\" />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <Col sm lg=\"6\">\r\n                            <Form.Group className=\"mb-3 inputGroup\" >\r\n                                <Form.Label className='formTxt'>Due Date</Form.Label>\r\n                                <Form.Control type=\"date\" id='date' className='formInput' placeholder=\"date\" />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col sm lg=\"6\">\r\n                            <Form.Group className=\"mb-3 inputGroup\" >\r\n                                <Form.Label className='formTxt'>Category</Form.Label>\r\n                                <Button className=\"addCatBadge\" onClick={() => setSmShow(true)}><i className=\"fa fa-plus\" ></i></Button>\r\n                                <Form.Select id='category' className='formInput' aria-label=\"Default select example\">  \r\n                                    <option className='listOption'>Default</option>               \r\n                                    <option className='listOption'>Personal</option>               \r\n                                    <option className='listOption'>Important</option>               \r\n                                    {taskCat.map( (taskCat, index) =>\r\n                                        <option className='listOption' key={index}>{taskCat.category}</option>\r\n                                    )}\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <Col sm lg=\"6\">\r\n                            <Button className='submitBtn' variant=\"primary\" type=\"submit\" ><i className=\"fa fa-plus\"></i></Button>                \r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Form>\r\n            }\r\n        </Container>\r\n\r\n\r\n\r\n\r\n        {/* Alert Modal */}\r\n\r\n        <Modal size=\"sm\" className='my-modal' show={showAlert} onHide={handleAlertClose} backdrop=\"static\" keyboard={false} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\">{alertTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBodyStatic'>\r\n                <p>{alertMessage}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer className='modalFooter'>\r\n                <Button className='saveBtn ' onClick={handleAlertClose}>Ok</Button> \r\n            </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TodoForm"]},"metadata":{},"sourceType":"module"}
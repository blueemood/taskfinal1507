{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/Asus/Desktop/test11070/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Asus/Desktop/test11070/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Asus\\\\Desktop\\\\test11070\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect,useRef}from'react';import{useNavigate,NavLink}from'react-router-dom';import\"../stylesheets/todoForm.css\";import{Container,Form,Button,Row,Col,Badge,Modal,ListGroup}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var TodoForm=function TodoForm(_ref){var clickedTask=_ref.clickedTask;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showAlert=_useState2[0],setShowAlert=_useState2[1];var handleAlertClose=function handleAlertClose(){setShowAlert(false);};var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),alertMessage=_useState4[0],setAlertMessage=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),alertTitle=_useState6[0],setAlertTitle=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),smShow=_useState8[0],setSmShow=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),taskCat=_useState10[0],setTaskCat=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),taskForUpdate=_useState12[0],setTaskForUpdate=_useState12[1];var _useState13=useState([{category:'Default'},{category:'Personal'},{category:'Important'}]),_useState14=_slicedToArray(_useState13,2),defaultCat=_useState14[0],setDefaultCat=_useState14[1];// let markTask = clickedTask.taskUpdate;\nvar showCategories=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch('https://taskhive-backend-testing.onrender.com/showCategories',{method:'GET'});case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;setTaskCat(data);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function showCategories(){return _ref2.apply(this,arguments);};}();useEffect(function(){showCategories();},[]);var handleSubmit=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var form,_e$target$elements,task,date,category,details,response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();form=e.currentTarget;_e$target$elements=e.target.elements,task=_e$target$elements.task,date=_e$target$elements.date,category=_e$target$elements.category;details={task:task.value,date:date.value,category:category.value};_context2.next=6;return fetch('https://taskhive-backend-testing.onrender.com/addNewTask',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(details)});case 6:response=_context2.sent;_context2.next=9;return response.json();case 9:data=_context2.sent;if(response.status===400||!data){setAlertTitle(\"Alert\");setAlertMessage(\"Something went wrong.\");setShowAlert(true);}else{setAlertTitle(\"Alert\");setAlertMessage(\"Task added successfully.\");setShowAlert(true);showCategories();clickedTask.setFecthTasks(data);}setTaskForUpdate(null);form.reset();case 13:case\"end\":return _context2.stop();}}},_callee2);}));return function handleSubmit(_x){return _ref3.apply(this,arguments);};}();var handleUpdate=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e){var form,_e$target$elements2,updateTask,updateDate,updateCategory,details,response,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:e.preventDefault();form=e.currentTarget;_e$target$elements2=e.target.elements,updateTask=_e$target$elements2.updateTask,updateDate=_e$target$elements2.updateDate,updateCategory=_e$target$elements2.updateCategory;details={task:updateTask.value,date:updateDate.value,category:updateCategory.value,id:taskForUpdate._id};_context3.next=6;return fetch('https://taskhive-backend-testing.onrender.com/updatingTask',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(details)});case 6:response=_context3.sent;_context3.next=9;return response.json();case 9:data=_context3.sent;if(response.status===400||!data){setAlertTitle(\"Alert\");setAlertMessage(\"Something went wrong.\");setShowAlert(true);}else{setAlertTitle(\"Alert\");setAlertMessage(\"Task updated successfully.\");setShowAlert(true);clickedTask.setFecthTasks(data);setTaskForUpdate(null);}form.reset();case 12:case\"end\":return _context3.stop();}}},_callee3);}));return function handleUpdate(_x2){return _ref4.apply(this,arguments);};}();useEffect(function(){setTaskForUpdate(clickedTask.taskUpdate);},[clickedTask.taskUpdate]);var addCategory=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(e){var categoryInput,newcategory,response,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:e.preventDefault();categoryInput=e.target.elements.categoryInput;newcategory={name:categoryInput.value};_context4.next=5;return fetch('https://taskhive-backend-testing.onrender.com/alltaskCategories',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(newcategory)});case 5:response=_context4.sent;_context4.next=8;return response.json();case 8:data=_context4.sent;if(response.status===400||!data){setAlertTitle(\"Alert\");setAlertMessage(\"Something went wrong.\");setShowAlert(true);}else{setAlertTitle(\"Alert\");setAlertMessage(\"Category added successfully.\");setShowAlert(true);// window.location.reload(false);\n}categoryInput.value=\"\";case 11:case\"end\":return _context4.stop();}}},_callee4);}));return function addCategory(_x3){return _ref5.apply(this,arguments);};}();var deleteCat=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(e){var catId,response,data;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:catId=e.target.id;console.log(catId);_context5.prev=2;_context5.next=5;return fetch('https://taskhive-backend-testing.onrender.com/deletingCategory',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({catId:catId})});case 5:response=_context5.sent;_context5.next=8;return response.json();case 8:data=_context5.sent;setTaskCat(data);_context5.next=15;break;case 12:_context5.prev=12;_context5.t0=_context5[\"catch\"](2);console.log(_context5.t0);case 15:case\"end\":return _context5.stop();}}},_callee5,null,[[2,12]]);}));return function deleteCat(_x4){return _ref6.apply(this,arguments);};}();var handleDeleteTask=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(e){var taskId,response,data;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:taskId=e.target.id;_context6.prev=1;_context6.next=4;return fetch('https://taskhive-backend-testing.onrender.com/deletingselectedTask',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({taskId:taskId})});case 4:response=_context6.sent;_context6.next=7;return response.json();case 7:data=_context6.sent;if(response.status===201&&data){setAlertTitle(\"Alert\");setAlertMessage(data.message);setShowAlert(true);clickedTask.setFecthTasks(data);setTaskForUpdate(null);}_context6.next=14;break;case 11:_context6.prev=11;_context6.t0=_context6[\"catch\"](1);console.log(_context6.t0);case 14:case\"end\":return _context6.stop();}}},_callee6,null,[[1,11]]);}));return function handleDeleteTask(_x5){return _ref7.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Container,{className:\"todoFormContainer\",children:[/*#__PURE__*/_jsxs(Modal,{size:\"sm\",show:smShow,onHide:function onHide(){return setSmShow(false);},\"aria-labelledby\":\"example-modal-sizes-title-sm\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,className:\"modalHeader\",children:/*#__PURE__*/_jsx(Modal.Title,{id:\"example-modal-sizes-title-sm\",children:\"Add New Category\"})}),/*#__PURE__*/_jsx(Modal.Body,{className:\"modalBody\",children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form,{method:\"POST\",onSubmit:addCategory,children:/*#__PURE__*/_jsx(Form.Group,{className:\"mb-3 taskForm\",children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(Row,{className:\"justify-content-md-center\",children:[/*#__PURE__*/_jsx(Col,{sm:true,lg:10,children:/*#__PURE__*/_jsx(Form.Control,{type:\"text\",id:\"categoryInput\",className:\"formInput\",placeholder:\"Enter Category\"})}),/*#__PURE__*/_jsx(Col,{sm:true,lg:2,children:/*#__PURE__*/_jsx(Button,{className:\"categoryBtn\",variant:\"primary\",type:\"submit\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-plus\"})})})]})})})})})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsx(ListGroup.Item,{className:\"todosList\",children:\"Default\"}),/*#__PURE__*/_jsx(ListGroup.Item,{className:\"todosList\",children:\"Personal\"}),/*#__PURE__*/_jsx(ListGroup.Item,{className:\"todosList\",children:\"Important\"}),taskCat.map(function(taskCat,index){return/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"todosList\",children:[taskCat.category,\" \",/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-trash trashBtn\",id:taskCat._id,onClick:deleteCat}),\" \"]},index);})]})})})]})})]}),taskForUpdate?/*#__PURE__*/_jsx(Form,{method:\"POST\",onSubmit:handleUpdate,className:\"contactForm\",children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"formTxt\",children:\"Update Task\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",className:\"formInput\",id:\"updateTask\",defaultValue:taskForUpdate.task,placeholder:\"Enter Task\"})]})})}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3 inputGroup\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"formTxt\",children:\"Due Date\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"date\",id:\"updateDate\",className:\"formInput\",defaultValue:taskForUpdate.date,placeholder:\"date\"})]})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3 inputGroup\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"formTxt\",children:\"Category\"}),/*#__PURE__*/_jsxs(Form.Select,{id:\"updateCategory\",className:\"formInput\",\"aria-label\":\"Default select example\",children:[/*#__PURE__*/_jsx(\"option\",{className:\"listOption\",children:taskForUpdate.category}),taskCat.map(function(taskCat,index){return taskCat.category!==taskForUpdate.category?/*#__PURE__*/_jsx(\"option\",{className:\"listOption\",children:taskCat.category},index):null;}),defaultCat.map(function(defaultCat,index){return defaultCat.category!==taskForUpdate.category?/*#__PURE__*/_jsx(\"option\",{className:\"listOption\",children:defaultCat.category},index):null;})]})]})})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"formTxt\",children:\"Submit\"}),/*#__PURE__*/_jsx(Button,{className:\"updateBtn\",variant:\"primary\",type:\"submit\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-check\"})})]})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"formTxt\",children:\"Delete\"}),/*#__PURE__*/_jsx(Button,{className:\"updateBtn\",variant:\"primary\",id:taskForUpdate._id,onClick:handleDeleteTask,children:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-trash\"})})]})})]})]})}):/*#__PURE__*/_jsx(Form,{method:\"POST\",onSubmit:handleSubmit,className:\"contactForm\",children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Row,{className:\"justify-content-md-center\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"formTxt\",children:\"Task\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",id:\"task\",className:\"formInput\",placeholder:\"Enter Task\"})]})})}),/*#__PURE__*/_jsxs(Row,{className:\"justify-content-md-center\",children:[/*#__PURE__*/_jsx(Col,{sm:true,lg:\"6\",children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3 inputGroup\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"formTxt\",children:\"Due Date\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"date\",id:\"date\",className:\"formInput\",placeholder:\"date\"})]})}),/*#__PURE__*/_jsx(Col,{sm:true,lg:\"6\",children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3 inputGroup\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"formTxt\",children:\"Category\"}),/*#__PURE__*/_jsx(Button,{className:\"addCatBadge\",onClick:function onClick(){return setSmShow(true);},children:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-plus\"})}),/*#__PURE__*/_jsxs(Form.Select,{id:\"category\",className:\"formInput\",\"aria-label\":\"Default select example\",children:[/*#__PURE__*/_jsx(\"option\",{className:\"listOption\",children:\"Default\"}),/*#__PURE__*/_jsx(\"option\",{className:\"listOption\",children:\"Personal\"}),/*#__PURE__*/_jsx(\"option\",{className:\"listOption\",children:\"Important\"}),taskCat.map(function(taskCat,index){return/*#__PURE__*/_jsx(\"option\",{className:\"listOption\",children:taskCat.category},index);})]})]})})]}),/*#__PURE__*/_jsx(Row,{className:\"justify-content-md-center\",children:/*#__PURE__*/_jsx(Col,{sm:true,lg:\"6\",children:/*#__PURE__*/_jsx(Button,{className:\"submitBtn\",variant:\"primary\",type:\"submit\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-plus\"})})})})]})})]}),/*#__PURE__*/_jsxs(Modal,{size:\"sm\",className:\"my-modal\",show:showAlert,onHide:handleAlertClose,backdrop:\"static\",keyboard:false,\"aria-labelledby\":\"example-modal-sizes-title-sm\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,className:\"modalHeader\",children:/*#__PURE__*/_jsx(Modal.Title,{id:\"example-modal-sizes-title-sm\",children:alertTitle})}),/*#__PURE__*/_jsx(Modal.Body,{className:\"modalBodyStatic\",children:/*#__PURE__*/_jsx(\"p\",{children:alertMessage})}),/*#__PURE__*/_jsx(Modal.Footer,{className:\"modalFooter\",children:/*#__PURE__*/_jsx(Button,{className:\"saveBtn \",onClick:handleAlertClose,children:\"Ok\"})})]})]});};export default TodoForm;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/test11070/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","useNavigate","NavLink","Container","Form","Button","Row","Col","Badge","Modal","ListGroup","TodoForm","clickedTask","showAlert","setShowAlert","handleAlertClose","alertMessage","setAlertMessage","alertTitle","setAlertTitle","smShow","setSmShow","taskCat","setTaskCat","taskForUpdate","setTaskForUpdate","category","defaultCat","setDefaultCat","showCategories","fetch","method","response","json","data","console","log","handleSubmit","e","preventDefault","form","currentTarget","target","elements","task","date","details","value","headers","body","JSON","stringify","status","setFecthTasks","reset","handleUpdate","updateTask","updateDate","updateCategory","id","_id","taskUpdate","addCategory","categoryInput","newcategory","name","deleteCat","catId","handleDeleteTask","taskId","message","map","index"],"mappings":"2WAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,MAApC,KAAiD,OAAjD,CACA,OAASC,WAAT,CAAsBC,OAAtB,KAAqC,kBAArC,CACA,MAAO,6BAAP,CACA,OAAQC,SAAR,CAAmBC,IAAnB,CAAyBC,MAAzB,CAAiCC,GAAjC,CAAsCC,GAAtC,CAA2CC,KAA3C,CAAkDC,KAAlD,CAAyDC,SAAzD,KAA0E,iBAA1E,C,6IAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAmB,IAAjBC,CAAAA,WAAiB,MAAjBA,WAAiB,CAEhC,cAAkCd,QAAQ,CAAC,KAAD,CAA1C,wCAAOe,SAAP,eAAkBC,YAAlB,eACA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAK,CAACD,YAAY,CAAC,KAAD,CAAZ,CAAqB,CAApD,CACA,eAAwChB,QAAQ,CAAC,EAAD,CAAhD,yCAAOkB,YAAP,eAAqBC,eAArB,eACA,eAAoCnB,QAAQ,CAAC,EAAD,CAA5C,yCAAOoB,UAAP,eAAmBC,aAAnB,eACA,eAA4BrB,QAAQ,CAAC,KAAD,CAApC,yCAAOsB,MAAP,eAAeC,SAAf,eACA,eAA8BvB,QAAQ,CAAC,EAAD,CAAtC,0CAAOwB,OAAP,gBAAgBC,UAAhB,gBACA,gBAA0CzB,QAAQ,EAAlD,2CAAO0B,aAAP,gBAAsBC,gBAAtB,gBACA,gBAAoC3B,QAAQ,CAAC,CACzC,CAAC4B,QAAQ,CAAE,SAAX,CADyC,CAEzC,CAACA,QAAQ,CAAE,UAAX,CAFyC,CAGzC,CAACA,QAAQ,CAAE,WAAX,CAHyC,CAAD,CAA5C,2CAAOC,UAAP,gBAAmBC,aAAnB,gBAKA;AAGA,GAAMC,CAAAA,cAAc,2FAAG,2LAEQC,CAAAA,KAAK,CAAC,8DAAD,CAAiE,CACzFC,MAAM,CAAE,KADiF,CAAjE,CAFb,QAETC,QAFS,qCAMIA,CAAAA,QAAQ,CAACC,IAAT,EANJ,QAMTC,IANS,eAOfX,UAAU,CAACW,IAAD,CAAV,CAPe,iFAUfC,OAAO,CAACC,GAAR,cAVe,qEAAH,kBAAdP,CAAAA,cAAc,2CAApB,CAgBA9B,SAAS,CAAC,UAAK,CACX8B,cAAc,GACjB,CAFQ,CAEP,EAFO,CAAT,CAOA,GAAMQ,CAAAA,YAAY,2FAAG,kBAAOC,CAAP,2LACjBA,CAAC,CAACC,cAAF,GACMC,IAFW,CAEJF,CAAC,CAACG,aAFE,oBAGeH,CAAC,CAACI,MAAF,CAASC,QAHxB,CAGVC,IAHU,oBAGVA,IAHU,CAGJC,IAHI,oBAGJA,IAHI,CAGEnB,QAHF,oBAGEA,QAHF,CAKboB,OALa,CAKH,CACVF,IAAI,CAAEA,IAAI,CAACG,KADD,CAEVF,IAAI,CAAEA,IAAI,CAACE,KAFD,CAGVrB,QAAQ,CAAEA,QAAQ,CAACqB,KAHT,CALG,wBAWMjB,CAAAA,KAAK,CAAC,0DAAD,CAA6D,CACrFC,MAAM,CAAE,MAD6E,CAErFiB,OAAO,CAAE,CACL,eAAiB,kBADZ,CAF4E,CAKrFC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf,CAL+E,CAA7D,CAXX,QAWXd,QAXW,uCAmBAA,CAAAA,QAAQ,CAACC,IAAT,EAnBA,QAmBbC,IAnBa,gBAqBjB,GAAGF,QAAQ,CAACoB,MAAT,GAAoB,GAApB,EAA2B,CAAClB,IAA/B,CAAoC,CAChCf,aAAa,CAAC,OAAD,CAAb,CACAF,eAAe,CAAC,uBAAD,CAAf,CACAH,YAAY,CAAC,IAAD,CAAZ,CACH,CAJD,IAKI,CACAK,aAAa,CAAC,OAAD,CAAb,CACAF,eAAe,CAAC,0BAAD,CAAf,CACAH,YAAY,CAAC,IAAD,CAAZ,CACAe,cAAc,GACdjB,WAAW,CAACyC,aAAZ,CAA0BnB,IAA1B,EACH,CACDT,gBAAgB,CAAC,IAAD,CAAhB,CACAe,IAAI,CAACc,KAAL,GAlCiB,yDAAH,kBAAZjB,CAAAA,YAAY,6CAAlB,CAsCA,GAAMkB,CAAAA,YAAY,2FAAG,kBAAOjB,CAAP,8MACjBA,CAAC,CAACC,cAAF,GACMC,IAFW,CAEJF,CAAC,CAACG,aAFE,qBAGiCH,CAAC,CAACI,MAAF,CAASC,QAH1C,CAGVa,UAHU,qBAGVA,UAHU,CAGEC,UAHF,qBAGEA,UAHF,CAGcC,cAHd,qBAGcA,cAHd,CAKbZ,OALa,CAKH,CACVF,IAAI,CAAEY,UAAU,CAACT,KADP,CAEVF,IAAI,CAAEY,UAAU,CAACV,KAFP,CAGVrB,QAAQ,CAAEgC,cAAc,CAACX,KAHf,CAIVY,EAAE,CAAEnC,aAAa,CAACoC,GAJR,CALG,wBAYM9B,CAAAA,KAAK,CAAC,4DAAD,CAA+D,CACvFC,MAAM,CAAE,MAD+E,CAEvFiB,OAAO,CAAE,CACL,eAAiB,kBADZ,CAF8E,CAKvFC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf,CALiF,CAA/D,CAZX,QAYXd,QAZW,uCAoBAA,CAAAA,QAAQ,CAACC,IAAT,EApBA,QAoBbC,IApBa,gBAsBjB,GAAGF,QAAQ,CAACoB,MAAT,GAAoB,GAApB,EAA2B,CAAClB,IAA/B,CAAoC,CAChCf,aAAa,CAAC,OAAD,CAAb,CACAF,eAAe,CAAC,uBAAD,CAAf,CACAH,YAAY,CAAC,IAAD,CAAZ,CAEH,CALD,IAMI,CACAK,aAAa,CAAC,OAAD,CAAb,CACAF,eAAe,CAAC,4BAAD,CAAf,CACAH,YAAY,CAAC,IAAD,CAAZ,CACAF,WAAW,CAACyC,aAAZ,CAA0BnB,IAA1B,EACAT,gBAAgB,CAAC,IAAD,CAAhB,CACH,CACDe,IAAI,CAACc,KAAL,GAnCiB,yDAAH,kBAAZC,CAAAA,YAAY,8CAAlB,CAuCAxD,SAAS,CAAC,UAAI,CACV0B,gBAAgB,CAACb,WAAW,CAACiD,UAAb,CAAhB,CACH,CAFQ,CAEP,CAACjD,WAAW,CAACiD,UAAb,CAFO,CAAT,CAMA,GAAMC,CAAAA,WAAW,2FAAG,kBAAOxB,CAAP,kKAChBA,CAAC,CAACC,cAAF,GAEOwB,aAHS,CAGQzB,CAAC,CAACI,MAAF,CAASC,QAHjB,CAGToB,aAHS,CAKZC,WALY,CAKE,CACdC,IAAI,CAAEF,aAAa,CAAChB,KADN,CALF,wBAUOjB,CAAAA,KAAK,CAAC,iEAAD,CAAoE,CAC5FC,MAAM,CAAE,MADoF,CAE5FiB,OAAO,CAAE,CACL,eAAiB,kBADZ,CAFmF,CAK5FC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAea,WAAf,CALsF,CAApE,CAVZ,QAUVhC,QAVU,uCAkBCA,CAAAA,QAAQ,CAACC,IAAT,EAlBD,QAkBZC,IAlBY,gBAoBhB,GAAGF,QAAQ,CAACoB,MAAT,GAAoB,GAApB,EAA2B,CAAClB,IAA/B,CAAoC,CAChCf,aAAa,CAAC,OAAD,CAAb,CACAF,eAAe,CAAC,uBAAD,CAAf,CACAH,YAAY,CAAC,IAAD,CAAZ,CACH,CAJD,IAKI,CACAK,aAAa,CAAC,OAAD,CAAb,CACAF,eAAe,CAAC,8BAAD,CAAf,CACAH,YAAY,CAAC,IAAD,CAAZ,CACA;AACH,CACDiD,aAAa,CAAChB,KAAd,CAAsB,EAAtB,CA/BgB,yDAAH,kBAAXe,CAAAA,WAAW,8CAAjB,CAmCA,GAAMI,CAAAA,SAAS,2FAAG,kBAAO5B,CAAP,8IACV6B,KADU,CACF7B,CAAC,CAACI,MAAF,CAASiB,EADP,CAEdxB,OAAO,CAACC,GAAR,CAAY+B,KAAZ,EAFc,wCAKarC,CAAAA,KAAK,CAAC,gEAAD,CAAmE,CAC3FC,MAAM,CAAE,MADmF,CAE3FiB,OAAO,CAAE,CACL,eAAiB,kBADZ,CAFkF,CAK3FC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACgB,KAAK,CAALA,KAAD,CAAf,CALqF,CAAnE,CALlB,QAKJnC,QALI,uCAaOA,CAAAA,QAAQ,CAACC,IAAT,EAbP,QAaNC,IAbM,gBAeVX,UAAU,CAACW,IAAD,CAAV,CAfU,qFAkBVC,OAAO,CAACC,GAAR,eAlBU,uEAAH,kBAAT8B,CAAAA,SAAS,8CAAf,CA0BA,GAAME,CAAAA,gBAAgB,2FAAG,kBAAO9B,CAAP,+IACjB+B,MADiB,CACR/B,CAAC,CAACI,MAAF,CAASiB,EADD,yCAGM7B,CAAAA,KAAK,CAAC,oEAAD,CAAuE,CAC/FC,MAAM,CAAE,MADuF,CAE/FiB,OAAO,CAAE,CACL,eAAiB,kBADZ,CAFsF,CAK/FC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACkB,MAAM,CAANA,MAAD,CAAf,CALyF,CAAvE,CAHX,QAGXrC,QAHW,uCAWAA,CAAAA,QAAQ,CAACC,IAAT,EAXA,QAWbC,IAXa,gBAYjB,GAAGF,QAAQ,CAACoB,MAAT,GAAoB,GAApB,EAA2BlB,IAA9B,CAAmC,CAC/Bf,aAAa,CAAC,OAAD,CAAb,CACAF,eAAe,CAACiB,IAAI,CAACoC,OAAN,CAAf,CACAxD,YAAY,CAAC,IAAD,CAAZ,CACAF,WAAW,CAACyC,aAAZ,CAA0BnB,IAA1B,EACAT,gBAAgB,CAAC,IAAD,CAAhB,CACH,CAlBgB,qFAqBjBU,OAAO,CAACC,GAAR,eArBiB,uEAAH,kBAAhBgC,CAAAA,gBAAgB,8CAAtB,CA2BF,mBACE,wCACI,MAAC,SAAD,EAAW,SAAS,CAAC,mBAArB,wBACI,MAAC,KAAD,EAAO,IAAI,CAAC,IAAZ,CAAiB,IAAI,CAAEhD,MAAvB,CAA+B,MAAM,CAAE,wBAAMC,CAAAA,SAAS,CAAC,KAAD,CAAf,EAAvC,CAA+D,kBAAgB,8BAA/E,wBACA,KAAC,KAAD,CAAO,MAAP,EAAc,WAAW,KAAzB,CAA0B,SAAS,CAAC,aAApC,uBACA,KAAC,KAAD,CAAO,KAAP,EAAa,EAAE,CAAC,8BAAhB,8BADA,EADA,cAMA,KAAC,KAAD,CAAO,IAAP,EAAY,SAAS,CAAC,WAAtB,uBACI,MAAC,SAAD,yBACA,KAAC,GAAD,wBACI,KAAC,GAAD,wBACI,KAAC,IAAD,EAAM,MAAM,CAAC,MAAb,CAAoB,QAAQ,CAAEyC,WAA9B,uBACI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,eAAtB,uBACI,KAAC,SAAD,wBACI,MAAC,GAAD,EAAK,SAAS,CAAC,2BAAf,wBACI,KAAC,GAAD,EAAK,EAAE,KAAP,CAAQ,EAAE,CAAE,EAAZ,uBACI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,EAAE,CAAC,eAA7B,CAA6C,SAAS,CAAC,WAAvD,CAAmE,WAAW,CAAC,gBAA/E,EADJ,EADJ,cAII,KAAC,GAAD,EAAK,EAAE,KAAP,CAAQ,EAAE,CAAE,CAAZ,uBACI,KAAC,MAAD,EAAQ,SAAS,CAAC,aAAlB,CAAgC,OAAO,CAAC,SAAxC,CAAkD,IAAI,CAAC,QAAvD,uBACI,UAAG,SAAS,CAAC,YAAb,EADJ,EADJ,EAJJ,GADJ,EADJ,EADJ,EADJ,EADJ,EADA,cAsBA,KAAC,GAAD,wBACI,KAAC,GAAD,wBACI,MAAC,SAAD,EAAW,OAAO,CAAC,OAAnB,wBACI,KAAC,SAAD,CAAW,IAAX,EAAgB,SAAS,CAAC,WAA1B,qBADJ,cAEI,KAAC,SAAD,CAAW,IAAX,EAAgB,SAAS,CAAC,WAA1B,sBAFJ,cAGI,KAAC,SAAD,CAAW,IAAX,EAAgB,SAAS,CAAC,WAA1B,uBAHJ,CAIKxC,OAAO,CAACiD,GAAR,CAAa,SAACjD,OAAD,CAAUkD,KAAV,qBACV,MAAC,SAAD,CAAW,IAAX,EAAgB,SAAS,CAAC,WAA1B,WAAmDlD,OAAO,CAACI,QAA3D,kBAAqE,UAAG,SAAS,CAAC,sBAAb,CAAoC,EAAE,CAAEJ,OAAO,CAACsC,GAAhD,CAAqD,OAAO,CAAEM,SAA9D,EAArE,OAA2CM,KAA3C,CADU,EAAb,CAJL,GADJ,EADJ,EAtBA,GADJ,EANA,GADJ,CA8CChD,aAAa,cACV,KAAC,IAAD,EAAM,MAAM,CAAC,MAAb,CAAoB,QAAQ,CAAE+B,YAA9B,CAA4C,SAAS,CAAC,aAAtD,uBACI,MAAC,SAAD,yBACI,KAAC,GAAD,wBACI,KAAC,GAAD,wBACI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,SAAtB,yBADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,SAAS,CAAC,WAApC,CAAgD,EAAE,CAAC,YAAnD,CAAgE,YAAY,CAAE/B,aAAa,CAACoB,IAA5F,CAAkG,WAAW,CAAC,YAA9G,EAFJ,GADJ,EADJ,EADJ,cASI,MAAC,GAAD,yBACI,KAAC,GAAD,wBACI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,iBAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,SAAtB,sBADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,EAAE,CAAC,YAA7B,CAA0C,SAAS,CAAC,WAApD,CAAgE,YAAY,CAAEpB,aAAa,CAACqB,IAA5F,CAAkG,WAAW,CAAC,MAA9G,EAFJ,GADJ,EADJ,cAOI,KAAC,GAAD,wBACI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,iBAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,SAAtB,sBADJ,cAEQ,MAAC,IAAD,CAAM,MAAN,EAAa,EAAE,CAAC,gBAAhB,CAAiC,SAAS,CAAC,WAA3C,CAAuD,aAAW,wBAAlE,wBACI,eAAQ,SAAS,CAAC,YAAlB,UAAiCrB,aAAa,CAACE,QAA/C,EADJ,CAESJ,OAAO,CAACiD,GAAR,CAAa,SAACjD,OAAD,CAAUkD,KAAV,CAAoB,CAC9B,MAAOlD,CAAAA,OAAO,CAACI,QAAR,GAAqBF,aAAa,CAACE,QAAnC,cACP,eAAQ,SAAS,CAAC,YAAlB,UAA6CJ,OAAO,CAACI,QAArD,EAAoC8C,KAApC,CADO,CAGP,IAHA,CAIH,CALA,CAFT,CASS7C,UAAU,CAAC4C,GAAX,CAAe,SAAC5C,UAAD,CAAa6C,KAAb,CAAuB,CACnC,MAAO7C,CAAAA,UAAU,CAACD,QAAX,GAAwBF,aAAa,CAACE,QAAtC,cACP,eAAQ,SAAS,CAAC,YAAlB,UAA8CC,UAAU,CAACD,QAAzD,EAAqC8C,KAArC,CADO,CAGP,IAHA,CAIH,CALA,CATT,GAFR,GADJ,EAPJ,GATJ,cAsCI,MAAC,GAAD,yBACI,KAAC,GAAD,wBACI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,SAAtB,oBADJ,cAEI,KAAC,MAAD,EAAQ,SAAS,CAAC,WAAlB,CAA8B,OAAO,CAAC,SAAtC,CAAgD,IAAI,CAAC,QAArD,uBACI,UAAG,SAAS,CAAC,aAAb,EADJ,EAFJ,GADJ,EADJ,cAgBI,KAAC,GAAD,wBACI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,SAAtB,oBADJ,cAEI,KAAC,MAAD,EAAQ,SAAS,CAAC,WAAlB,CAA8B,OAAO,CAAC,SAAtC,CAAgD,EAAE,CAAEhD,aAAa,CAACoC,GAAlE,CAAuE,OAAO,CAAEQ,gBAAhF,uBACI,UAAG,SAAS,CAAC,aAAb,EADJ,EAFJ,GADJ,EAhBJ,GAtCJ,GADJ,EADU,cAuEV,KAAC,IAAD,EAAM,MAAM,CAAC,MAAb,CAAoB,QAAQ,CAAE/B,YAA9B,CAA4C,SAAS,CAAC,aAAtD,uBACI,MAAC,SAAD,yBACI,KAAC,GAAD,EAAK,SAAS,CAAC,2BAAf,uBACI,KAAC,GAAD,wBACI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,SAAtB,kBADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,EAAE,CAAC,MAA7B,CAAoC,SAAS,CAAC,WAA9C,CAA0D,WAAW,CAAC,YAAtE,EAFJ,GADJ,EADJ,EADJ,cASI,MAAC,GAAD,EAAK,SAAS,CAAC,2BAAf,wBACI,KAAC,GAAD,EAAK,EAAE,KAAP,CAAQ,EAAE,CAAC,GAAX,uBACI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,iBAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,SAAtB,sBADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,EAAE,CAAC,MAA7B,CAAoC,SAAS,CAAC,WAA9C,CAA0D,WAAW,CAAC,MAAtE,EAFJ,GADJ,EADJ,cAOI,KAAC,GAAD,EAAK,EAAE,KAAP,CAAQ,EAAE,CAAC,GAAX,uBACI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,iBAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,SAAtB,sBADJ,cAEI,KAAC,MAAD,EAAQ,SAAS,CAAC,aAAlB,CAAgC,OAAO,CAAE,yBAAMhB,CAAAA,SAAS,CAAC,IAAD,CAAf,EAAzC,uBAAgE,UAAG,SAAS,CAAC,YAAb,EAAhE,EAFJ,cAGI,MAAC,IAAD,CAAM,MAAN,EAAa,EAAE,CAAC,UAAhB,CAA2B,SAAS,CAAC,WAArC,CAAiD,aAAW,wBAA5D,wBACI,eAAQ,SAAS,CAAC,YAAlB,qBADJ,cAEI,eAAQ,SAAS,CAAC,YAAlB,sBAFJ,cAGI,eAAQ,SAAS,CAAC,YAAlB,uBAHJ,CAIKC,OAAO,CAACiD,GAAR,CAAa,SAACjD,OAAD,CAAUkD,KAAV,qBACV,eAAQ,SAAS,CAAC,YAAlB,UAA4ClD,OAAO,CAACI,QAApD,EAAoC8C,KAApC,CADU,EAAb,CAJL,GAHJ,GADJ,EAPJ,GATJ,cA+BI,KAAC,GAAD,EAAK,SAAS,CAAC,2BAAf,uBACI,KAAC,GAAD,EAAK,EAAE,KAAP,CAAQ,EAAE,CAAC,GAAX,uBACI,KAAC,MAAD,EAAQ,SAAS,CAAC,WAAlB,CAA8B,OAAO,CAAC,SAAtC,CAAgD,IAAI,CAAC,QAArD,uBAA+D,UAAG,SAAS,CAAC,YAAb,EAA/D,EADJ,EADJ,EA/BJ,GADJ,EArHJ,GADJ,cAqKI,MAAC,KAAD,EAAO,IAAI,CAAC,IAAZ,CAAiB,SAAS,CAAC,UAA3B,CAAsC,IAAI,CAAE3D,SAA5C,CAAuD,MAAM,CAAEE,gBAA/D,CAAiF,QAAQ,CAAC,QAA1F,CAAmG,QAAQ,CAAE,KAA7G,CAAoH,kBAAgB,8BAApI,wBACI,KAAC,KAAD,CAAO,MAAP,EAAc,WAAW,KAAzB,CAA0B,SAAS,CAAC,aAApC,uBACI,KAAC,KAAD,CAAO,KAAP,EAAa,EAAE,CAAC,8BAAhB,UAAgDG,UAAhD,EADJ,EADJ,cAII,KAAC,KAAD,CAAO,IAAP,EAAY,SAAS,CAAC,iBAAtB,uBACI,mBAAIF,YAAJ,EADJ,EAJJ,cAOI,KAAC,KAAD,CAAO,MAAP,EAAc,SAAS,CAAC,aAAxB,uBACI,KAAC,MAAD,EAAQ,SAAS,CAAC,UAAlB,CAA6B,OAAO,CAAED,gBAAtC,gBADJ,EAPJ,GArKJ,GADF,CAmLD,CAtYD,CAwYA,cAAeJ,CAAAA,QAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport { useNavigate, NavLink } from 'react-router-dom'\r\nimport \"../stylesheets/todoForm.css\"\r\nimport {Container, Form, Button, Row, Col, Badge, Modal, ListGroup } from 'react-bootstrap';\r\n\r\nconst TodoForm = ({clickedTask}) => {\r\n    \r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const handleAlertClose = () =>{setShowAlert(false);}\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [alertTitle, setAlertTitle] = useState(\"\");\r\n    const [smShow, setSmShow] = useState(false);\r\n    const [taskCat, setTaskCat] = useState([]);\r\n    const [taskForUpdate, setTaskForUpdate] = useState();\r\n    const [defaultCat, setDefaultCat] = useState([\r\n        {category: 'Default'},\r\n        {category: 'Personal'},\r\n        {category: 'Important'}\r\n    ]);\r\n    // let markTask = clickedTask.taskUpdate;\r\n  \r\n\r\n    const showCategories = async () =>{\r\n        try {\r\n            const response = await fetch('https://taskhive-backend-testing.onrender.com/showCategories', {\r\n                method: 'GET',\r\n            });\r\n    \r\n            const data = await response.json();\r\n            setTaskCat(data);\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n        showCategories();\r\n    },[])\r\n\r\n\r\n    \r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        const form = e.currentTarget;\r\n        const {task, date, category } = e.target.elements;\r\n\r\n        let details = {\r\n            task: task.value,\r\n            date: date.value,\r\n            category: category.value\r\n        }\r\n\r\n        const response = await fetch('https://taskhive-backend-testing.onrender.com/addNewTask', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(details),\r\n        })\r\n\r\n        let data = await response.json();\r\n\r\n        if(response.status === 400 || !data){\r\n            setAlertTitle(\"Alert\")\r\n            setAlertMessage(\"Something went wrong.\");\r\n            setShowAlert(true);\r\n        }\r\n        else{\r\n            setAlertTitle(\"Alert\")\r\n            setAlertMessage(\"Task added successfully.\");\r\n            setShowAlert(true);\r\n            showCategories();\r\n            clickedTask.setFecthTasks(data);\r\n        }\r\n        setTaskForUpdate(null); \r\n        form.reset();\r\n        \r\n    }\r\n\r\n    const handleUpdate = async (e) => {\r\n        e.preventDefault();\r\n        const form = e.currentTarget;\r\n        const {updateTask, updateDate, updateCategory } = e.target.elements;\r\n\r\n        let details = {\r\n            task: updateTask.value,\r\n            date: updateDate.value,\r\n            category: updateCategory.value,\r\n            id: taskForUpdate._id\r\n        }\r\n\r\n        const response = await fetch('https://taskhive-backend-testing.onrender.com/updatingTask', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(details),\r\n        })\r\n\r\n        let data = await response.json();\r\n\r\n        if(response.status === 400 || !data){\r\n            setAlertTitle(\"Alert\")\r\n            setAlertMessage(\"Something went wrong.\");\r\n            setShowAlert(true);\r\n            \r\n        }\r\n        else{\r\n            setAlertTitle(\"Alert\")\r\n            setAlertMessage(\"Task updated successfully.\");\r\n            setShowAlert(true);\r\n            clickedTask.setFecthTasks(data);\r\n            setTaskForUpdate(null);\r\n        }\r\n        form.reset();\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        setTaskForUpdate(clickedTask.taskUpdate);\r\n    },[clickedTask.taskUpdate])\r\n\r\n\r\n\r\n    const addCategory = async (e) =>{\r\n        e.preventDefault();\r\n\r\n        const {categoryInput} = e.target.elements;\r\n\r\n        let newcategory = {\r\n            name: categoryInput.value\r\n        }\r\n        \r\n    \r\n        const response = await fetch('https://taskhive-backend-testing.onrender.com/alltaskCategories', { \r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type' : 'application/json' \r\n            },\r\n            body: JSON.stringify(newcategory),\r\n        })\r\n        \r\n        let data = await response.json();\r\n\r\n        if(response.status === 400 || !data){\r\n            setAlertTitle(\"Alert\")\r\n            setAlertMessage(\"Something went wrong.\");\r\n            setShowAlert(true);\r\n        }\r\n        else{\r\n            setAlertTitle(\"Alert\")\r\n            setAlertMessage(\"Category added successfully.\");\r\n            setShowAlert(true);\r\n            // window.location.reload(false);\r\n        }\r\n        categoryInput.value = \"\";\r\n    }\r\n\r\n\r\n    const deleteCat = async (e) =>{\r\n        let catId = e.target.id\r\n        console.log(catId)\r\n        \r\n        try {\r\n            const response = await fetch('https://taskhive-backend-testing.onrender.com/deletingCategory', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                },\r\n                body: JSON.stringify({catId}),\r\n            })\r\n    \r\n            let data = await response.json();\r\n\r\n            setTaskCat(data);\r\n    \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n    const handleDeleteTask = async (e) =>{\r\n        let taskId = e.target.id;\r\n        try {\r\n            const response = await fetch('https://taskhive-backend-testing.onrender.com/deletingselectedTask', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                },\r\n                body: JSON.stringify({taskId}),\r\n            })\r\n    \r\n            let data = await response.json();\r\n            if(response.status === 201 && data){\r\n                setAlertTitle(\"Alert\")\r\n                setAlertMessage(data.message);\r\n                setShowAlert(true);\r\n                clickedTask.setFecthTasks(data);\r\n                setTaskForUpdate(null);\r\n            }\r\n    \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n        <Container className='todoFormContainer'> \r\n            <Modal size=\"sm\" show={smShow} onHide={() => setSmShow(false)} aria-labelledby=\"example-modal-sizes-title-sm\" >\r\n            <Modal.Header closeButton className='modalHeader'>\r\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\r\n                Add New Category\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBody'>\r\n                <Container>\r\n                <Row >\r\n                    <Col>\r\n                        <Form method='POST' onSubmit={addCategory}> \r\n                            <Form.Group className=\"mb-3 taskForm\" >\r\n                                <Container>\r\n                                    <Row className=\"justify-content-md-center\">\r\n                                        <Col sm lg={10} >\r\n                                            <Form.Control type=\"text\" id='categoryInput' className='formInput' placeholder=\"Enter Category\" />\r\n                                        </Col>\r\n                                        <Col sm lg={2}>\r\n                                            <Button className='categoryBtn' variant=\"primary\" type=\"submit\" >\r\n                                                <i className=\"fa fa-plus\"></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </Form.Group>\r\n                            \r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <ListGroup variant=\"flush\" >\r\n                            <ListGroup.Item className='todosList'>Default</ListGroup.Item>\r\n                            <ListGroup.Item className='todosList'>Personal</ListGroup.Item>\r\n                            <ListGroup.Item className='todosList'>Important</ListGroup.Item>\r\n                            {taskCat.map( (taskCat, index) =>\r\n                                <ListGroup.Item className='todosList' key={index}>{taskCat.category} <i className=\"fa fa-trash trashBtn\" id={taskCat._id} onClick={deleteCat}></i> </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n                </Container>\r\n            </Modal.Body>\r\n            </Modal>\r\n\r\n        {taskForUpdate ?\r\n            <Form method='POST' onSubmit={handleUpdate} className='contactForm' >\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label className='formTxt'>Update Task</Form.Label>\r\n                                <Form.Control type=\"text\" className='formInput' id='updateTask' defaultValue={taskForUpdate.task} placeholder=\"Enter Task\" />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3 inputGroup\" >\r\n                                <Form.Label className='formTxt'>Due Date</Form.Label>\r\n                                <Form.Control type=\"date\" id='updateDate' className='formInput' defaultValue={taskForUpdate.date} placeholder=\"date\" />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3 inputGroup\" >\r\n                                <Form.Label className='formTxt'>Category</Form.Label>\r\n                                    <Form.Select id='updateCategory' className='formInput' aria-label=\"Default select example\">  \r\n                                        <option className='listOption' >{taskForUpdate.category}</option> \r\n                                            {taskCat.map( (taskCat, index) => {\r\n                                                return taskCat.category !== taskForUpdate.category ?\r\n                                                <option className='listOption' key={index} >{taskCat.category}</option> \r\n                                            :\r\n                                                null  \r\n                                            })}\r\n\r\n                                            {defaultCat.map((defaultCat, index) => {\r\n                                                return defaultCat.category !== taskForUpdate.category ?\r\n                                                <option className='listOption'  key={index} >{defaultCat.category}</option> \r\n                                            :\r\n                                                null \r\n                                            })}                   \r\n                                    </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row >\r\n                        <Col >\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label className='formTxt'>Submit</Form.Label>\r\n                                <Button className='updateBtn' variant=\"primary\" type=\"submit\" >\r\n                                    <i className=\"fa fa-check\"></i> \r\n                                </Button>\r\n                            </Form.Group>\r\n                            {/* <Form.Group className=\"mb-3\" >\r\n                                <Form.Label className='formTxt'>Status</Form.Label>\r\n                                <Form.Select id='updateStatus' className='formInput' aria-label=\"Default select example\"> \r\n                                    <option className='listOption'>Pending</option>                \r\n                                    <option className='listOption'>Completed</option>                \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label className='formTxt'>Delete</Form.Label>\r\n                                <Button className='updateBtn' variant=\"primary\" id={taskForUpdate._id} onClick={handleDeleteTask} >\r\n                                    <i className=\"fa fa-trash\"></i> \r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Form>\r\n\r\n            :\r\n\r\n\r\n            <Form method='POST' onSubmit={handleSubmit} className='contactForm' >\r\n                <Container>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <Col>\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label className='formTxt'>Task</Form.Label>\r\n                                <Form.Control type=\"text\" id='task' className='formInput' placeholder=\"Enter Task\" />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <Col sm lg=\"6\">\r\n                            <Form.Group className=\"mb-3 inputGroup\" >\r\n                                <Form.Label className='formTxt'>Due Date</Form.Label>\r\n                                <Form.Control type=\"date\" id='date' className='formInput' placeholder=\"date\" />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col sm lg=\"6\">\r\n                            <Form.Group className=\"mb-3 inputGroup\" >\r\n                                <Form.Label className='formTxt'>Category</Form.Label>\r\n                                <Button className=\"addCatBadge\" onClick={() => setSmShow(true)}><i className=\"fa fa-plus\" ></i></Button>\r\n                                <Form.Select id='category' className='formInput' aria-label=\"Default select example\">  \r\n                                    <option className='listOption'>Default</option>               \r\n                                    <option className='listOption'>Personal</option>               \r\n                                    <option className='listOption'>Important</option>               \r\n                                    {taskCat.map( (taskCat, index) =>\r\n                                        <option className='listOption' key={index}>{taskCat.category}</option>\r\n                                    )}\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        <Col sm lg=\"6\">\r\n                            <Button className='submitBtn' variant=\"primary\" type=\"submit\" ><i className=\"fa fa-plus\"></i></Button>                \r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Form>\r\n            }\r\n        </Container>\r\n\r\n\r\n\r\n\r\n        {/* Alert Modal */}\r\n\r\n        <Modal size=\"sm\" className='my-modal' show={showAlert} onHide={handleAlertClose} backdrop=\"static\" keyboard={false} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\">{alertTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBodyStatic'>\r\n                <p>{alertMessage}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer className='modalFooter'>\r\n                <Button className='saveBtn ' onClick={handleAlertClose}>Ok</Button> \r\n            </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TodoForm"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\test11070\\\\src\\\\components\\\\Notifications.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport '../stylesheets/notifications.css';\nimport { Row, Col, Container, InputGroup, Button, Modal, FormControl, ListGroup, Badge } from 'react-bootstrap';\nimport SearchMembers from './SearchMembers';\nimport image_S1 from '../images/abstract10.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Notifications = () => {\n  _s();\n\n  const [fullscreen, setFullscreen] = useState(true);\n  const [show, setShow] = useState(false);\n\n  const handleShow = () => {\n    setFullscreen(true);\n    setShow(true);\n  };\n\n  const [senderProfiles, setSenderProfiles] = useState([]);\n  const [receiverProfiles, setReceiverProfiles] = useState([]);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleAlertClose = () => {\n    setShowAlert(false);\n  };\n\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [alertTitle, setAlertTitle] = useState(\"\");\n  const [fetchData, setFetchData] = useState();\n\n  const requestSentBYMe = async () => {\n    try {\n      const response = await fetch('https://taskhive-hb9j.onrender.com/requestSentBYMe', {\n        method: 'GET'\n      });\n      const data = await response.json();\n      console.log(data);\n      setReceiverProfiles(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getRequest = async () => {\n    try {\n      const response = await fetch('https://taskhive-hb9j.onrender.com/getRequest', {\n        method: 'GET'\n      });\n      const data = await response.json();\n      console.log(data);\n      setSenderProfiles(data); // console.log(senderProfiles)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getRequest();\n    requestSentBYMe();\n  }, [fetchData]);\n\n  const handleAcceptBtn = async e => {\n    let personId = e.target.id;\n\n    try {\n      const response = await fetch('https://taskhive-hb9j.onrender.com/acceptRequest', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          personId\n        }) // body: searchInput\n\n      });\n      let data = await response.json();\n\n      if (response.status === 201 && data) {\n        setAlertTitle(\"Alert\");\n        setAlertMessage(data.message);\n        setShowAlert(true);\n        setFetchData(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCancelRequest = async e => {\n    let personId = e.target.id;\n\n    try {\n      const response = await fetch('https://taskhive-hb9j.onrender.com/cancelRequest', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          personId\n        }) // body: searchInput\n\n      });\n      let data = await response.json();\n\n      if (response.status === 201 && data) {\n        setAlertTitle(\"Alert\");\n        setAlertMessage(data.message);\n        setShowAlert(true);\n        setFetchData(data);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleRefreshCompnent = () => {\n    getRequest();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      className: \"navList\",\n      onClick: handleShow,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-search\",\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), ' ', \"Members\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      fullscreen: fullscreen,\n      onHide: () => setShow(false),\n      \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              sm: true,\n              lg: \"5\",\n              children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"Notifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: true,\n              lg: \"6\",\n              children: [/*#__PURE__*/_jsxDEV(Container, {\n                children: /*#__PURE__*/_jsxDEV(SearchMembers, {\n                  props: {\n                    setFetchData\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 28\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: true,\n              lg: \"1\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"refreshBtn2\",\n                onClick: handleRefreshCompnent,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons refreshIcon\",\n                  children: \"refresh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 81\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBody\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"justify-content-md-center\",\n                children: [senderProfiles.map((senderProfiles, index) => /*#__PURE__*/_jsxDEV(Col, {\n                  sm: true,\n                  lg: \"4\",\n                  children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    as: \"li\",\n                    className: \"profileMessages\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: senderProfiles.image,\n                      onError: e => {\n                        e.target.onError = null;\n                        e.target.src = image_S1;\n                      },\n                      className: \"profileImages\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: senderProfiles.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      id: senderProfiles._id,\n                      bg: \"primary\",\n                      className: \"sendRequestBtn\",\n                      onClick: handleAcceptBtn,\n                      children: \"Accept Request\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 29\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 25\n                }, this)), receiverProfiles.map((receiverProfiles, index) => /*#__PURE__*/_jsxDEV(Col, {\n                  sm: true,\n                  lg: \"4\",\n                  children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    as: \"li\",\n                    className: \"profileMessages\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: receiverProfiles.image,\n                      onError: e => {\n                        e.target.onError = null;\n                        e.target.src = image_S1;\n                      },\n                      className: \"profileImages\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: receiverProfiles.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      id: receiverProfiles._id,\n                      bg: \"primary\",\n                      className: \"sendRequestBtn\",\n                      onClick: handleCancelRequest,\n                      children: \"Cancel Request\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 29\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"sm\",\n      show: showAlert,\n      onHide: handleAlertClose,\n      backdrop: \"static\",\n      keyboard: false,\n      \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-sm\",\n          children: alertTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBodyStatic\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: alertMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        className: \"modalFooter\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"saveBtn\",\n          onClick: handleAlertClose,\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Notifications, \"HXs/Sb3kNcCmT07MPlZw3MOWpWo=\");\n\n_c = Notifications;\nexport default Notifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/test11070/src/components/Notifications.js"],"names":["React","useState","useEffect","useContext","NavLink","useNavigate","Row","Col","Container","InputGroup","Button","Modal","FormControl","ListGroup","Badge","SearchMembers","image_S1","Notifications","fullscreen","setFullscreen","show","setShow","handleShow","senderProfiles","setSenderProfiles","receiverProfiles","setReceiverProfiles","showAlert","setShowAlert","handleAlertClose","alertMessage","setAlertMessage","alertTitle","setAlertTitle","fetchData","setFetchData","requestSentBYMe","response","fetch","method","data","json","console","log","error","getRequest","handleAcceptBtn","e","personId","target","id","headers","body","JSON","stringify","status","message","handleCancelRequest","handleRefreshCompnent","map","index","image","onError","src","name","_id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\r\nimport { NavLink, useNavigate } from 'react-router-dom'\r\nimport '../stylesheets/notifications.css'\r\nimport { Row, Col, Container, InputGroup, Button, Modal, FormControl, ListGroup, Badge } from 'react-bootstrap';\r\nimport SearchMembers from './SearchMembers';\r\nimport image_S1 from '../images/abstract10.png'\r\n\r\nconst Notifications = () => { \r\n\r\n    const [fullscreen, setFullscreen] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => {setFullscreen(true); setShow(true);}\r\n    const [senderProfiles, setSenderProfiles] = useState([]);\r\n    const [receiverProfiles, setReceiverProfiles] = useState([]);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const handleAlertClose = () =>{setShowAlert(false);}\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [alertTitle, setAlertTitle] = useState(\"\");\r\n    const [fetchData, setFetchData] = useState();\r\n\r\n\r\n    const requestSentBYMe = async () =>{\r\n      try {\r\n          const response = await fetch('https://taskhive-hb9j.onrender.com/requestSentBYMe', { \r\n              method: 'GET',\r\n          })\r\n\r\n          const data = await response.json();\r\n          console.log(data)\r\n          setReceiverProfiles(data);\r\n\r\n      } catch (error) {\r\n          console.log(error)\r\n      }\r\n  }\r\n\r\n\r\n\r\n    const getRequest = async () =>{\r\n        try {\r\n            const response = await fetch('https://taskhive-hb9j.onrender.com/getRequest', { \r\n                method: 'GET',\r\n            })\r\n\r\n            const data = await response.json();\r\n            console.log(data)\r\n            setSenderProfiles(data);\r\n            // console.log(senderProfiles)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRequest();\r\n        requestSentBYMe();\r\n    },[fetchData])\r\n\r\n\r\n    const handleAcceptBtn = async (e) =>{\r\n        let personId = e.target.id;\r\n        try {\r\n          const response = await fetch('https://taskhive-hb9j.onrender.com/acceptRequest', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type' : 'application/json' \r\n            },\r\n            body: JSON.stringify({personId}),\r\n            // body: searchInput\r\n        })\r\n\r\n        let data = await response.json();\r\n\r\n        if(response.status === 201 && data){\r\n          setAlertTitle(\"Alert\");\r\n          setAlertMessage(data.message);\r\n          setShowAlert(true);\r\n          setFetchData(data)\r\n        }\r\n          \r\n      } catch (error) {\r\n        console.log(error)    \r\n      }\r\n        \r\n    }\r\n\r\n\r\n\r\n    const handleCancelRequest = async (e) =>{\r\n      let personId = e.target.id;\r\n      try {\r\n        const response = await fetch('https://taskhive-hb9j.onrender.com/cancelRequest', {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type' : 'application/json' \r\n          },\r\n          body: JSON.stringify({personId}),\r\n          // body: searchInput\r\n      })\r\n\r\n      let data = await response.json();\r\n\r\n      if(response.status === 201 && data){\r\n        setAlertTitle(\"Alert\");\r\n        setAlertMessage(data.message);\r\n        setShowAlert(true);\r\n        setFetchData(data)\r\n      }\r\n        \r\n    } catch (error) {\r\n      console.log(error)    \r\n    }\r\n\r\n    }\r\n\r\n    const handleRefreshCompnent = () =>{\r\n      getRequest();\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n      <ListGroup.Item className='navList' onClick={handleShow}>\r\n        <i className='fa fa-search'>&nbsp;</i>         \r\n        {' '}\r\n        Members\r\n      </ListGroup.Item>\r\n\r\n      <Modal show={show} fullscreen={fullscreen} onHide={()=>setShow(false)} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n        <Modal.Header closeButton className='modalHeader'>\r\n          <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col sm lg=\"5\">\r\n                <Modal.Title>Notifications</Modal.Title>\r\n                <br></br>\r\n              </Col>\r\n              <Col sm lg=\"6\">\r\n                <Container><SearchMembers props={{setFetchData}}/></Container>  \r\n                <br></br>\r\n              </Col>\r\n              <Col sm lg=\"1\">\r\n                <Button className='refreshBtn2' onClick={handleRefreshCompnent}><i className=\"material-icons refreshIcon\">refresh</i></Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>    \r\n        </Modal.Header>\r\n        <Modal.Body className='modalBody'>\r\n          <Container>\r\n              <Row>\r\n                <Container>\r\n                  <Row className=\"justify-content-md-center\">\r\n                      {senderProfiles.map( (senderProfiles, index) =>\r\n                        <Col sm lg=\"4\" key={index}>\r\n                          <ListGroup.Item as=\"li\" key={index}  className=\"profileMessages\">\r\n                            <img \r\n                              src={senderProfiles.image}\r\n                              onError={(e)=>{e.target.onError = null; e.target.src = image_S1}}\r\n                              className=\"profileImages\"\r\n                            />\r\n                            <br></br>\r\n                            <b>{senderProfiles.name}</b>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <Button id={senderProfiles._id} bg=\"primary\" className=\"sendRequestBtn\" onClick={handleAcceptBtn}>\r\n                              Accept Request\r\n                            </Button>\r\n                          </ListGroup.Item>\r\n                        </Col>\r\n                      )}\r\n                      {receiverProfiles.map( (receiverProfiles, index) =>\r\n                        <Col sm lg=\"4\" key={index}>\r\n                          <ListGroup.Item as=\"li\" key={index}  className=\"profileMessages\">\r\n                            <img \r\n                              src={receiverProfiles.image}\r\n                              onError={(e)=>{e.target.onError = null; e.target.src = image_S1}}\r\n                              className=\"profileImages\"\r\n                            />\r\n                            <br></br>\r\n                            <b>{receiverProfiles.name}</b>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <Button id={receiverProfiles._id} bg=\"primary\" className=\"sendRequestBtn\" onClick={handleCancelRequest}>\r\n                              Cancel Request\r\n                            </Button>\r\n                          </ListGroup.Item>\r\n                        </Col>\r\n                      )}\r\n                  </Row>\r\n                </Container>\r\n              </Row>\r\n          </Container>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n      {/* Alert Modal */}\r\n\r\n      <Modal size=\"sm\" show={showAlert} onHide={handleAlertClose} backdrop=\"static\" keyboard={false} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\">{alertTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBodyStatic'>\r\n                <p>{alertMessage}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer className='modalFooter'>\r\n                <Button className='saveBtn' onClick={handleAlertClose}>Ok</Button> \r\n            </Modal.Footer>\r\n            </Modal>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Notifications"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\test11070\\\\src\\\\components\\\\Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate, NavLink } from 'react-router-dom';\nimport '../stylesheets/messages.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col, Container, Form, Image, Button, ListGroup, Offcanvas, InputGroup, Modal } from 'react-bootstrap';\nimport image_S1 from '../images/abstract10.png';\nimport image_S2 from '../images/abstract1.png';\nimport { UserContext } from '../App';\nimport io from \"socket.io-client\";\nimport DeleteMember from './DeleteMember';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"https://taskhive-hb9j.onrender.com\";\nvar socket, currentChat;\n\nconst Messages = () => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const [smShow, setSmShow] = useState(false);\n  const [smShowGroup, setSmShowGroup] = useState(false);\n  const [fullscreen, setFullscreen] = useState(true);\n  const [show, setShow] = useState(false);\n\n  const handleShow = () => {\n    setFullscreen(true);\n    setShow(true);\n  };\n\n  const [lgShow, setLgShow] = useState(false);\n  const [lgShowGroup, setLgGroupShow] = useState(false);\n  const [groupChats, setGroupChats] = useState([]);\n  const [allfriends, setAllfriends] = useState([]);\n  const [selectedId, setSelectedId] = useState(\"\");\n  const [txtInput, setTxtInput] = useState(\"\");\n  const [allMessages, setAllMessages] = useState([]);\n  const [userConnection, setUserConnection] = useState(false);\n  const [selectedChatId, setSelectedChatId] = useState(\"\");\n  const [senderchatId, setSenderChatId] = useState(\"\");\n  const [notification, setNotification] = useState([]);\n  const userProfile = JSON.parse(localStorage.getItem(\"User\"));\n\n  const handleHideSelectionModal = () => {\n    setSmShow(false);\n  };\n\n  const handleHideSelectionModalGroup = () => {\n    setSmShowGroup(false);\n  };\n\n  const getAllChats = async () => {\n    try {\n      const response = await fetch('https://taskhive-backend-testing.onrender.com/allGroupChats', {\n        method: 'GET'\n      });\n      const data = await response.json();\n      console.log(data);\n      setGroupChats(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getFriends = async () => {\n    try {\n      const response = await fetch('https://taskhive-backend-testing.onrender.com/getFriends', {\n        method: 'GET'\n      });\n      const data = await response.json();\n      console.log(data);\n      setAllfriends(data); // console.log(senderProfiles)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getFriends();\n    getAllChats();\n    socket = io(ENDPOINT);\n    socket.emit(\"setUser\", userProfile);\n    socket.on(\"User Connected\", () => setUserConnection(true));\n  }, []);\n\n  const handleRefreshCompnent = () => {\n    getFriends();\n    getAllChats();\n  };\n\n  const handleGroupClick = async e => {\n    // console.log(e.target.id)\n    setSelectedId(e.target.id);\n    let selectedId = e.target.id; // console.log(e.target.id)\n\n    setSmShowGroup(true);\n\n    try {\n      const response = await fetch('https://taskhive-backend-testing.onrender.com/getAllGroupMsgs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          selectedId\n        })\n      });\n      const data = await response.json();\n      let getMessages = data.getAllMessages;\n      let getChat = data.chatExist;\n      setSelectedChatId(getChat._id);\n      setAllMessages(getMessages);\n      socket.emit(\"joinSelectedChat\", getChat._id);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClick = async e => {\n    // console.log(e.target.id)\n    setSelectedId(e.target.id);\n    let selectedId = e.target.id; // console.log(e.target.id)\n\n    setSmShow(true);\n\n    try {\n      const response = await fetch('https://taskhive-backend-testing.onrender.com/getAllMsgs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          selectedId\n        })\n      });\n      const data = await response.json();\n      let getMessages = data.getAllMessages;\n      let getChat = data.chatExist;\n      setSelectedChatId(getChat._id);\n      setAllMessages(getMessages);\n      socket.emit(\"joinSelectedChat\", getChat._id);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // const handelChange = (e) =>{setTxtInput(e.target.value)}\n\n\n  const handleKeyDown = async e => {\n    if (e.keyCode === 13 && selectedId) {\n      try {\n        const response = await fetch('https://taskhive-backend-testing.onrender.com/sendingMsg', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            selectedId,\n            txtInput\n          }) // body: searchInput\n\n        });\n        let data = await response.json();\n        setSenderChatId(data.newMessage.ChatId);\n        socket.emit(\"sendingMessage\", data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const handleSendBtn = async () => {\n    try {\n      const response = await fetch('https://taskhive-backend-testing.onrender.com/sendingMsg', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          selectedId,\n          txtInput\n        }) // body: searchInput\n\n      });\n      let data = await response.json();\n      setSenderChatId(data.newMessage.ChatId);\n      socket.emit(\"sendingMessage\", data);\n      setTxtInput(\"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleKeyDownGroup = async e => {\n    if (e.keyCode === 13 && selectedId) {\n      try {\n        const response = await fetch('/sendingGroupMsg', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            selectedId,\n            txtInput\n          }) // body: searchInput\n\n        });\n        let data = await response.json();\n        setSenderChatId(data.newMessage.ChatId);\n        socket.emit(\"sendingMessage\", data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const handleSendGroupBtn = async () => {\n    try {\n      const response = await fetch('/sendingGroupMsg', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          selectedId,\n          txtInput\n        }) // body: searchInput\n\n      });\n      let data = await response.json();\n      setSenderChatId(data.newMessage.ChatId);\n      socket.emit(\"sendingMessage\", data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    currentChat = selectedChatId;\n  }, [selectedChatId]);\n  useEffect(() => {\n    socket.on(\"messageRecieved\", newMessage => {\n      console.log(newMessage);\n\n      if (!currentChat || currentChat !== newMessage.ChatId) {\n        console.log(newMessage);\n        setNotification(notification => [newMessage, ...notification]);\n        socket.off(\"messageRecieved\");\n        console.log(notification);\n      } else {\n        setAllMessages(allMessages => [...allMessages, newMessage]);\n        socket.off(\"messageRecieved\");\n      }\n    });\n    console.log(allMessages);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      className: \"navList\",\n      onClick: handleShow,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-comments\",\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }, this), ' ', \"Chat Box\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      fullscreen: fullscreen,\n      onHide: () => setShow(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Chat Box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"refreshBtn\",\n          onClick: handleRefreshCompnent,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons refreshIcon\",\n            children: \"refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBody\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: [allfriends.map((allfriends, index) => /*#__PURE__*/_jsxDEV(Col, {\n              sm: true,\n              lg: \"3\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                as: \"li\",\n                id: allfriends._id,\n                onClick: handleClick,\n                className: \"profileMessages\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: allfriends.image,\n                  id: allfriends._id,\n                  onClick: handleClick,\n                  onError: e => {\n                    e.target.onError = null;\n                    e.target.src = image_S1;\n                  },\n                  className: \"profileImages\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: allfriends.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 29\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 25\n            }, this)), groupChats.map((element, index) => /*#__PURE__*/_jsxDEV(Col, {\n              sm: true,\n              lg: \"3\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                as: \"li\",\n                id: element._id,\n                onClick: handleGroupClick,\n                className: \"profileMessages\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: image_S2,\n                  id: element._id,\n                  onClick: handleGroupClick,\n                  onError: e => {\n                    e.target.onError = null;\n                    e.target.src = image_S1;\n                  },\n                  className: \"profileImages\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: element.groupName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 29\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"sm\",\n      show: smShow,\n      onHide: handleHideSelectionModal,\n      \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-sm\",\n          className: \"titleSelection\",\n          children: \"Choose For Selected Member\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBody\",\n        children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          className: \"selectedListItem\",\n          onClick: () => setLgShow(true),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 21\n          }, this), \"Start Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DeleteMember, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      show: lgShow,\n      onHide: () => setLgShow(false),\n      backdrop: \"static\",\n      keyboard: false,\n      \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-lg\",\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBodyMsg\",\n        children: selectedId ? /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: allMessages.map((allMessages, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: allMessages.sender === state.id ? \"myMsgs\" : \"otherMsgs\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"msgtxt\",\n                children: [\" \", allMessages.message]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 29\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        className: \"modalFooter\",\n        children: selectedId ? /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"Message\",\n              className: \"formInput\",\n              value: txtInput,\n              onChange: e => setTxtInput(e.target.value),\n              onKeyDown: handleKeyDown\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-secondary\",\n              className: \"searchBtn\",\n              id: \"button-addon2\",\n              onClick: handleSendBtn,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-paper-plane\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"sm\",\n      show: smShowGroup,\n      onHide: handleHideSelectionModalGroup,\n      \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-sm\",\n          className: \"titleSelection\",\n          children: \"Choose For Selected Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBody\",\n        children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          className: \"selectedListItem\",\n          onClick: () => setLgGroupShow(true),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 21\n          }, this), \"Start Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DeleteMember, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      show: lgShowGroup,\n      onHide: () => setLgGroupShow(false),\n      backdrop: \"static\",\n      keyboard: false,\n      \"aria-labelledby\": \"example-modal-sizes-title-lg\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-lg\",\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBodyMsg\",\n        children: selectedId ? /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: allMessages.map((allMessages, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: allMessages.sender === state.id ? \"myMsgs\" : \"otherMsgs\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"msgtxt\",\n                children: [\" \", allMessages.message]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 29\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        className: \"modalFooter\",\n        children: selectedId ? /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"Message\",\n              className: \"formInput\",\n              value: txtInput,\n              onChange: e => setTxtInput(e.target.value),\n              onKeyDown: handleKeyDownGroup\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-secondary\",\n              className: \"searchBtn\",\n              id: \"button-addon2\",\n              onClick: handleSendGroupBtn,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-paper-plane\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Messages, \"Q1dHoQpNUxaII69yQzS+eCRUvIc=\");\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/test11070/src/components/Messages.js"],"names":["React","useState","useEffect","useContext","useNavigate","NavLink","Row","Col","Container","Form","Image","Button","ListGroup","Offcanvas","InputGroup","Modal","image_S1","image_S2","UserContext","io","DeleteMember","ENDPOINT","socket","currentChat","Messages","state","dispatch","smShow","setSmShow","smShowGroup","setSmShowGroup","fullscreen","setFullscreen","show","setShow","handleShow","lgShow","setLgShow","lgShowGroup","setLgGroupShow","groupChats","setGroupChats","allfriends","setAllfriends","selectedId","setSelectedId","txtInput","setTxtInput","allMessages","setAllMessages","userConnection","setUserConnection","selectedChatId","setSelectedChatId","senderchatId","setSenderChatId","notification","setNotification","userProfile","JSON","parse","localStorage","getItem","handleHideSelectionModal","handleHideSelectionModalGroup","getAllChats","response","fetch","method","data","json","console","log","error","getFriends","emit","on","handleRefreshCompnent","handleGroupClick","e","target","id","headers","body","stringify","getMessages","getAllMessages","getChat","chatExist","_id","handleClick","handleKeyDown","keyCode","newMessage","ChatId","handleSendBtn","handleKeyDownGroup","handleSendGroupBtn","off","map","index","image","onError","src","name","element","groupName","sender","message","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\r\nimport { useNavigate, NavLink } from 'react-router-dom'\r\nimport '../stylesheets/messages.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col,Container, Form, Image, Button, ListGroup, Offcanvas, InputGroup, Modal } from 'react-bootstrap';\r\nimport image_S1 from '../images/abstract10.png'\r\nimport image_S2 from '../images/abstract1.png'\r\nimport { UserContext } from '../App'\r\nimport io from \"socket.io-client\";\r\nimport DeleteMember from './DeleteMember';\r\n\r\nconst ENDPOINT = \"https://taskhive-hb9j.onrender.com\"\r\nvar socket, currentChat;\r\n\r\nconst Messages = () => {\r\n\r\n    const {state, dispatch} = useContext(UserContext);\r\n    const [smShow, setSmShow] = useState(false);\r\n    const [smShowGroup, setSmShowGroup] = useState(false);\r\n    const [fullscreen, setFullscreen] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => {setFullscreen(true); setShow(true);}\r\n    const [lgShow, setLgShow] = useState(false);\r\n    const [lgShowGroup, setLgGroupShow] = useState(false);\r\n    const [groupChats, setGroupChats] = useState([]);\r\n    const [allfriends, setAllfriends] = useState([]);\r\n    const [selectedId, setSelectedId] = useState(\"\");\r\n    const [txtInput, setTxtInput] = useState(\"\");\r\n    const [allMessages, setAllMessages] = useState([]);\r\n    const [userConnection, setUserConnection] = useState(false);\r\n    const [selectedChatId, setSelectedChatId] = useState(\"\");\r\n    const [senderchatId, setSenderChatId] = useState(\"\");\r\n    const [notification, setNotification] = useState([]);\r\n    const userProfile = JSON.parse(localStorage.getItem(\"User\")); \r\n\r\n    const handleHideSelectionModal = () =>{\r\n        setSmShow(false);\r\n    }\r\n\r\n    const handleHideSelectionModalGroup = () =>{\r\n        setSmShowGroup(false);\r\n    }\r\n\r\n\r\n    const getAllChats = async () =>{\r\n        try {\r\n            const response = await fetch('https://taskhive-backend-testing.onrender.com/allGroupChats', {\r\n                method: 'GET',\r\n            })\r\n\r\n            const data = await response.json();\r\n            console.log(data)\r\n            setGroupChats(data);\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n    \r\n    \r\n\r\n    const getFriends = async () =>{\r\n        try {\r\n            const response = await fetch('https://taskhive-backend-testing.onrender.com/getFriends', {\r\n                method: 'GET',\r\n            })\r\n\r\n            const data = await response.json();\r\n            console.log(data)\r\n            setAllfriends(data);\r\n            // console.log(senderProfiles)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFriends();\r\n        getAllChats();\r\n        socket = io(ENDPOINT);\r\n        socket.emit(\"setUser\", userProfile);\r\n        socket.on(\"User Connected\", () => setUserConnection(true));\r\n    },[])\r\n\r\n\r\n    const handleRefreshCompnent = () =>{\r\n        getFriends();\r\n        getAllChats();\r\n    }\r\n\r\n\r\n\r\n    const handleGroupClick = async (e) =>{\r\n        // console.log(e.target.id)\r\n        setSelectedId(e.target.id)\r\n        let selectedId = e.target.id;\r\n        // console.log(e.target.id)\r\n        setSmShowGroup(true);\r\n\r\n        try { \r\n            const response = await fetch('https://taskhive-backend-testing.onrender.com/getAllGroupMsgs', {  \r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type' : 'application/json' \r\n                },\r\n                body: JSON.stringify({selectedId}),\r\n            });\r\n\r\n            const data = await response.json();\r\n            let getMessages = data.getAllMessages;\r\n            let getChat = data.chatExist;\r\n            setSelectedChatId(getChat._id);\r\n            setAllMessages(getMessages);\r\n\r\n            socket.emit(\"joinSelectedChat\", getChat._id);\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }  \r\n        \r\n    }\r\n\r\n\r\n\r\n    const handleClick = async (e) =>{\r\n        // console.log(e.target.id)\r\n        setSelectedId(e.target.id)\r\n        let selectedId = e.target.id;\r\n        // console.log(e.target.id)\r\n        setSmShow(true);\r\n\r\n        try {\r\n            const response = await fetch('https://taskhive-backend-testing.onrender.com/getAllMsgs', {  \r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type' : 'application/json' \r\n                },\r\n                body: JSON.stringify({selectedId}),\r\n            });\r\n\r\n            const data = await response.json();\r\n            let getMessages = data.getAllMessages;\r\n            let getChat = data.chatExist;\r\n            setSelectedChatId(getChat._id);\r\n            setAllMessages(getMessages);\r\n\r\n            socket.emit(\"joinSelectedChat\", getChat._id);\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }  \r\n        \r\n    }\r\n\r\n\r\n\r\n    // const handelChange = (e) =>{setTxtInput(e.target.value)}\r\n\r\n    const handleKeyDown = async (e) =>{\r\n        if(e.keyCode === 13 && selectedId){\r\n            try {\r\n                const response = await fetch('https://taskhive-backend-testing.onrender.com/sendingMsg', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type' : 'application/json' \r\n                    },\r\n                    body: JSON.stringify({selectedId, txtInput}),\r\n                    // body: searchInput\r\n                })\r\n                \r\n                let data = await response.json();\r\n               \r\n                setSenderChatId(data.newMessage.ChatId)\r\n                socket.emit(\"sendingMessage\", data)\r\n    \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const handleSendBtn = async () =>{\r\n\r\n        try {\r\n            const response = await fetch('https://taskhive-backend-testing.onrender.com/sendingMsg', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type' : 'application/json' \r\n                },\r\n                body: JSON.stringify({selectedId, txtInput}),\r\n                // body: searchInput\r\n            })\r\n            \r\n            let data = await response.json();\r\n           \r\n            setSenderChatId(data.newMessage.ChatId)\r\n            socket.emit(\"sendingMessage\", data)\r\n            setTxtInput(\"\");\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    const handleKeyDownGroup = async (e) =>{\r\n        if(e.keyCode === 13 && selectedId){\r\n            try {\r\n                const response = await fetch('/sendingGroupMsg', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type' : 'application/json' \r\n                    },\r\n                    body: JSON.stringify({selectedId, txtInput}),\r\n                    // body: searchInput\r\n                })\r\n                \r\n                let data = await response.json();\r\n               \r\n                setSenderChatId(data.newMessage.ChatId)\r\n                socket.emit(\"sendingMessage\", data)\r\n    \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const handleSendGroupBtn = async () =>{\r\n        try {\r\n            const response = await fetch('/sendingGroupMsg', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type' : 'application/json' \r\n                },\r\n                body: JSON.stringify({selectedId, txtInput}),\r\n                // body: searchInput\r\n            })\r\n            \r\n            let data = await response.json();\r\n           \r\n            setSenderChatId(data.newMessage.ChatId)\r\n            socket.emit(\"sendingMessage\", data)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n \r\n\r\n\r\n    useEffect(() => {\r\n        currentChat = selectedChatId\r\n\r\n    }, [selectedChatId])\r\n\r\n    useEffect(() => {\r\n        socket.on(\"messageRecieved\", (newMessage) =>{\r\n            console.log(newMessage)    \r\n            if(!currentChat || currentChat !== newMessage.ChatId){\r\n                console.log(newMessage)\r\n                setNotification(notification => [newMessage, ...notification]);\r\n                socket.off(\"messageRecieved\");\r\n                console.log(notification)\r\n            } \r\n            else{  \r\n            setAllMessages(allMessages => [...allMessages, newMessage]);\r\n            socket.off(\"messageRecieved\");\r\n            }\r\n        });\r\n        console.log(allMessages)\r\n        \r\n    },[])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n          \r\n        <ListGroup.Item className='navList' onClick={handleShow}>\r\n            <i className='far fa-comments'>&nbsp;</i>         \r\n            {' '}\r\n            Chat Box \r\n        </ListGroup.Item>\r\n       \r\n     \r\n        <Modal show={show} fullscreen={fullscreen} onHide={() => setShow(false)}>\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title>Chat Box</Modal.Title>\r\n                <Button className='refreshBtn' onClick={handleRefreshCompnent}><i className=\"material-icons refreshIcon\">refresh</i></Button>\r\n            </Modal.Header>\r\n        <Modal.Body className='modalBody'>\r\n            <Container>\r\n                <Row className=\"justify-content-md-center\">\r\n                    {allfriends.map( (allfriends, index) =>\r\n                        <Col sm lg=\"3\" key={index}>\r\n                            <ListGroup.Item as=\"li\"  id={allfriends._id} onClick={handleClick} className=\"profileMessages\">\r\n                                <img \r\n                                    src={allfriends.image}\r\n                                    id={allfriends._id}\r\n                                    onClick={handleClick}\r\n                                    onError={(e)=>{e.target.onError = null; e.target.src = image_S1}}\r\n                                    className=\"profileImages\"\r\n                                />\r\n                                <br></br>\r\n                                <b>{allfriends.name}</b>\r\n                            </ListGroup.Item>\r\n                            <br></br>\r\n                        </Col>\r\n                    )}\r\n                    {groupChats.map( (element, index) =>\r\n                        <Col sm lg=\"3\" key={index}>\r\n                            <ListGroup.Item as=\"li\"  id={element._id} onClick={handleGroupClick} className=\"profileMessages\">\r\n                                <img \r\n                                    src={image_S2}\r\n                                    id={element._id}\r\n                                    onClick={handleGroupClick}\r\n                                    onError={(e)=>{e.target.onError = null; e.target.src = image_S1}}\r\n                                    className=\"profileImages\"\r\n                                />\r\n                                <br></br>\r\n                                <b>{element.groupName}</b>\r\n                            </ListGroup.Item>\r\n                            <br></br>\r\n                        </Col>\r\n                    )}\r\n                </Row>  \r\n            </Container>     \r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n      <Modal size=\"sm\" show={smShow} onHide={handleHideSelectionModal} aria-labelledby=\"example-modal-sizes-title-sm\" >\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\" className='titleSelection'>\r\n                    Choose For Selected Member\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBody'>\r\n\r\n                <ListGroup.Item className='selectedListItem' onClick={() => setLgShow(true)}>\r\n                    <i className='far fa-comments'></i>         \r\n                    <br></br>\r\n                    Start Chat\r\n                </ListGroup.Item>\r\n\r\n                <br></br>\r\n\r\n                <DeleteMember/>\r\n\r\n            </Modal.Body>\r\n        </Modal>\r\n\r\n\r\n\r\n      <Modal size=\"lg\" show={lgShow} onHide={() => setLgShow(false)} backdrop=\"static\" keyboard={false} aria-labelledby=\"example-modal-sizes-title-lg\">\r\n        <Modal.Header closeButton className='modalHeader'>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n            Chat\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className='modalBodyMsg'>\r\n            {selectedId ?\r\n                <Container>  \r\n                    <ListGroup>                 \r\n                    {allMessages.map( (allMessages, index) =>                              \r\n                        <ListGroup.Item className={allMessages.sender === state.id ? \"myMsgs\" : \"otherMsgs\"} key={index}>\r\n                            <p className='msgtxt'> {allMessages.message}</p> \r\n                        </ListGroup.Item>                        \r\n                    )}\r\n                    </ListGroup>\r\n                </Container>\r\n            :\r\n                <Container></Container>\r\n            }\r\n        </Modal.Body>\r\n        <Modal.Footer className='modalFooter'>\r\n            {selectedId ?\r\n                <Container>        \r\n                    <InputGroup className=\"mb-3\">\r\n                        <Form.Control placeholder=\"Message\" className='formInput' value={txtInput} onChange={(e) => setTxtInput(e.target.value)} onKeyDown={handleKeyDown} />\r\n                        <Button variant=\"outline-secondary\" className='searchBtn' id=\"button-addon2\" onClick={handleSendBtn}>\r\n                            <i className=\"fa fa-paper-plane\"></i>\r\n                        </Button>\r\n                    </InputGroup>\r\n                </Container>\r\n            :\r\n                <Container></Container>\r\n            }\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <Modal size=\"sm\" show={smShowGroup} onHide={handleHideSelectionModalGroup} aria-labelledby=\"example-modal-sizes-title-sm\" >\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\" className='titleSelection'>\r\n                    Choose For Selected Group\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBody'>\r\n\r\n                <ListGroup.Item className='selectedListItem' onClick={() => setLgGroupShow(true)}>\r\n                    <i className='far fa-comments'></i>         \r\n                    <br></br>\r\n                    Start Chat\r\n                </ListGroup.Item>\r\n\r\n                <br></br>\r\n\r\n                <DeleteMember/>\r\n\r\n            </Modal.Body>\r\n        </Modal>\r\n\r\n            {/* group chat */}\r\n\r\n      <Modal size=\"lg\" show={lgShowGroup} onHide={() => setLgGroupShow(false)} backdrop=\"static\" keyboard={false} aria-labelledby=\"example-modal-sizes-title-lg\">\r\n        <Modal.Header closeButton className='modalHeader'>\r\n          <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n            Chat\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className='modalBodyMsg'>\r\n            {selectedId ?\r\n                <Container>  \r\n                    <ListGroup>                 \r\n                    {allMessages.map( (allMessages, index) =>                              \r\n                        <ListGroup.Item className={allMessages.sender === state.id ? \"myMsgs\" : \"otherMsgs\"} key={index}>\r\n                            <p className='msgtxt'> {allMessages.message}</p> \r\n                        </ListGroup.Item>                        \r\n                    )}\r\n                    </ListGroup>\r\n                </Container>\r\n            :\r\n                <Container></Container>\r\n            }\r\n        </Modal.Body>\r\n        <Modal.Footer className='modalFooter'>\r\n            {selectedId ?\r\n                <Container>        \r\n                    <InputGroup className=\"mb-3\">\r\n                        <Form.Control placeholder=\"Message\" className='formInput' value={txtInput} onChange={(e) => setTxtInput(e.target.value)} onKeyDown={handleKeyDownGroup} />\r\n                        <Button variant=\"outline-secondary\" className='searchBtn' id=\"button-addon2\" onClick={handleSendGroupBtn}>\r\n                            <i className=\"fa fa-paper-plane\"></i>\r\n                        </Button>\r\n                    </InputGroup>\r\n                </Container>\r\n            :\r\n                <Container></Container>\r\n            }\r\n        </Modal.Footer>\r\n      </Modal>\r\n    \r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Messages"]},"metadata":{},"sourceType":"module"}
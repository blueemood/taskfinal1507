{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/Asus/Desktop/test11070/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Asus/Desktop/test11070/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Asus\\\\Desktop\\\\test11070\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useLayoutEffect,useEffect}from'react';import'../stylesheets/notes.css';import{Row,Col,Container,Card,CardGroup,ProgressBar,Navbar,Nav,NavDropdown,Form,Image,Button,ListGroup,Offcanvas,InputGroup,Modal}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var DeleteNote=function DeleteNote(_ref){var noteData=_ref.noteData;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showAlert=_useState2[0],setShowAlert=_useState2[1];var handleAlertClose=function handleAlertClose(){setShowAlert(false);};var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),alertMessage=_useState4[0],setAlertMessage=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),alertTitle=_useState6[0],setAlertTitle=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),noteId=_useState8[0],setNoteId=_useState8[1];var setNoteForm=function setNoteForm(){if(noteData){setAlertTitle(noteData.currentNote.noteTitle);setAlertMessage('Click on \"Delete\" button will permanently delete the selected note.');setNoteId(noteData.currentNote._id);}};useEffect(function(){setNoteForm();},[]);var handleDeleteBtn=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(alertTitle&&noteId)){_context.next=16;break;}_context.prev=1;_context.next=4;return fetch('https://taskhive-backend-testing.onrender.com/deleteCurrentNote',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({noteId:noteId})});case 4:response=_context.sent;_context.next=7;return response.json();case 7:data=_context.sent;if(response.status===201&&data){setShowAlert(false);noteData.setFecthTasks(data);}_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 14:_context.next=19;break;case 16:setAlertTitle(\"Alert\");setAlertMessage(\"Please fill the form correctly.\");setShowAlert(true);case 19:case\"end\":return _context.stop();}}},_callee,null,[[1,11]]);}));return function handleDeleteBtn(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"selectedListBtn\",onClick:function onClick(){return setShowAlert(true);},children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-trash\"}),/*#__PURE__*/_jsx(\"br\",{}),\"Delete Note\"]}),/*#__PURE__*/_jsxs(Modal,{size:\"sm\",show:showAlert,onHide:handleAlertClose,backdrop:\"static\",keyboard:false,\"aria-labelledby\":\"example-modal-sizes-title-sm\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,className:\"modalHeader\",children:/*#__PURE__*/_jsx(Modal.Title,{id:\"example-modal-sizes-title-sm\",children:alertTitle})}),/*#__PURE__*/_jsx(Modal.Body,{className:\"modalBodyStatic\",children:/*#__PURE__*/_jsx(\"p\",{children:alertMessage})}),/*#__PURE__*/_jsx(Modal.Footer,{className:\"modalFooter\",children:noteId?/*#__PURE__*/_jsx(Button,{className:\"saveBtn\",onClick:handleDeleteBtn,children:\"Delete\"}):/*#__PURE__*/_jsx(Button,{className:\"saveBtn\",onClick:handleAlertClose,children:\"Ok\"})})]})]});};export default DeleteNote;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/test11070/src/components/DeleteNote.js"],"names":["React","useState","useLayoutEffect","useEffect","Row","Col","Container","Card","CardGroup","ProgressBar","Navbar","Nav","NavDropdown","Form","Image","Button","ListGroup","Offcanvas","InputGroup","Modal","DeleteNote","noteData","showAlert","setShowAlert","handleAlertClose","alertMessage","setAlertMessage","alertTitle","setAlertTitle","noteId","setNoteId","setNoteForm","currentNote","noteTitle","_id","handleDeleteBtn","fetch","method","headers","body","JSON","stringify","response","json","data","status","setFecthTasks","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useLayoutEffect, useEffect} from 'react'\r\nimport '../stylesheets/notes.css'\r\nimport { Row, Col, Container, Card, CardGroup, ProgressBar, Navbar, Nav, NavDropdown, Form, Image, Button, ListGroup, Offcanvas, InputGroup, Modal } from 'react-bootstrap';\r\n\r\n\r\n\r\nconst DeleteNote = ({noteData}) => {\r\n\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const handleAlertClose = () =>{setShowAlert(false);}\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [alertTitle, setAlertTitle] = useState(\"\");\r\n    const [noteId, setNoteId] = useState(\"\");\r\n\r\n    const setNoteForm = () =>{\r\n        if(noteData){\r\n            setAlertTitle(noteData.currentNote.noteTitle);\r\n            setAlertMessage('Click on \"Delete\" button will permanently delete the selected note.');\r\n            setNoteId(noteData.currentNote._id);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setNoteForm();\r\n    },[]);\r\n\r\n\r\n    const handleDeleteBtn = async () =>{\r\n\r\n        if(alertTitle && noteId){\r\n            try {\r\n                const response = await fetch('https://taskhive-backend-testing.onrender.com/deleteCurrentNote', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type' : 'application/json' \r\n                    },\r\n                    body: JSON.stringify({noteId}),\r\n                })\r\n    \r\n                const data = await response.json();\r\n    \r\n                if(response.status === 201 && data){\r\n                    setShowAlert(false);\r\n                    noteData.setFecthTasks(data);\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }else{\r\n            setAlertTitle(\"Alert\");\r\n            setAlertMessage(\"Please fill the form correctly.\");\r\n            setShowAlert(true);\r\n        }\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n    {/* Alert Modal */}\r\n        <ListGroup.Item className='selectedListBtn' onClick={() => setShowAlert(true)}>\r\n          <i className='fa fa-trash'></i>         \r\n          <br></br>\r\n          Delete Note\r\n        </ListGroup.Item>\r\n\r\n        <Modal size=\"sm\" show={showAlert} onHide={handleAlertClose} backdrop=\"static\" keyboard={false} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\">{alertTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBodyStatic'>\r\n                <p>{alertMessage}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer className='modalFooter'>\r\n                {noteId ?\r\n                    <Button className='saveBtn' onClick={handleDeleteBtn}>Delete</Button> \r\n                :\r\n                    <Button className='saveBtn' onClick={handleAlertClose}>Ok</Button> \r\n                }\r\n            </Modal.Footer>\r\n        </Modal>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default DeleteNote"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\test11070\\\\src\\\\components\\\\SearchMembers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport '../stylesheets/searchMembers.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col, Container, InputGroup, Button, Modal, FormControl, ListGroup, Badge } from 'react-bootstrap';\nimport image_S1 from '../images/abstract10.png';\nimport { UserContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchMembers = _ref => {\n  _s();\n\n  let {\n    props\n  } = _ref;\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleAlertClose = () => {\n    setShowAlert(false);\n  };\n\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [alertTitle, setAlertTitle] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [searchInput, setSearchInput] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [allfriends, setAllfriends] = useState([]);\n\n  const getFriends = async () => {\n    try {\n      const response = await fetch('https://taskhive-hb9j.onrender.com/getFriends', {\n        method: 'GET'\n      });\n      const data = await response.json();\n      console.log(data);\n      setAllfriends(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getFriends();\n  }, []);\n\n  const handelChange = e => {\n    setSearchInput(e.target.value); // console.log(e.target.value)\n  };\n\n  const handleKeyDown = async e => {\n    if (e.keyCode === 13 && searchInput) {\n      try {\n        const response = await fetch('https://taskhive-hb9j.onrender.com/searchBar', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            searchInput\n          })\n        });\n        let data = await response.json();\n\n        if (response.status === 201 && data.length > 0) {\n          setSearchResult(data);\n        } else {\n          setAlertTitle(\"Alert\");\n          setAlertMessage(\"No matches found.\");\n          setShowAlert(true);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const handleSearchBtn = async () => {\n    try {\n      const response = await fetch('https://taskhive-hb9j.onrender.com/searchBar', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          searchInput\n        })\n      });\n      let data = await response.json();\n\n      if (response.status === 201 && data.length > 0) {\n        setSearchResult(data);\n      } else {\n        setAlertTitle(\"Alert\");\n        setAlertMessage(\"No matches found.\");\n        setShowAlert(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const compareIds = () => {\n    let selfBtn = document.getElementById(state.id);\n\n    if (selfBtn) {\n      selfBtn.textContent = 'Own Profile';\n      selfBtn.disabled = true;\n    }\n\n    allfriends.map(element => {\n      let friendBtn = document.getElementById(element._id);\n\n      if (friendBtn) {\n        friendBtn.textContent = 'Member Exist';\n        friendBtn.disabled = true;\n      }\n    });\n  };\n\n  useEffect(() => {\n    compareIds();\n  }, [searchResult]);\n\n  const handleRequestBtn = async e => {\n    let personId = e.target.id;\n\n    try {\n      const response = await fetch('https://taskhive-hb9j.onrender.com/sendingRequest', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          personId\n        }) // body: searchInput\n\n      });\n      let data = await response.json();\n\n      if (response.status === 201 && data) {\n        setAlertTitle(\"Alert\");\n        setAlertMessage(data.message);\n        setShowAlert(true);\n        props.setFetchData(data);\n        setShow(false);\n        setSearchInput(\"\");\n        setSearchResult([]);\n      } else {\n        setAlertTitle(\"Alert\");\n        setAlertMessage(data.message);\n        setShowAlert(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCoseModal = () => {\n    setShow(false);\n    setSearchInput(\"\");\n    setSearchResult([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      className: \"newProjectBtn\",\n      onClick: () => setShow(true),\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this), ' ', \"Find Members\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleCoseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Find Members\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBody\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(InputGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                placeholder: \"Find Members\",\n                type: \"text\",\n                \"aria-label\": \"Recipient's username\",\n                \"aria-describedby\": \"basic-addon2\",\n                value: searchInput,\n                className: \"formInput\",\n                onChange: handelChange,\n                onKeyDown: handleKeyDown\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                className: \"searchBtn\",\n                id: \"button-addon2\",\n                onClick: handleSearchBtn,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-search searchIcon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              as: \"ol\",\n              variant: \"flush\",\n              children: searchResult.map((searchResult, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                as: \"li\",\n                className: \"d-flex justify-content-between align-items-start memberLists\",\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: searchResult.image,\n                      onError: e => {\n                        e.target.onError = null;\n                        e.target.src = image_S1;\n                      },\n                      className: \"profileImages\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: searchResult.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      id: searchResult._id,\n                      className: \"sendRequestBtn\",\n                      bg: \"primary\",\n                      onClick: handleRequestBtn,\n                      children: \"Send Request\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"sm\",\n      show: showAlert,\n      onHide: handleAlertClose,\n      backdrop: \"static\",\n      keyboard: false,\n      \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-sm\",\n          children: alertTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBodyStatic\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: alertMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        className: \"modalFooter\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"saveBtn\",\n          onClick: handleAlertClose,\n          children: \"Ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SearchMembers, \"bIQgPKn0OPVs+5z3i58NIgO1Ls8=\");\n\n_c = SearchMembers;\nexport default SearchMembers;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMembers\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/test11070/src/components/SearchMembers.js"],"names":["React","useState","useEffect","useContext","NavLink","useNavigate","Row","Col","Container","InputGroup","Button","Modal","FormControl","ListGroup","Badge","image_S1","UserContext","SearchMembers","props","state","dispatch","showAlert","setShowAlert","handleAlertClose","alertMessage","setAlertMessage","alertTitle","setAlertTitle","show","setShow","searchInput","setSearchInput","searchResult","setSearchResult","allfriends","setAllfriends","getFriends","response","fetch","method","data","json","console","log","error","handelChange","e","target","value","handleKeyDown","keyCode","headers","body","JSON","stringify","status","length","handleSearchBtn","compareIds","selfBtn","document","getElementById","id","textContent","disabled","map","element","friendBtn","_id","handleRequestBtn","personId","message","setFetchData","handleCoseModal","index","image","onError","src","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\r\nimport { NavLink, useNavigate } from 'react-router-dom'\r\nimport '../stylesheets/searchMembers.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row, Col, Container, InputGroup, Button, Modal, FormControl, ListGroup, Badge } from 'react-bootstrap';\r\nimport image_S1 from '../images/abstract10.png'\r\nimport { UserContext } from '../App'\r\n\r\nconst SearchMembers = ({props}) => {\r\n    const {state, dispatch} = useContext(UserContext);  \r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const handleAlertClose = () =>{setShowAlert(false);}\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [alertTitle, setAlertTitle] = useState(\"\");\r\n    const [show, setShow] = useState(false);\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [searchResult, setSearchResult] = useState([]);\r\n    const [allfriends, setAllfriends] = useState([]);\r\n\r\n    \r\n    \r\n    const getFriends = async () =>{\r\n        try {\r\n            const response = await fetch('https://taskhive-hb9j.onrender.com/getFriends', {\r\n                method: 'GET',\r\n            })\r\n\r\n            const data = await response.json();\r\n            console.log(data)\r\n            setAllfriends(data);\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFriends();\r\n    },[])\r\n\r\n\r\n    const handelChange = (e) =>{\r\n        setSearchInput(e.target.value)\r\n        // console.log(e.target.value)\r\n    }\r\n\r\n    const handleKeyDown = async (e) =>{\r\n        \r\n\r\n        if(e.keyCode === 13 && searchInput){\r\n\r\n            try {\r\n                const response = await fetch('https://taskhive-hb9j.onrender.com/searchBar', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type' : 'application/json' \r\n                    },\r\n                    body: JSON.stringify({searchInput}),\r\n                })\r\n                \r\n                let data = await response.json();\r\n                if(response.status === 201 && data.length > 0){\r\n                    setSearchResult(data);\r\n                } \r\n                else{\r\n                    setAlertTitle(\"Alert\");\r\n                    setAlertMessage(\"No matches found.\");\r\n                    setShowAlert(true);\r\n                }             \r\n                \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    const handleSearchBtn = async () =>{\r\n        \r\n        try {\r\n            const response = await fetch('https://taskhive-hb9j.onrender.com/searchBar', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type' : 'application/json' \r\n                },\r\n                body: JSON.stringify({searchInput}),\r\n            })\r\n            \r\n            let data = await response.json();\r\n            if(response.status === 201 && data.length > 0){\r\n                setSearchResult(data);\r\n            } \r\n            else{\r\n                setAlertTitle(\"Alert\");\r\n                setAlertMessage(\"No matches found.\");\r\n                setShowAlert(true);\r\n            } \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const compareIds = () =>{\r\n        let selfBtn = document.getElementById(state.id)\r\n        \r\n        if(selfBtn){\r\n            selfBtn.textContent = 'Own Profile';\r\n            selfBtn.disabled = true;\r\n        }\r\n\r\n        allfriends.map((element)=>{\r\n            let friendBtn = document.getElementById(element._id)\r\n            if(friendBtn){\r\n                friendBtn.textContent = 'Member Exist';\r\n                friendBtn.disabled = true;\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        compareIds();\r\n    },[searchResult])\r\n   \r\n\r\n    const handleRequestBtn = async (e) =>{\r\n        let personId = e.target.id;        \r\n       \r\n        try {\r\n            const response = await fetch('https://taskhive-hb9j.onrender.com/sendingRequest', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type' : 'application/json' \r\n                }, \r\n                body: JSON.stringify({personId}),\r\n                // body: searchInput\r\n            })\r\n            \r\n    \r\n            let data = await response.json();\r\n    \r\n            if(response.status === 201 && data){\r\n                setAlertTitle(\"Alert\");\r\n                setAlertMessage(data.message);\r\n                setShowAlert(true); \r\n                props.setFetchData(data);\r\n                setShow(false);\r\n                setSearchInput(\"\");\r\n                setSearchResult([]);\r\n            }\r\n            else{\r\n                setAlertTitle(\"Alert\");\r\n                setAlertMessage(data.message);\r\n                setShowAlert(true); \r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleCoseModal = () =>{\r\n        setShow(false);\r\n        setSearchInput(\"\");\r\n        setSearchResult([]);\r\n    }\r\n \r\n  return (\r\n    <>\r\n\r\n        <ListGroup.Item className='newProjectBtn' onClick={() => setShow(true)}>    \r\n            <i className='fa fa-search'></i>\r\n            {' '}\r\n            Find Members      \r\n        </ListGroup.Item>\r\n\r\n        <Modal show={show} onHide={handleCoseModal}>\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title>Find Members</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBody'>\r\n                <Row>    \r\n                    <Col>\r\n                        <InputGroup className=\"mb-3\">\r\n                        <FormControl\r\n                            placeholder=\"Find Members\"\r\n                            type=\"text\"\r\n                            aria-label=\"Recipient's username\"\r\n                            aria-describedby=\"basic-addon2\"\r\n                            value={searchInput}\r\n                            className='formInput'\r\n                            onChange={handelChange}\r\n                            onKeyDown={handleKeyDown}\r\n                        />\r\n                        <Button variant=\"outline-secondary\" className='searchBtn' id=\"button-addon2\" onClick={handleSearchBtn}>\r\n                            <i className=\"fa fa-search searchIcon\"></i>\r\n                        </Button>\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                <Col>\r\n                  <ListGroup as=\"ol\" variant=\"flush\" >\r\n                    {searchResult.map( (searchResult, index) =>\r\n                      <ListGroup.Item as=\"li\" key={index}  className=\"d-flex justify-content-between align-items-start memberLists\">\r\n                        <Row>\r\n                            <Col>\r\n                                <img src={searchResult.image}\r\n                                    onError={(e)=>{e.target.onError = null; e.target.src = image_S1}}\r\n                                    className=\"profileImages\"\r\n                                />\r\n                                <h5>{searchResult.name}</h5>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button id={searchResult._id} className='sendRequestBtn'  bg=\"primary\" onClick={handleRequestBtn}>\r\n                                    Send Request\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    )}\r\n                  </ListGroup>\r\n                </Col>\r\n              </Row>\r\n            </Modal.Body>\r\n        </Modal>\r\n            \r\n\r\n\r\n\r\n\r\n            {/* Alert Modal */}\r\n\r\n            <Modal size=\"sm\" show={showAlert} onHide={handleAlertClose} backdrop=\"static\" keyboard={false} aria-labelledby=\"example-modal-sizes-title-sm\">\r\n            <Modal.Header closeButton className='modalHeader'>\r\n                <Modal.Title id=\"example-modal-sizes-title-sm\">{alertTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modalBodyStatic'>\r\n                <p>{alertMessage}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer className='modalFooter'>\r\n                <Button className='saveBtn' onClick={handleAlertClose}>Ok</Button> \r\n            </Modal.Footer>\r\n            </Modal>\r\n        \r\n           \r\n        \r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchMembers"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\test11070\\\\src\\\\components\\\\Todos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { useNavigate, NavLink } from 'react-router-dom';\nimport { Row, Col, Container, Fade, Button, ListGroup, Badge } from 'react-bootstrap';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport '../stylesheets/todos.css';\nimport TodoForm from './TodoForm';\nimport { UserContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SideNavbar = () => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const [fecthTasks, setFecthTasks] = useState();\n  const [tasks, setTasks] = useState([]);\n  const [taskUpdate, setTaskUpdate] = useState();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => {\n    setShow(false);\n    setTaskUpdate(null);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const showTasks = async () => {\n    try {\n      const jwtIDToken = localStorage.getItem('token');\n      console.log(jwtIDToken);\n      const response = await fetch('https://taskhive-backend-testing.onrender.com/showTasks', {\n        method: 'GET'\n      });\n      const data = await response.json();\n      console.log(data);\n      setTasks(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    showTasks();\n  }, [fecthTasks]);\n\n  const handleClick = e => {\n    const taskId = e.target.id;\n    const findTask = tasks.find(clickedTask => clickedTask._id === taskId);\n    let oldDate = new Date(findTask.date);\n    let day = oldDate.getDate();\n    let month = oldDate.getMonth() + 1;\n    let year = oldDate.getFullYear();\n    if (month < 10) month = \"0\" + month;\n    if (day < 10) day = \"0\" + day;\n    let fullDate = year + \"-\" + month + \"-\" + day;\n    findTask.date = fullDate;\n    setTaskUpdate(findTask); // taskUpdate = findTask;\n    // taskUpdate.current = findTask;\n    // navigate(\"/updateForm\", {state : {findTask}})\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      className: \"navList\",\n      onClick: handleShow,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-tasks\",\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), ' ', \"To-Do List\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        className: \"todoOffCanvas\",\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"To-Do-List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        className: \"todoOffCanvas\",\n        children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n          clickedTask: {\n            taskUpdate,\n            setFecthTasks\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: \"todosContainer\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(ListGroup, {\n                as: \"ol\",\n                variant: \"flush\",\n                numbered: true,\n                className: \"todosList\",\n                children: tasks.map((tasks, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  as: \"li\",\n                  className: \"d-flex justify-content-between align-items-start todosList\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"category\",\n                    className: \"ms-2 me-auto\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      id: tasks._id,\n                      onClick: handleClick,\n                      className: \"fw-bold cursor-pointer\",\n                      children: tasks.task\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 25\n                    }, this), tasks.category]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                    id: \"date\",\n                    bg: \"primary\",\n                    pill: true,\n                    className: \"badgeList\",\n                    children: ['Due Date: ', new Date(tasks.date).toLocaleDateString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SideNavbar, \"RyeVpSnT4xgaB5aMyrpUzpE+fS4=\");\n\n_c = SideNavbar;\nexport default SideNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideNavbar\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/test11070/src/components/Todos.js"],"names":["React","useState","useEffect","useContext","useRef","useNavigate","NavLink","Row","Col","Container","Fade","Button","ListGroup","Badge","Offcanvas","TodoForm","UserContext","SideNavbar","state","dispatch","fecthTasks","setFecthTasks","tasks","setTasks","taskUpdate","setTaskUpdate","show","setShow","handleClose","handleShow","showTasks","jwtIDToken","localStorage","getItem","console","log","response","fetch","method","data","json","error","handleClick","e","taskId","target","id","findTask","find","clickedTask","_id","oldDate","Date","date","day","getDate","month","getMonth","year","getFullYear","fullDate","map","index","task","category","toLocaleDateString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { useNavigate, NavLink } from 'react-router-dom'\r\nimport { Row, Col, Container, Fade, Button, ListGroup, Badge } from 'react-bootstrap';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport '../stylesheets/todos.css'\r\nimport TodoForm from './TodoForm';\r\nimport { UserContext } from '../App'\r\n\r\nconst SideNavbar = () => {\r\n\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [fecthTasks, setFecthTasks] = useState();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [taskUpdate, setTaskUpdate] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setTaskUpdate(null);\r\n  }\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n\r\n\r\n  const showTasks = async () => {\r\n    try {\r\n      const jwtIDToken = localStorage.getItem('token');\r\n      console.log(jwtIDToken);\r\n      const response = await fetch('https://taskhive-backend-testing.onrender.com/showTasks', {\r\n        method: 'GET',\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(data)\r\n      setTasks(data);\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    showTasks();\r\n  }, [fecthTasks])\r\n\r\n\r\n  const handleClick = (e) => {\r\n\r\n    const taskId = e.target.id;\r\n\r\n    const findTask = tasks.find(clickedTask => clickedTask._id === taskId);\r\n\r\n    let oldDate = new Date(findTask.date)\r\n    let day = oldDate.getDate();\r\n    let month = oldDate.getMonth() + 1;\r\n    let year = oldDate.getFullYear();\r\n\r\n    if (month < 10) month = \"0\" + month;\r\n    if (day < 10) day = \"0\" + day;\r\n\r\n    let fullDate = year + \"-\" + month + \"-\" + day;\r\n\r\n    findTask.date = fullDate;\r\n\r\n    setTaskUpdate(findTask)\r\n    // taskUpdate = findTask;\r\n    // taskUpdate.current = findTask;\r\n    // navigate(\"/updateForm\", {state : {findTask}})\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ListGroup.Item className='navList' onClick={handleShow}>\r\n        <i className='fas fa-tasks'>&nbsp;</i>\r\n        {' '}\r\n        To-Do List\r\n      </ListGroup.Item>\r\n\r\n      <Offcanvas show={show} onHide={handleClose} >\r\n        <Offcanvas.Header closeButton className='todoOffCanvas'>\r\n          <Offcanvas.Title>To-Do-List</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body className='todoOffCanvas'>\r\n          <TodoForm clickedTask={{ taskUpdate, setFecthTasks }} />\r\n          <Container className='todosContainer'>\r\n            <Row>\r\n              <Col>\r\n                <ListGroup as=\"ol\" variant=\"flush\" numbered className='todosList'>\r\n                  {tasks.map((tasks, index) =>\r\n                    <ListGroup.Item as=\"li\" key={index} className=\"d-flex justify-content-between align-items-start todosList\">\r\n                      <div id='category' className=\"ms-2 me-auto\">\r\n                        <div id={tasks._id} onClick={handleClick} className=\"fw-bold cursor-pointer\">\r\n                          {tasks.task}\r\n                        </div>\r\n\r\n                        {tasks.category}\r\n                      </div>\r\n                      <Badge id='date' bg=\"primary\" pill className='badgeList'>\r\n                        {'Due Date: '}{new Date(tasks.date).toLocaleDateString()}\r\n                      </Badge>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                </ListGroup>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n\r\n\r\n\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SideNavbar\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}